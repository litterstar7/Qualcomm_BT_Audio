<?xml version="1.0" encoding="utf-8"?>
<ConfigSet Product="Sink"
           Version="20">
    <!--Define Group declares Patterns (think of them as arrays of structures) which tend to recurr throughout the Configuration Set-->
    <DefineGroup>
        <!--Define Lists that can be used in both Pattern Headers and Pattern Bodies (and Generic Config Items and Groups for that matter)-->
        <!--these are designed to remove the need for duplication of symbolic information-->
        <DefineList Id="User Event">
            <!--Note the leading 0x40 is stripped off below, as it is implied by them all being user events, not s-->
            <enum key="..."
                  value="0x00"/>
            <enum key="Power On"
                  value="0x01"/>
            <enum key="Power Off"
                  value="0x02"/>
            <enum key="Enter Pairing"
                  value="0x03"/>
            <enum key="Initiate Voice Dial"
                  value="0x04"/>
            <enum key="Initiate Voice Dial AG2"
                  value="0x05"/>
            <enum key="Last Number Redial"
                  value="0x06"/>
            <enum key="Last Number Redial AG2"
                  value="0x07"/>
            <enum key="Answer"
                  value="0x08"/>
            <enum key="Reject"
                  value="0x09"/>
            <enum key="Cancel End"
                  value="0x0A"/>
            <enum key="Transfer Toggle"
                  value="0x0B"/>
            <enum key="Mute Toggle"
                  value="0x0C"/>
            <enum key="Volume Up"
                  value="0x0D"/>
            <enum key="Volume Down"
                  value="0x0E"/>
            <enum key="Volume Toggle"
                  value="0x0F"/>
            <enum key="Three Way Release All Held"
                  value="0x10"/>
            <enum key="Three Way Accept Waiting Release Active"
                  value="0x11"/>
            <enum key="Three Way Accept Waiting Hold Active"
                  value="0x12"/>
            <enum key="Three Way Add Held To 3 Way"
                  value="0x13"/>
            <enum key="Three Way Connect 2 Disconnect"
                  value="0x14"/>
            <enum key="LEDs On Off Toggle"
                  value="0x15"/>
            <enum key="LEDs On"
                  value="0x16"/>
            <enum key="LEDs Off"
                  value="0x17"/>
            <enum key="Establish SLC"
                  value="0x18"/>
            <enum key="Mute On"
                  value="0x19"/>
            <enum key="Mute Off"
                  value="0x1A"/>
            <enum key="Enter TX Cont Test Mode"
                  value="0x1B"/>
            <enum key="Enter DUT State"
                  value="0x1C"/>
            <enum key="Bass Boost Enable Disable Toggle"
                  value="0x1D"/>
            <enum key="Place Incoming Call On Hold"
                  value="0x1E"/>
            <enum key="Accept Held Incoming Call"
                  value="0x1F"/>
            <enum key="Reject Held Incoming Call"
                  value="0x20"/>
            <enum key="Enter DFU Mode"
                  value="0x21"/>
            <enum key="Enter Driverless DFU Mode"
                  value="0x22"/>
            <enum key="Enter Service Mode"
                  value="0x23"/>
            <enum key="Audio Prompts On"
                  value="0x24"/>
            <enum key="Audio Prompts Off"
                  value="0x25"/>
            <enum key="Dial Stored Number"
                  value="0x26"/>
            <enum key="Update Stored Number"
                  value="0x27"/>
            <enum key="Restore Defaults"
                  value="0x28"/>
            <enum key="Confirmation Accept"
                  value="0x29"/>
            <enum key="Confirmation Reject"
                  value="0x2A"/>
            <enum key="Select Audio Prompt Language Mode"
                  value="0x2B"/>
            <enum key="Quick Charge Stat Interrupt"
                  value="0x2C"/>
            <enum key="Multipoint On"
                  value="0x2D"/>
            <enum key="Multipoint Off"
                  value="0x2E"/>
            <enum key="Switch Audio Mode"
                  value="0x2F"/>
            <enum key="Button Locking On"
                  value="0x30"/>
            <enum key="Button Locking Off"
                  value="0x31"/>
            <enum key="Button Locking Toggle"
                  value="0x32"/>
            <enum key="Party Mode Toggle"
                  value="0x33"/>
            <enum key="RSSI Pair"
                  value="0x34"/>
            <enum key="Bass Boost On"
                  value="0x35"/>
            <enum key="Bass Boost Off"
                  value="0x36"/>
            <enum key="3D Enhancement On"
                  value="0x37"/>
            <enum key="3D Enhancement Off"
                  value="0x38"/>
            <enum key="Select Audio Source Next"
                  value="0x39"/>
            <enum key="Select Audio Source Wired"
                  value="0x3A"/>
            <enum key="Select Audio Source USB"
                  value="0x3B"/>
            <enum key="Select Audio Source AG1"
                  value="0x3C"/>
            <enum key="Select Audio Source AG2"
                  value="0x3D"/>
            <enum key="Select FM Audio Source"
                  value="0x3E"/>
            <enum key="Select Audio Source None"
                  value="0x3F"/>
            <enum key="PBAP Dial Ich"
                  value="0x40"/>
            <enum key="PBAP Dial Mch"
                  value="0x41"/>
            <enum key="Intelligent Power Management On"
                  value="0x42"/>
            <enum key="Intelligent Power Management Off"
                  value="0x43"/>
            <enum key="Intelligent Power Management Toggle"
                  value="0x44"/>
            <enum key="AVRCP Play Pause"
                  value="0x45"/>
            <enum key="AVRCP Stop"
                  value="0x46"/>
            <enum key="AVRCP Skip Forward"
                  value="0x47"/>
            <enum key="AVRCP Skip Backward"
                  value="0x48"/>
            <enum key="AVRCP Fast Forward Press"
                  value="0x49"/>
            <enum key="AVRCP Fast Forward Release"
                  value="0x4A"/>
            <enum key="AVRCP Rewind Press"
                  value="0x4B"/>
            <enum key="AVRCP Rewind Release"
                  value="0x4C"/>
            <enum key="AVRCP Shuffle Off"
                  value="0x4D"/>
            <enum key="AVRCP Shuffle All Track"
                  value="0x4E"/>
            <enum key="AVRCP Shuffle Group"
                  value="0x4F"/>
            <enum key="AVRCP Repeat Off"
                  value="0x50"/>
            <enum key="AVRCP Repeat Single Track"
                  value="0x51"/>
            <enum key="AVRCP Repeat All Track"
                  value="0x52"/>
            <enum key="AVRCP Repeat Group"
                  value="0x53"/>
            <enum key="AVRCP Play"
                  value="0x54"/>
            <enum key="AVRCP Pause"
                  value="0x55"/>
            <enum key="AVRCP Toggle Active"
                  value="0x56"/>
            <enum key="AVRCP Next Group"
                  value="0x57"/>
            <enum key="AVRCP Previous Group"
                  value="0x58"/>
            <enum key="PBAP Set Phonebook"
                  value="0x59"/>
            <enum key="PBAP Browse Entry"
                  value="0x5A"/>
            <enum key="PBAP Browse List"
                  value="0x5B"/>
            <enum key="PBAP Download Phonebook"
                  value="0x5C"/>
            <enum key="PBAP Select Phonebook Object"
                  value="0x5D"/>
            <enum key="PBAP Browse Complete"
                  value="0x5E"/>
            <enum key="PBAP Get Phonebook Size"
                  value="0x5F"/>
            <enum key="USB Play Pause"
                  value="0x60"/>
            <enum key="USB Stop"
                  value="0x61"/>
            <enum key="USB Fwd"
                  value="0x62"/>
            <enum key="USB Back"
                  value="0x63"/>
            <enum key="USB Mute"
                  value="0x64"/>
            <enum key="USB Low Power Mode"
                  value="0x65"/>
            <enum key="Test Mode Audio"
                  value="0x66"/>
            <enum key="Test Mode Tone"
                  value="0x67"/>
            <enum key="Test Mode Key"
                  value="0x68"/>
            <enum key="Test Defrag"
                  value="0x69"/>
            <enum key="Debug Keys Toggle"
                  value="0x6A"/>
            <enum key="Speech Recognition Tuning Start"
                  value="0x6B"/>
            <enum key="WBS Test Set Codecs"
                  value="0x6C"/>
            <enum key="WBS Test Override Response"
                  value="0x6D"/>
            <enum key="WBS Test Set Codecs Send BAC"
                  value="0x6E"/>
            <enum key="Create Audio Connection"
                  value="0x6F"/>
            <enum key="GAIA User 1"
                  value="0x70"/>
            <enum key="GAIA User 2"
                  value="0x71"/>
            <enum key="GAIA User 3"
                  value="0x72"/>
            <enum key="GAIA User 4"
                  value="0x73"/>
            <enum key="GAIA User 5"
                  value="0x74"/>
            <enum key="GAIA User 6"
                  value="0x75"/>
            <enum key="GAIA User 7"
                  value="0x76"/>
            <enum key="GAIA User 8"
                  value="0x77"/>
            <enum key="FM Rx On"
                  value="0x78"/>
            <enum key="FM Rx Off"
                  value="0x79"/>
            <enum key="FM Rx Tune Up"
                  value="0x7A"/>
            <enum key="FM Rx Tune Down"
                  value="0x7B"/>
            <enum key="FM Rx Store"
                  value="0x7C"/>
            <enum key="FM Rx Tune To Store"
                  value="0x7D"/>
            <enum key="FM Rx Erase"
                  value="0x7E"/>
            <enum key="Swap A2DP Media Channel"
                  value="0x7F"/>
            <enum key="External Mic Connected"
                  value="0x80"/>
            <enum key="External Mic Disconnected"
                  value="0x81"/>
            <enum key="SSR On"
                  value="0x82"/>
            <enum key="SSR Off"
                  value="0x83"/>
            <enum key="NFC Tag Detected"
                  value="0x84"/>
            <enum key="Subwoofer Start Inquiry"
                  value="0x85"/>
            <enum key="Subwoofer Volume Down"
                  value="0x86"/>
            <enum key="Subwoofer Volume Up"
                  value="0x87"/>
            <enum key="Subwoofer Delete Pairing"
                  value="0x88"/>
            <enum key="Peer Session Inquire"
                  value="0x89"/>
            <enum key="Peer Session Conn Disc"
                  value="0x8A"/>
            <enum key="Peer Session End"
                  value="0x8B"/>
            <enum key="Battery Level Request"
                  value="0x8C"/>
            <enum key="Volume Orientation Normal"
                  value="0x8D"/>
            <enum key="Volume Orientation Invert"
                  value="0x8E"/>
            <enum key="Reset Paired Device List"
                  value="0x8F"/>
            <enum key="Enter Dut Mode"
                  value="0x90"/>
            <enum key="3D Enhancement Enable Disable Toggle"
                  value="0x91"/>
            <enum key="RC Volume Up"
                  value="0x92"/>
            <enum key="RC Volume Down"
                  value="0x93"/>
            <enum key="Enter BootMode2"
                  value="0x94"/>
            <enum key="Charger Connected"
                  value="0x95"/>
            <enum key="Charger Disconnected"
                  value="0x96"/>
            <enum key="Subwoofer Disconnect"
                  value="0x97"/>
            <enum key="Analog Audio Connected"
                  value="0x98"/>
            <enum key="Analog Audio Disconnected"
                  value="0x99"/>
            <enum key="GAIA DFU Request"
                  value="0x9A"/>
            <enum key="Start IR Learning Mode"
                  value="0x9B"/>
            <enum key="Stop IR Learning Mode"
                  value="0x9C"/>
            <enum key="Clear IR Codes"
                  value="0x9D"/>
            <enum key="User EQ On"
                  value="0x9E"/>
            <enum key="User EQ Off"
                  value="0x9F"/>
            <enum key="User EQ On/Off Toggle"
                  value="0xA0"/>
            <enum key="BLE RC: Enable Pairing Mode"
                  value="0xA1"/>
            <enum key="BLE RC: Disable Pairing Mode"
                  value="0xA2"/>
            <enum key="BLE RC: Enable PTS Test Mode"
                  value="0xA3"/>
            <enum key="BLE RC: Disable PTS Test Mode"
                  value="0xA4"/>
            <enum key="BLE RC: Connect Stored Remote"
                  value="0xA5"/>
            <enum key="BLE RC: Disconnect Stored Remote"
                  value="0xA6"/>
            <enum key="BLE RC: PTS Mode Next Event"
                  value="0xA7"/>
            <enum key="BLE RC: Change Write Mode Priority"
                  value="0xA8"/>
            <enum key="BLE RC: Enter Suspend Mode"
                  value="0xA9"/>
            <enum key="BLE RC: Exit Suspend Mode"
                  value="0xAA"/>
            <enum key="BLE RC: Enable Notifications"
                  value="0xAB"/>
            <enum key="BLE RC: Disable Notifications"
                  value="0xAC"/>
            <enum key="SPDIF Audio Connected"
                  value="0xAD"/>
            <enum key="SPDIF Audio Disconnected"
                  value="0xAE"/>
            <enum key="Select Audio Source SPDIF"
                  value="0xAF"/>
            <enum key="Change TWS Audio Routing"
                  value="0xB0"/>
            <enum key="TWS Master Device Trim Volume Up"
                  value="0xB1"/>
            <enum key="TWS Master Device Trim Volume Down"
                  value="0xB2"/>
            <enum key="TWS Slave Device Trim Volume Up"
                  value="0xB3"/>
            <enum key="TWS Slave Device Trim Volume Down"
                  value="0xB4"/>
        </DefineList>
        <DefineList Id="System Event">
            <enum key="...."
                  value="0x0000"/>
            <enum key="Pairing Fail"
                  value="0x4700"/>
            <enum key="Pairing Successful"
                  value="0x4701"/>
            <enum key="SCO Link Open"
                  value="0x4702"/>
            <enum key="SCO Link Close"
                  value="0x4703"/>
            <enum key="Battery Low"
                  value="0x4704"/>
            <enum key="End Of Call"
                  value="0x4705"/>
            <enum key="LED Event Complete"
                  value="0x4706"/>
            <enum key="Auto Switch Off"
                  value="0x4707"/>
            <enum key="Charge Complete"
                  value="0x4708"/>
            <enum key="Charge In Progress"
                  value="0x4709"/>
            <enum key="Battery Ok"
                  value="0x470A"/>
            <enum key="Battery Critical"
                  value="0x470B"/>
            <enum key="Charge Disabled"
                  value="0x470C"/>
            <enum key="Gas Gauge 0"
                  value="0x470D"/>
            <enum key="Gas Gauge 1"
                  value="0x470E"/>
            <enum key="Gas Gauge 2"
                  value="0x470F"/>
            <enum key="Gas Gauge 3"
                  value="0x4710"/>
            <enum key="Charger Gas Gauge 0"
                  value="0x4711"/>
            <enum key="Charger Gas Gauge 1"
                  value="0x4712"/>
            <enum key="Charger Gas Gauge 2"
                  value="0x4713"/>
            <enum key="Charger Gas Gauge 3"
                  value="0x4714"/>
            <enum key="SLC Connected"
                  value="0x4715"/>
            <enum key="SLC Disconnected"
                  value="0x4716"/>
            <enum key="Link Loss"
                  value="0x4717"/>
            <enum key="Limbo Timeout"
                  value="0x4718"/>
            <enum key="Network Or Service Not Present"
                  value="0x4719"/>
            <enum key="Network Or Service Present"
                  value="0x471A"/>
            <enum key="Mute Reminder"
                  value="0x471B"/>
            <enum key="Reset Complete"
                  value="0x471C"/>
            <enum key="Error"
                  value="0x471D"/>
            <enum key="Long Timer"
                  value="0x471E"/>
            <enum key="VLong Timer"
                  value="0x471F"/>
            <enum key="Enable Power Off"
                  value="0x4720"/>
            <enum key="Cancel LED Indication"
                  value="0x4721"/>
            <enum key="Call Answered"
                  value="0x4722"/>
            <enum key="Enter Pairing Empty PDL"
                  value="0x4723"/>
            <enum key="Reconnect Failed"
                  value="0x4724"/>
            <enum key="Check For Audio Transfer"
                  value="0x4725"/>
            <enum key="Gaia Alert LEDs"
                  value="0x4726"/>
            <enum key="Service Mode Entered"
                  value="0x4727"/>
            <enum key="Audio Message 1"
                  value="0x4728"/>
            <enum key="Audio Message 2"
                  value="0x4729"/>
            <enum key="Audio Message 3"
                  value="0x472A"/>
            <enum key="Audio Message 4"
                  value="0x472B"/>
            <enum key="Continue SLC Connect Request"
                  value="0x472C"/>
            <enum key="SLC Connected After Power On"
                  value="0x472D"/>
            <enum key="Establish SLC On Panic"
                  value="0x472E"/>
            <enum key="Connectable Timeout"
                  value="0x472F"/>
            <enum key="Tone 1"
                  value="0x4730"/>
            <enum key="Tone 2"
                  value="0x4731"/>
            <enum key="Stream Establish"
                  value="0x4732"/>
            <enum key="Reset LED Timeout"
                  value="0x4733"/>
            <enum key="Start Paging In Conn State"
                  value="0x4734"/>
            <enum key="Stop Paging In Conn State"
                  value="0x4735"/>
            <enum key="Multipoint Call Waiting"
                  value="0x4736"/>
            <enum key="Refresh Encryption"
                  value="0x4737"/>
            <enum key="Button Blocked By Lock"
                  value="0x4738"/>
            <enum key="Speech Recognition Start"
                  value="0x4739"/>
            <enum key="Speech Recognition Stop"
                  value="0x473A"/>
            <enum key="Speech Recognition Tuning Yes"
                  value="0x473B"/>
            <enum key="Speech Recognition Tuning No"
                  value="0x473C"/>
            <enum key="RSSI Pair Reminder"
                  value="0x473D"/>
            <enum key="RSSI Pair Timeout"
                  value="0x473E"/>
            <enum key="RSSI Resume"
                  value="0x473F"/>
            <enum key="Check Role"
                  value="0x4740"/>
            <enum key="Missed Call"
                  value="0x4741"/>
            <enum key="A2DP Connected"
                  value="0x4742"/>
            <enum key="A2DP Disconnected"
                  value="0x4743"/>
            <enum key="Volume Max"
                  value="0x4744"/>
            <enum key="Volume Min"
                  value="0x4745"/>
            <enum key="Check Audio Routing"
                  value="0x4746"/>
            <enum key="Confirmation Request"
                  value="0x4747"/>
            <enum key="Passkey Display"
                  value="0x4748"/>
            <enum key="Pin Code Request"
                  value="0x4749"/>
            <enum key="Establish PBAP"
                  value="0x474A"/>
            <enum key="PBAP Dial Fail"
                  value="0x474B"/>
            <enum key="MAPc Msg Notification"
                  value="0x474C"/>
            <enum key="MAPc MNS Success"
                  value="0x474D"/>
            <enum key="MAPc MNS Failed"
                  value="0x474E"/>
            <enum key="Power On Panic"
                  value="0x474F"/>
            <enum key="USB Dead Battery Timeout"
                  value="0x4750"/>
            <enum key="Ringtone 1"
                  value="0x4751"/>
            <enum key="Ringtone 2"
                  value="0x4752"/>
            <enum key="Primary Device Connected"
                  value="0x4753"/>
            <enum key="Secondary Device Connected"
                  value="0x4754"/>
            <enum key="Update Attributes"
                  value="0x4755"/>
            <enum key="Reset AVRCP Mode"
                  value="0x4756"/>
            <enum key="Check Audio Amp Drive"
                  value="0x4757"/>
            <enum key="Codec SBC"
                  value="0x4758"/>
            <enum key="Codec MP3"
                  value="0x4759"/>
            <enum key="Codec AAC"
                  value="0x475A"/>
            <enum key="Codec aptX"
                  value="0x475B"/>
            <enum key="Codec aptX Low Latency"
                  value="0x475C"/>
            <enum key="Codec Faststream"
                  value="0x475D"/>
            <enum key="Subwoofer Check Pairing"
                  value="0x475E"/>
            <enum key="Subwoofer Open LL Media"
                  value="0x475F"/>
            <enum key="Subwoofer Open Std Media"
                  value="0x4760"/>
            <enum key="Subwoofer Close Media"
                  value="0x4761"/>
            <enum key="Subwoofer Start Streaming"
                  value="0x4762"/>
            <enum key="Subwoofer Suspend Streaming"
                  value="0x4763"/>
            <enum key="PartyMode Timeout Device1"
                  value="0x4764"/>
            <enum key="PartyMode Timeout Device2"
                  value="0x4765"/>
            <enum key="Volume Change Timer"
                  value="0x4766"/>
            <enum key="Store Audio Prompt Language"
                  value="0x4767"/>
            <enum key="IR Code Learn Success"
                  value="0x4768"/>
            <enum key="IR Code Learn Fail"
                  value="0x4769"/>
            <enum key="IR Learning Mode Time-out"
                  value="0x476A"/>
            <enum key="IR Learning Mode Reminder"
                  value="0x476B"/>
            <enum key="Set Active AVRCP Connection"
                  value="0x476C"/>
            <enum key="Tone Digit 0"
                  value="0x476D"/>
            <enum key="Tone Digit 1"
                  value="0x476E"/>
            <enum key="Tone Digit 2"
                  value="0x476F"/>
            <enum key="Tone Digit 3"
                  value="0x4770"/>
            <enum key="Tone Digit 4"
                  value="0x4771"/>
            <enum key="Tone Digit 5"
                  value="0x4772"/>
            <enum key="Tone Digit 6"
                  value="0x4773"/>
            <enum key="Tone Digit 7"
                  value="0x4774"/>
            <enum key="Tone Digit 8"
                  value="0x4775"/>
            <enum key="Tone Digit 9"
                  value="0x4776"/>
            <enum key="BLE RC: Pairing Mode Timeout"
                  value="0x4777"/>
            <enum key="BLE RC: Pairing Success"
                  value="0x4778"/>
            <enum key="BLE RC: Pairing Failed"
                  value="0x4779"/>
            <enum key="BLE RC: Remote Connected"
                  value="0x477A"/>
            <enum key="IR/BLE Remote Control Code Received"
                  value="0x477B"/>
            <enum key="Primary Device Disconnected"
                  value="0x477C"/>
            <enum key="Secondary Device Disconnected"
                  value="0x477D"/>
            <enum key="Subwoofer Set Volume"
                  value="0x477E"/>
            <enum key="Trim Volume Max"
                  value="0x477F"/>
            <enum key="Trim Volume Min"
                  value="0x4780"/>
            <enum key="Ble Remote All Disconnected"
                  value="0x4781"/>
            <enum key="Gaia EQ Changes Store Timeout"
                  value="0x4782"/>
            <enum key="PS Defrag check"
                  value="0x4783"/>
            <enum key="PS Defrag action"
                  value="0x4784"/>
	    <enum key="Audio Amplifier Power Down"
                  value="0x4785"/>                    
        </DefineList>
        <DefineList Id="States">
            <enum key="Powering On"
                  value="0"/>
            <enum key="Connectable"
                  value="1"/>
            <enum key="Connectable/Discoverable"
                  value="2"/>
            <enum key="Connected"
                  value="3"/>
            <enum key="Outgoing Call"
                  value="4"/>
            <enum key="Incoming Call"
                  value="5"/>
            <enum key="Ongoing Call with SCO"
                  value="6"/>
            <enum key="Test Mode"
                  value="7"/>
            <enum key="TWC Call Waiting"
                  value="8"/>
            <enum key="TWC Call On Hold"
                  value="9"/>
            <enum key="TWC Multi Party Call"
                  value="10"/>
            <enum key="TWC Incoming Call On Hold"
                  value="11"/>
            <enum key="Ongoing Call without SCO"
                  value="12"/>
            <enum key="Streaming A2DP"
                  value="13"/>
        </DefineList>
        <DefineList Id="PIO">
            <enum key="PIO 0"
                  value="0"/>
            <enum key="PIO 1"
                  value="1"/>
            <enum key="PIO 2"
                  value="2"/>
            <enum key="PIO 3"
                  value="3"/>
            <enum key="PIO 4"
                  value="4"/>
            <enum key="PIO 5"
                  value="5"/>
            <enum key="PIO 6"
                  value="6"/>
            <enum key="PIO 7"
                  value="7"/>
            <enum key="PIO 8"
                  value="8"/>
            <enum key="PIO 9"
                  value="9"/>
            <enum key="PIO 10"
                  value="10"/>
            <enum key="PIO 11"
                  value="11"/>
            <enum key="PIO 12"
                  value="12"/>
            <enum key="PIO 13"
                  value="13"/>
            <enum key="PIO 14"
                  value="14"/>
            <enum key="PIO 15"
                  value="15"/>
            <enum key="PIO 16"
                  value="16"/>
            <enum key="PIO 17"
                  value="17"/>
            <enum key="PIO 18"
                  value="18"/>
            <enum key="PIO 19"
                  value="19"/>
            <enum key="PIO 20"
                  value="20"/>
            <enum key="PIO 21"
                  value="21"/>
            <enum key="PIO 22"
                  value="22"/>
            <enum key="PIO 23"
                  value="23"/>
            <enum key="PIO 24"
                  value="24"/>
            <enum key="PIO 25"
                  value="25"/>
            <enum key="PIO 26"
                  value="26"/>
            <enum key="PIO 27"
                  value="27"/>
            <enum key="PIO 28"
                  value="28"/>
            <enum key="PIO 29"
                  value="29"/>
            <enum key="PIO 30"
                  value="30"/>
            <enum key="PIO 31"
                  value="31"/>
            <enum key="N/A"
                  value="255"/>
        </DefineList>
        <DefineList Id="PIO for inputs">
            <enum key="PIO 0"
                  value="0"/>
            <enum key="PIO 1"
                  value="1"/>
            <enum key="PIO 2"
                  value="2"/>
            <enum key="PIO 3"
                  value="3"/>
            <enum key="PIO 4"
                  value="4"/>
            <enum key="PIO 5"
                  value="5"/>
            <enum key="PIO 6"
                  value="6"/>
            <enum key="PIO 7"
                  value="7"/>
            <enum key="PIO 8"
                  value="8"/>
            <enum key="PIO 9"
                  value="9"/>
            <enum key="PIO 10"
                  value="10"/>
            <enum key="PIO 11"
                  value="11"/>
            <enum key="PIO 12"
                  value="12"/>
            <enum key="PIO 13"
                  value="13"/>
            <enum key="PIO 14"
                  value="14"/>
            <enum key="PIO 15"
                  value="15"/>
            <enum key="PIO 16"
                  value="16"/>
            <enum key="PIO 17"
                  value="17"/>
            <enum key="PIO 18"
                  value="18"/>
            <enum key="PIO 19"
                  value="19"/>
            <enum key="PIO 20"
                  value="20"/>
            <enum key="PIO 21"
                  value="21"/>
            <enum key="PIO 22"
                  value="22"/>
            <enum key="PIO 23"
                  value="23"/>
            <enum key="PIO 24"
                  value="24"/>
            <enum key="PIO 25"
                  value="25"/>
            <enum key="PIO 26"
                  value="26"/>
            <enum key="PIO 27"
                  value="27"/>
            <enum key="PIO 28"
                  value="28"/>
            <enum key="PIO 29"
                  value="29"/>
            <enum key="PIO 30"
                  value="30"/>
            <enum key="PIO 31"
                  value="31"/>
            <enum key="Disable"
                  value="254"/>
            <enum key="Always detect"
                  value="255"/>
        </DefineList>
        <DefineList Id="PIO 5 bit">
            <enum key="PIO 0"
                  value="0"/>
            <enum key="PIO 1"
                  value="1"/>
            <enum key="PIO 2"
                  value="2"/>
            <enum key="PIO 3"
                  value="3"/>
            <enum key="PIO 4"
                  value="4"/>
            <enum key="PIO 5"
                  value="5"/>
            <enum key="PIO 6"
                  value="6"/>
            <enum key="PIO 7"
                  value="7"/>
            <enum key="PIO 8"
                  value="8"/>
            <enum key="PIO 9"
                  value="9"/>
            <enum key="PIO 10"
                  value="10"/>
            <enum key="PIO 11"
                  value="11"/>
            <enum key="PIO 12"
                  value="12"/>
            <enum key="PIO 13"
                  value="13"/>
            <enum key="PIO 14"
                  value="14"/>
            <enum key="PIO 15"
                  value="15"/>
            <enum key="PIO 16"
                  value="16"/>
            <enum key="PIO 17"
                  value="17"/>
            <enum key="PIO 18"
                  value="18"/>
            <enum key="PIO 19"
                  value="19"/>
            <enum key="PIO 20"
                  value="20"/>
            <enum key="PIO 21"
                  value="21"/>
            <enum key="PIO 22"
                  value="22"/>
            <enum key="PIO 23"
                  value="23"/>
            <enum key="PIO 24"
                  value="24"/>
            <enum key="PIO 25"
                  value="25"/>
            <enum key="PIO 26"
                  value="26"/>
            <enum key="PIO 27"
                  value="27"/>
            <enum key="PIO 28"
                  value="28"/>
            <enum key="PIO 29"
                  value="29"/>
            <enum key="PIO 30"
                  value="30"/>
            <enum key="PIO 31"
                  value="31"/>
            <!--<enum key="CAP 0"
                          value="64"/>
                    <enum key="CAP 1"
                          value="65"/>
                    <enum key="CAP 2"
                          value="66"/>
                    <enum key="CAP 3"
                          value="67"/>
                    <enum key="CAP 4"
                          value="68"/>
                    <enum key="CAP 5"
                          value="69"/>
                    <enum key="CAP 6"
                          value="70"/>
                    <enum key="CAP 7"
                          value="71"/>
                    <enum key="CAP 8"
                          value="72"/>
                    <enum key="CAP 9"
                          value="73"/>-->
        </DefineList>
        <DefineList Id="LED 4 bit">
            <enum key="PIO 0"
                  value="0"/>
            <enum key="PIO 1"
                  value="1"/>
            <enum key="PIO 2"
                  value="2"/>
            <enum key="PIO 3"
                  value="3"/>
            <enum key="PIO 4"
                  value="4"/>
            <enum key="PIO 5"
                  value="5"/>
            <enum key="PIO 6"
                  value="6"/>
            <enum key="PIO 7"
                  value="7"/>
            <enum key="PIO 8"
                  value="8"/>
            <enum key="PIO 9"
                  value="9"/>
            <enum key="LED 2"
                  value="10"/>
            <enum key="Tri A+B"
                  value="11"/>
            <enum key="Tri B+C"
                  value="12"/>
            <enum key="Tri A+C"
                  value="13"/>
            <enum key="LED 0"
                  value="14"/>
            <enum key="LED 1"
                  value="15"/>
        </DefineList>
        <DefineList Id="LED Colour">
            <enum key="Reserved"
                  value="0"/>
            <enum key="LED A"
                  value="1"/>
            <enum key="LED B"
                  value="2"/>
            <enum key="ALT"
                  value="3"/>
            <enum key="BOTH"
                  value="4"/>
        </DefineList>
        <DefineList Id="Tone">
            <enum key="No Tone"
                  desc="No Tone Configured"
                  value="0"/>
            <enum key="Middle 0"
                  desc="300ms G5"
                  value="1"/>
            <enum key="Short 1"
                  desc="100ms C6"
                  value="2"/>
            <enum key="Short 2"
                  desc="100ms E6"
                  value="3"/>
            <enum key="Short 3"
                  desc="100ms G6"
                  value="4"/>
            <enum key="Short 4"
                  desc="100ms AS6"
                  value="5"/>
            <enum key="Short 5"
                  desc="100ms C7"
                  value="6"/>
            <enum key="Short 6"
                  desc="100ms D7"
                  value="7"/>
            <enum key="Short 7"
                  desc="100ms E7"
                  value="8"/>
            <enum key="Short 8"
                  desc="100ms FS7"
                  value="9"/>
            <enum key="Middle 9"
                  desc="300ms GS7"
                  value="10"/>
            <enum key="4 Note Rising Scale"
                  desc="150ms GS4 DS5 GS5 C6"
                  value="11"/>
            <enum key="4 Note Falling Scale"
                  desc="150ms C6 GS5 DS5 GS4"
                  value="12"/>
            <enum key="2 Note Rising Scale"
                  desc="200ms E6 A6"
                  value="13"/>
            <enum key="2 Note Falling Scale"
                  desc="300ms A6 E6"
                  value="14"/>
            <enum key="Long High Short Low"
                  desc="400ms G7 100ms G5"
                  value="15"/>
            <enum key="Short Middle - GS7"
                  desc="100ms GS7"
                  value="16"/>
            <enum key="Long Middle"
                  desc="500ms GS7"
                  value="17"/>
            <enum key="Long Low"
                  desc="500ms G5"
                  value="18"/>
            <enum key="Short High"
                  desc="100ms G6"
                  value="19"/>
            <enum key="V Long High"
                  desc="800ms G6"
                  value="20"/>
            <enum key="Long High"
                  desc="500ms G6"
                  value="21"/>
            <enum key="Short Double Low"
                  desc="100ms G5 G5"
                  value="22"/>
            <enum key="Short Double High"
                  desc="100ms G6 G6"
                  value="23"/>
            <enum key="battery_low_tone"
                  desc="125ms E6 AS6 E6 AS6 E6"
                  value="24"/>
            <enum key="low_500ms_tone"
                  desc="500ms G5"
                  value="25"/>
            <enum key="Long Double Low"
                  desc="500ms G5 REST G5"
                  value="26"/>
            <enum key="ring_twilight"
                  desc="Ring Tone"
                  value="27"/>
            <enum key="ring_g_s_t_q"
                  desc="Ring Tone"
                  value="28"/>
            <enum key="ring_valkyries"
                  desc="Ring Tone"
                  value="29"/>
            <enum key="ring_greensleeves"
                  desc="Ring Tone"
                  value="30"/>
            <enum key="ring_two_beeps"
                  desc="Ring Tone"
                  value="31"/>
            <enum key="ring_fairground"
                  desc="Ring Tone"
                  value="32"/>
            <enum key="ring_counterpoint"
                  desc="Ring Tone"
                  value="33"/>
            <enum key="ring_major_arp"
                  desc="Ring Tone"
                  value="34"/>
            <enum key="ring_major_scale"
                  desc="Ring Tone"
                  value="35"/>
            <enum key="ring_minor_arp"
                  desc="Ring Tone"
                  value="36"/>
            <enum key="ring_harmonic_minor_scale"
                  desc="Ring Tone"
                  value="37"/>
            <enum key="ring_more_than_a_feeling"
                  desc="Ring Tone"
                  value="38"/>
            <enum key="ring_eight_beeps"
                  desc="Ring Tone"
                  value="39"/>
            <enum key="ring_four_beeps"
                  desc="Ring Tone"
                  value="40"/>
            <enum key="ring_bumble_bee"
                  desc="Ring Tone"
                  value="41"/>
            <enum key="ring_aug_scale"
                  desc="Ring Tone"
                  value="42"/>
            <enum key="ring_dim_scale"
                  desc="Ring Tone"
                  value="43"/>
            <enum key="Custom Ring Tone"
                  desc="Ring Tone"
                  value="44"/>
            <enum key="4 Note Low to High"
                  desc="37.5ms G5 D6 G6 B5"
                  value="45"/>
            <enum key="4 Note High to Low"
                  desc="37.5ms B5 G6 D6 G5"
                  value="46"/>
            <enum key="Short High to Low"
                  desc="25ms G6 G5"
                  value="47"/>
            <enum key="5 Rapid High Tones"
                  desc="94ms B6 B6 B6 B6 B6"
                  value="48"/>
            <enum key="Long Low to High"
                  desc="100ms DS7 G7"
                  value="49"/>
            <enum key="Long High to Low"
                  desc="100ms G7 DS7"
                  value="50"/>
            <enum key="Short V High"
                  desc="50ms DS8"
                  value="51"/>
            <enum key="12 High/Higher beeps"
                  desc="50ms B6 G8 B6 G8 B6 G8 B6 G8 B6 G8 B6 G8"
                  value="52"/>
            <enum key="Short Middle - DS8"
                  desc="50ms DS8"
                  value="53"/>
            <enum key="5 High Beeps"
                  desc="50ms A6 REST A6 REST A6 REST A6 REST A6 REST"
                  value="54"/>
            <enum key="Medium Low to High"
                  desc="50ms B6 REST DS8"
                  value="55"/>
            <enum key="Medium High to Low"
                  desc="50ms DS8 REST B6"
                  value="56"/>
            <enum key="Short Middle Tone - D6"
                  desc="100ms D6"
                  value="57"/>
            <enum key="4 Low to High Long at Top"
                  desc="100ms G5 D6 G6 300ms B6"
                  value="58"/>
            <enum key="4 High to Low Long at Bottom"
                  desc="100ms B6 G6 D6 300ms G5"
                  value="59"/>
            <enum key="3 Note Descending"
                  desc="300ms G6 D6 G5"
                  value="60"/>
            <enum key="5th Down Medium-Long"
                  desc="300ms D6 500ms G5"
                  value="61"/>
            <enum key="5th Down Short-Short"
                  desc="100ms D6 G5"
                  value="62"/>
            <enum key="5th Up Short-Short"
                  desc="100ms G5 D6"
                  value="63"/>
            <enum key="2 Half Second Low Tones"
                  desc="500ms G5 REST G5"
                  value="64"/>
            <enum key="Short High Tone"
                  desc="100ms G7"
                  value="65"/>
            <enum key="Long Low Tone"
                  desc="400ms G5"
                  value="66"/>
            <enum key="Double Low Tones"
                  desc="200ms G5 REST G5"
                  value="67"/>
            <enum key="G Major Arp Up"
                  desc="125ms G6 B6 D7 G7"
                  value="68"/>
            <enum key="G Major Arp Down"
                  desc="125ms G7 D7 B6 G6"
                  value="69"/>
            <enum key="Fairly Short High Tone"
                  desc="150ms G7"
                  value="70"/>
            <enum key="Fairly Short Low Tone"
                  desc="150ms G5"
                  value="71"/>
            <enum key="Medium Length Low Tone"
                  desc="200ms G5"
                  value="72"/>
            <enum key="Short Low-High"
                  desc="80ms G5 G7"
                  value="73"/>
            <enum key="Double Octave Toggle Ring Tone"
                  desc="50ms G7 G5 G7 G5 G7 G5 Repeat after 250ms"
                  value="74"/>
            <enum key="Low Low High"
                  desc="100ms G5 G5 G7"
                  value="75"/>
            <enum key="Double Low Tones (long)"
                  desc="300ms G5 G5"
                  value="76"/>
            <enum key="Connected 3 Beep Rising Tone"
                  desc="48ms C6 D6 A6"
                  value="77"/>
            <enum key="Disconnected 3 Beep Falling Tone"
                  desc="48ms A6 D6 C6"
                  value="78"/>
            <enum key="Confirmation Rising Tone"
                  desc="68ms C5 E5"
                  value="79"/>
            <enum key="Double Beep Error Tone"
                  desc="68ms A5 REST A5"
                  value="80"/>
            <enum key="Low Batt Double Beep"
                  desc="125s E5 F5"
                  value="81"/>
            <enum key="Mute Off Double Beep"
                  desc="48ms A5 A4"
                  value="82"/>
            <enum key="Mute On Double Beep"
                  desc="48ms A4 A5"
                  value="83"/>
            <enum key="Single Tone"
                  desc="48ms A5"
                  value="84"/>
            <enum key="Shutdown Tone Double Beep"
                  desc="408ms A5 136mS A4"
                  value="85"/>
            <enum key="Phone Ring"
                  desc="48ms C6 E6 C6 E6 C6 E6 C6 E6 C6 E6 C6 REST C6 E6 C6 E6 C6 E6 C6 E6 C6 E6 C6"
                  value="86"/>
            <enum key="Power Up Tone"
                  desc="83ms C5 REST 83mS E5 REST 83mS G5 REST 124mS B5 498mS REST 372mS C6"
                  value="87"/>
            <enum key="Vol Level 7/0"
                  desc="68ms A5 REST A5"
                  value="88"/>
            <enum key="Vol Level 6"
                  desc="68ms DS6"
                  value="89"/>
            <enum key="Vol Level 5"
                  desc="68ms D6"
                  value="90"/>
            <enum key="Vol Level 4"
                  desc="68ms CS6"
                  value="91"/>
            <enum key="Vol Level 3"
                  desc="68ms C6"
                  value="92"/>
            <enum key="Vol Level 2"
                  desc="68ms B5"
                  value="93"/>
            <enum key="Vol Level 1"
                  desc="68ms AS5"
                  value="94"/>
        </DefineList>
        <DefineList Id="LED TriColour 4bit">
            <enum key="PIO 0"
                  value="0"/>
            <enum key="PIO 1"
                  value="1"/>
            <enum key="PIO 2"
                  value="2"/>
            <enum key="PIO 3"
                  value="3"/>
            <enum key="PIO 4"
                  value="4"/>
            <enum key="PIO 5"
                  value="5"/>
            <enum key="PIO 6"
                  value="6"/>
            <enum key="PIO 7"
                  value="7"/>
            <enum key="PIO 8"
                  value="8"/>
            <enum key="PIO 9"
                  value="9"/>
            <enum key="LED 2"
                  value="10"/>
            <enum key="LED 0"
                  value="14"/>
            <enum key="LED 1"
                  value="15"/>
        </DefineList>
        <DefineList Id="HFP">
            <enum key="HFP 0"
                  value="0"/>
            <enum key="HFP 1"
                  value="1"/>
            <enum key="HFP 2"
                  value="2"/>
            <enum key="HFP 3"
                  value="3"/>
            <enum key="HFP 4"
                  value="4"/>
            <enum key="HFP 5"
                  value="5"/>
            <enum key="HFP 6"
                  value="6"/>
            <enum key="HFP 7"
                  value="7"/>
            <enum key="HFP 8"
                  value="8"/>
            <enum key="HFP 9"
                  value="9"/>
            <enum key="HFP 10"
                  value="10"/>
            <enum key="HFP 11"
                  value="11"/>
            <enum key="HFP 12"
                  value="12"/>
            <enum key="HFP 13"
                  value="13"/>
            <enum key="HFP 14"
                  value="14"/>
            <enum key="HFP 15"
                  value="15"/>
        </DefineList>
        <DefineList Id="PIOs for Sequence">
            <enum key="N/A"
                  value="0"/>
            <enum key="PIO 0"
                  value="1"/>
            <enum key="PIO 1"
                  value="2"/>
            <enum key="PIO 2"
                  value="3"/>
            <enum key="PIO 3"
                  value="4"/>
            <enum key="PIO 4"
                  value="5"/>
            <enum key="PIO 5"
                  value="6"/>
            <enum key="PIO 6"
                  value="7"/>
            <enum key="PIO 7"
                  value="8"/>
            <enum key="PIO 8"
                  value="9"/>
            <enum key="PIO 9"
                  value="10"/>
            <enum key="PIO 10"
                  value="11"/>
            <enum key="PIO 11"
                  value="12"/>
            <enum key="PIO 12"
                  value="13"/>
            <enum key="PIO 13"
                  value="14"/>
            <enum key="PIO 14"
                  value="15"/>
            <enum key="PIO 15"
                  value="16"/>
            <enum key="PIO 16"
                  value="17"/>
            <enum key="PIO 17"
                  value="18"/>
            <enum key="PIO 18"
                  value="19"/>
            <enum key="PIO 19"
                  value="20"/>
            <enum key="PIO 20"
                  value="21"/>
            <enum key="PIO 21"
                  value="22"/>
            <enum key="PIO 22"
                  value="23"/>
            <enum key="PIO 23"
                  value="24"/>
            <enum key="PIO 24"
                  value="25"/>
            <enum key="PIO 25"
                  value="26"/>
            <enum key="PIO 26"
                  value="27"/>
            <enum key="PIO 27"
                  value="28"/>
            <enum key="PIO 28"
                  value="29"/>
            <enum key="PIO 29"
                  value="30"/>
            <enum key="PIO 30"
                  value="31"/>
            <enum key="PIO 31"
                  value="32"/>
        </DefineList>
        <DefineList Id="Audio Routing">
            <enum key="Left"
                  value="0"/>
            <enum key="Centre"
                  value="1"/>
            <enum key="Right"
                  value="2"/>
            <enum key="Surround Left"
                  value="3"/>
            <enum key="Surround Right"
                  value="4"/>
            <enum key="LFE"
                  value="5"/>
        </DefineList>
        <DefineList Id="DSP Plugin Type">
            <enum key="No DSP"
                  value="0"/>
            <enum key="CVC Headset 1-Mic"
                  value="1"/>
            <enum key="CVC Headset 1-Mic Bandwidth Extension"
                  value="2"/>
            <enum key="CVC Headset 2-Mic"
                  value="3"/>
            <enum key="CVC Headset 2-Mic Bandwidth Extension"
                  value="4"/>
            <enum key="CVC HandsFree 1-Mic"
                  value="5"/>
            <enum key="CVC HandsFree 1-Mic Bandwidth Extension"
                  value="6"/>
            <enum key="CVC HandsFree 2-Mic"
                  value="7"/>
            <enum key="CVC HandsFree 2-Mic Bandwidth Extension"
                  value="8"/>
        </DefineList>
        <DefineList Id="Virtual Buttons">
            <enum key="vb0"
                  value="0"/>
            <enum key="vb1"
                  value="1"/>
            <enum key="vb2"
                  value="2"/>
            <enum key="vb3"
                  value="3"/>
            <enum key="vb4"
                  value="4"/>
            <enum key="vb5"
                  value="5"/>
            <enum key="vb6"
                  value="6"/>
            <enum key="vb7"
                  value="7"/>
            <enum key="vb8"
                  value="8"/>
            <enum key="vb9"
                  value="9"/>
            <enum key="vb10"
                  value="10"/>
            <enum key="vb11"
                  value="11"/>
            <enum key="vb12"
                  value="12"/>
            <enum key="vb13"
                  value="13"/>
            <enum key="vb14"
                  value="14"/>
            <enum key="vb15"
                  value="15"/>
        </DefineList>

        <!--Configuration Patterns are constituted from a 'Header' element and a 'Pattern' element-->
        <!--Configuration patterns are used in the XML to define arrays of the specified pattern type, <ConfigPatternArray> tag-->
        <!--Define the 'Headers'-->
        <DefineHeader PatternHeader="All Events">
            <ConfigItem
                Id="Event"
                Desc="User Event or System Event associated with the configuration."
                PSKey="Text=Overloaded,Address=Overloaded,Word=1,Bit=0,Size=16"
                Type="enum"
                ShowOrdered="true">
                <!--Concatenates User Events (+ a 0x40 prefix) and System Events into a single enum type Config Item-->
                <List use="User Event"
                      prefix="0x40"/>
                <List use="System Event"/>
            </ConfigItem>
        </DefineHeader>
        <DefineHeader PatternHeader="User Event">
            <ConfigItem
                Id="User Event"
                Desc="User Event associated with the configuration."
                PSKey="Text=Overloaded,Address=Overloaded,Word=1,Bit=8,Size=8"
                Type="enum"
                ShowOrdered="true">
                <!--Uses User Events list in a single enum type Config Item-->
                <List use="User Event"/>
            </ConfigItem>
        </DefineHeader>
        <DefineHeader PatternHeader="State List">
            <ConfigItem
                Id="State List"
                Desc="Sink system state associated with the configuration."
                PSKey="Text=Overloaded,Address=Overloaded,Word=1,Bit=0,Size=8"
                Type="enum">
                <List use="States"/>
            </ConfigItem>
        </DefineHeader>
        <DefineHeader PatternHeader="Logical Input List">
            <ConfigItem
                Id="Logical Input ID"
                Desc="The Logical Input in the Sink to which Physical Signals can be assigned via the Sink configuration."
                PSKey="Text=Overloaded,Address=Overloaded,Word=1,Bit=8,Size=8"
                Type="enum">
                <enum key="0"
                      value="0"/>
                <enum key="1"
                      value="1"/>
                <enum key="2"
                      value="2"/>
                <enum key="3"
                      value="3"/>
                <enum key="4"
                      value="4"/>
                <enum key="5"
                      value="5"/>
                <enum key="6"
                      value="6"/>
                <enum key="7"
                      value="7"/>
                <enum key="8"
                      value="8"/>
                <enum key="9"
                      value="9"/>
                <enum key="10"
                      value="10"/>
                <enum key="11"
                      value="11"/>
                <enum key="12"
                      value="12"/>
                <enum key="13"
                      value="13"/>
                <enum key="14"
                      value="14"/>
                <enum key="15"
                      value="15"/>
                <enum key="VREG"
                      value="24"/>
                <enum key="CHG"
                      value="25"/>
            </ConfigItem>
        </DefineHeader>
        <DefineHeader PatternHeader="Vbat Battery Threshold Index">
            <ConfigItem
                Id="Battery Threshold ID"
                PSKey="Not Applicable"
                Type="enum">
                <enum key="Threshold 1"
                      value="0"/>
                <enum key="Threshold 2"
                      value="1"/>
                <enum key="Threshold 3"
                      value="2"/>
                <enum key="Threshold 4"
                      value="3"/>
                <enum key="Threshold 5"
                      value="4"/>
                <enum key="Threshold 6"
                      value="5"/>
            </ConfigItem>
        </DefineHeader>
        <DefineHeader PatternHeader="Charger Configuration Index">
            <ConfigItem
                Id="Charger Configuration ID"
                PSKey="Not Applicable"
                Type="enum">
                <enum key="Charger Configuration 1"
                      value="0"/>
                <enum key="Charger Configuration 2"
                      value="1"/>
                <enum key="Charger Configuration 3"
                      value="2"/>
                <enum key="Charger Configuration 4"
                      value="3"/>
                <enum key="Charger Configuration 5"
                      value="4"/>
                <enum key="Charger Configuration 6"
                      value="5"/>
                <enum key="Charger Configuration 7"
                      value="6"/>
                <enum key="Charger Configuration 8"
                      value="7"/>
            </ConfigItem>
        </DefineHeader>
        <DefineHeader PatternHeader="Volume Profile Index">
            <ConfigItem
                Id="Volume Profile ID"
                PSKey="Not Applicable"
                Type="enum">
                <enum key="Volume Profile 0"
                      value="0"/>
                <enum key="Volume Profile 1"
                      value="1"/>
                <enum key="Volume Profile 2"
                      value="2"/>
                <enum key="Volume Profile 3"
                      value="3"/>
                <enum key="Volume Profile 4"
                      value="4"/>
                <enum key="Volume Profile 5"
                      value="5"/>
                <enum key="Volume Profile 6"
                      value="6"/>
                <enum key="Volume Profile 7"
                      value="7"/>
                <enum key="Volume Profile 8"
                      value="8"/>
                <enum key="Volume Profile 9"
                      value="9"/>
                <enum key="Volume Profile 10"
                      value="10"/>
                <enum key="Volume Profile 11"
                      value="11"/>
                <enum key="Volume Profile 12"
                      value="12"/>
                <enum key="Volume Profile 13"
                      value="13"/>
                <enum key="Volume Profile 14"
                      value="14"/>
                <enum key="Volume Profile 15"
                      value="15"/>
            </ConfigItem>
        </DefineHeader>
        <DefineHeader PatternHeader="Button Sequence Pattern Index">
            <ConfigItem
                Id="Button Sequence ID"
                PSKey="Not Applicable"
                Type="enum">
                <enum key="Button Sequence 0"
                      value="0"/>
                <enum key="Button Sequence 1"
                      value="1"/>
                <enum key="Button Sequence 2"
                      value="2"/>
                <enum key="Button Sequence 3"
                      value="3"/>
            </ConfigItem>
        </DefineHeader>
        <DefineHeader PatternHeader="USB Charger Configuration Index">
            <ConfigItem
                Id="USB Charger Configuration"
                PSKey="Not Applicable"
                Type="enum">
                <enum key="When USB Disconnected"
                      value="0"/>
                <enum key="When Suspended"
                      value="1"/>
                <enum key="When Suspended Dead Battery"
                      value="2"/>
                <enum key="When Attached Not Enum"
                      value="3"/>
                <enum key="When Attached Not Enum Trickle"
                      value="4"/>
                <enum key="When Connected To Hub"
                      value="5"/>
                <enum key="When Connected To Hub Trickle Charge"
                      value="6"/>
                <enum key="When Connected To Charging Hub"
                      value="7"/>
                <enum key="When Connected To Dedicated Charger"
                      value="8"/>
                <enum key="When Vbus Drop"
                      value="9"/>
            </ConfigItem>
        </DefineHeader>
        <DefineHeader PatternHeader="AT Command Map Index">
            <ConfigItem
                Id="AT Command Mapping Index"
                PSKey="Not Applicable"
                Type="enum">
                <enum key="AT 1"
                      value="0"/>
                <enum key="AT 2"
                      value="1"/>
                <enum key="AT 3"
                      value="2"/>
                <enum key="AT 4"
                      value="3"/>
                <enum key="AT 5"
                      value="4"/>
                <enum key="AT 6"
                      value="5"/>
                <enum key="AT 7"
                      value="6"/>
                <enum key="AT 8"
                      value="7"/>
            </ConfigItem>
        </DefineHeader>
        <DefineHeader PatternHeader="Input Selection">
            <ConfigItem
                Id="Virtual Button ID(s) Assigned"
                Desc="The 'Virtual Button' IDs allow you to map one or more IR or BLE inputs onto a User Event."
                Type="bitfield"
                PresentHex="false"
                PSKey="Text=Overloaded,Address=Overloaded,Word=7,Bit=0,Size=16">
                <bitfield key="vb0"
                          value="0"/>
                <bitfield key="vb1"
                          value="1"/>
                <bitfield key="vb2"
                          value="2"/>
                <bitfield key="vb3"
                          value="3"/>
                <bitfield key="vb4"
                          value="4"/>
                <bitfield key="vb5"
                          value="5"/>
                <bitfield key="vb6"
                          value="6"/>
                <bitfield key="vb7"
                          value="7"/>
                <bitfield key="vb8"
                          value="8"/>
                <bitfield key="vb9"
                          value="9"/>
                <bitfield key="vb10"
                          value="10"/>
                <bitfield key="vb11"
                          value="11"/>
                <bitfield key="vb12"
                          value="12"/>
                <bitfield key="vb13"
                          value="13"/>
                <bitfield key="vb14"
                          value="14"/>
                <bitfield key="vb15"
                          value="15"/>
            </ConfigItem>
        </DefineHeader>
        <DefineHeader PatternHeader="IR Input ID Selection">
            <ConfigItem
                Id="IR Virtual Button ID"
                Desc="The 'Virtual Button' ID the IR code translates to (allows up to 16 RC buttons to be supported)"
                Type="enum"
                PSKey="Text=Overloaded,Address=Overloaded,Word=6,Bit=0,Size=4">
                <List use="Virtual Buttons"/>
            </ConfigItem>
        </DefineHeader>
        <DefineHeader PatternHeader="BLE Input ID Selection">
            <ConfigItem
                Id="BLE Virtual Button ID"
                Desc="The 'Virtual Button' ID the HID code translates to (allows up to 16 RC buttons to be supported)"
                Type="enum"
                PSKey="Text=Overloaded,Address=Overloaded,Word=9,Bit=12,Size=4">
                <List use="Virtual Buttons"/>
            </ConfigItem>
        </DefineHeader>
        <DefineHeader PatternHeader="General UUID Header">
            <ConfigItem
                Id=""
                PSKey="Not Applicable"
                Type="enum">
                <enum key="128-bit UUID"
                      value="0"/>
            </ConfigItem>
        </DefineHeader>

        <!--Define the 'Patterns'-->
        <DefinePattern PatternName="LED">
            <ConfigItem
                Id="On Time [ms]"
                Type="uint"
                Desc="0-2550ms (in 10ms steps)"
                PSKey="Text=Overloaded,Address=Overloaded,Word=2,Bit=0,Size=8"
                Multiplier="10"/>
            <ConfigItem
                Id="Off Time [ms]"
                Type="uint"
                Desc="0-2550ms (in 10ms steps)"
                PSKey="Text=Overloaded,Address=Overloaded,Word=3,Bit=8,Size=8"
                Multiplier="10"/>
            <ConfigItem
                Id="Repeat Delay [ms]"
                Type="uint"
                Range="Min=0,Max=10000"
                Desc="0-10,000ms (in 50ms steps)"
                PSKey="Text=Overloaded,Address=Overloaded,Word=3,Bit=0,Size=8"
                Multiplier="50"/>
            <ConfigItem
                Id="Number of Flashes"
                Type="uint"
                Desc="0-15"
                PSKey="Text=Overloaded,Address=Overloaded,Word=5,Bit=12,Size=4"/>
            <ConfigItem
                Id="Timeout Count"
                Desc="Specifies the number of times the sequence will repeat (unless superceded by another event) before it times out. When set to 0 the sequence will not time out. 0-255"
                Type="uint"
                PSKey="Text=Overloaded,Address=Overloaded,Word=4,Bit=0,Size=8"/>
            <ConfigItem
                Id="Dim Time [ms]"
                Desc="The time between ramp steps to use. There are 16 ramping steps used to Dim on or off an LED. It is important to ensure that the (Dim time * 16) is less than the on time /off time for the ramp to complete. 0-255"
                Type="uint"
                PSKey="Text=Overloaded,Address=Overloaded,Word=4,Bit=8,Size=8"/>
            <ConfigItem
                Id="LED A Mapping"
                Type="enum"
                Desc="Specifies the PIO that is referred to in the PS Key attributes as LED A"
                ShowOrdered="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=5,Bit=8,Size=4">
                <List use="LED 4 bit"/>
            </ConfigItem>
            <ConfigItem
                Id="LED B Mapping"
                Type="enum"
                Desc="Specifies the PIO that is referred to in the PS Key attributes as LED B"
                ShowOrdered="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=5,Bit=4,Size=4">
                <List use="LED 4 bit"/>
            </ConfigItem>
            <ConfigItem
                Id="Colour"
                Type="enum"
                Desc="Defines the LED(s) that the sequence will display when a filter is not applied."
                PSKey="Text=Overloaded,Address=Overloaded,Word=5,Bit=0,Size=3">
                <List use="LED Colour"/>
            </ConfigItem>
            <ConfigItem
                Id="LED Override Disable"
                Type="bool"
                Desc="If this bit is set then this LED pattern will be shown regardless of whether the LEDs have been disabled or not."
                PSKey="Text=Overloaded,Address=Overloaded,Word=5,Bit=3,Size=1"/>
        </DefinePattern>
        <DefinePattern PatternName="Filter">
            <ConfigItem
                Id="Filter Type"
                Desc="Determines the type of filter to be applied when the filter is activated. Setting this value will specify which filter parameters will be used by the Sink for this filter."
                Type="enum_disabler"
                PSKey="Text=Overloaded,Address=Overloaded,Word=2,Bit=13,Size=3">
                <enum key="DISABLED"
                      value="0"
                      disable="Speed Factor,Speed Action,Colour,Filter to Cancel,LED to Use,Follow LED Delay [ms]"/>
                <enum key="CANCEL"
                      value="1"
                      disable="Speed Factor,Speed Action,Colour,LED to Use,Follow LED Delay [ms]"/>
                <enum key="SPEED"
                      value="2"
                      disable="Colour,Filter to Cancel,LED to Use,Follow LED Delay [ms]"/>
                <enum key="OVERRIDE"
                      value="3"
                      disable="Speed Factor,Speed Action,Colour,Filter to Cancel,Follow LED Delay [ms]"/>
                <enum key="COLOUR"
                      value="4"
                      disable="Speed Factor,Speed Action,Filter to Cancel,LED to Use,Follow LED Delay [ms]"/>
                <enum key="FOLLOW"
                      value="5"
                      disable="Speed Factor,Speed Action,Colour,Filter to Cancel"/>
            </ConfigItem>
            <ConfigItem
                Id="Colour"
                Desc="Defines the LED(s) that the sequence will display when the COLOUR filter is active."
                Type="enum"
                PSKey="Text=Overloaded,Address=Overloaded,Word=2,Bit=10,Size=3">
                <List use="LED Colour"/>
            </ConfigItem>
            <ConfigItem
                Id="Filter to Cancel"
                Desc="Defines the filter that will be cancelled when this CANCEL filter becomes activated. The filter number - e.g. 'Filter 0' - will cancel the filter configured at row index 0 in this table."
                Type="enum"
                PSKey="Text=Overloaded,Address=Overloaded,Word=2,Bit=5,Size=5">
                <enum key="Reserved"
                      value="0"/>
                <enum key="Filter 0"
                      value="1"/>
                <enum key="Filter 1"
                      value="2"/>
                <enum key="Filter 2"
                      value="3"/>
                <enum key="Filter 3"
                      value="4"/>
                <enum key="Filter 4"
                      value="5"/>
                <enum key="Filter 5"
                      value="6"/>
                <enum key="Filter 6"
                      value="7"/>
                <enum key="Filter 7"
                      value="8"/>
                <enum key="Filter 8"
                      value="9"/>
                <enum key="Filter 9"
                      value="10"/>
                <enum key="Filter 10"
                      value="11"/>
                <enum key="Filter 11"
                      value="12"/>
                <enum key="Filter 12"
                      value="13"/>
                <enum key="Filter 13"
                      value="14"/>
                <enum key="Filter 14"
                      value="15"/>
                <enum key="Filter 15"
                      value="16"/>
            </ConfigItem>
            <ConfigItem
                Id="LED to Use"
                Desc="Specifies the PIO that will be driven when either the OVERRIDE or FOLLOW filter is active. (This field is shared by both filter types)."
                Type="enum"
                ShowOrdered="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=2,Bit=1,Size=4">
                <List use="LED 4 bit"/>
            </ConfigItem>
            <ConfigItem
                Id="Follow LED Delay [ms]"
                Desc="Defines the time offset in ms between the original pattern flashes and FOLLOW filter pattern flashes, when it is active (in 50ms steps)."
                Type="uint"
                PSKey="Text=Overloaded,Address=Overloaded,Word=3,Bit=9,Size=4"
                Multiplier="50"/>
            <ConfigItem
                Id="Speed Action"
                Desc="This field specifies the action to apply to the LED pattern when the SPEED filter is active."
                Type="enum"
                PSKey="Text=Overloaded,Address=Overloaded,Word=3,Bit=8,Size=1">
                <enum key="Multiply"
                      value="1"/>
                <enum key="Divide"
                      value="0"/>
            </ConfigItem>
            <ConfigItem
                Id="Speed Factor"
                Desc="The multiplier/divider to be applied to the LED pattern when the SPEED filter is active."
                Type="uint"
                PSKey="Text=Overloaded,Address=Overloaded,Word=3,Bit=0,Size=8"/>
            <ConfigItem
                Id="Override LED Disable"
                Desc="If this bit is set then this LED pattern will be shown regardless of whether the LEDs have been disabled or not."
                Type="bool"
                PSKey="Text=Overloaded,Address=Overloaded,Word=2,Bit=0,Size=1"/>
        </DefinePattern>
        <DefinePattern PatternName="Event">
            <ConfigItem
                Id="State Mask [hex]"
                Desc="For the mapped System or User event to be generated, the Sink must be in the state specified. (The other attribute conditions must also be met)."
                Type="bitfield"
                PresentHex="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=3,Bit=0,Size=14">
                <List use="States"/>
            </ConfigItem>
            <ConfigItem
                Id="Logical Input ID(s) Assigned"
                Desc="The Logical Input ID Assigned list is used to specify the inputs that must be asserted in order to generate the mapped System or User Event. The mapping of Logical Inputs to specific Physical Input Signals used (i.e. PIOs) is configured elsewhere in this tool (under Button->Translation table)."
                Type="bitfield"
                PresentHex="false"
                PSKey="Text=Overloaded,Address=Overloaded,Word=2,Bit=0,Size=16">
                <bitfield key="0"
                          value="0"/>
                <bitfield key="1"
                          value="1"/>
                <bitfield key="2"
                          value="2"/>
                <bitfield key="3"
                          value="3"/>
                <bitfield key="4"
                          value="4"/>
                <bitfield key="5"
                          value="5"/>
                <bitfield key="6"
                          value="6"/>
                <bitfield key="7"
                          value="7"/>
                <bitfield key="8"
                          value="8"/>
                <bitfield key="9"
                          value="9"/>
                <bitfield key="10"
                          value="10"/>
                <bitfield key="11"
                          value="11"/>
                <bitfield key="12"
                          value="12"/>
                <bitfield key="13"
                          value="13"/>
                <bitfield key="14"
                          value="14"/>
                <bitfield key="15"
                          value="15"/>
            </ConfigItem>
            <ConfigItem
                Id="VREG"
                Desc="In addition to the Logical Input mask stimuli, the VREG enable signal can be configured as a stimulus for the mapped System or User event."
                Type="bool"
                PSKey="Text=Overloaded,Address=Overloaded,Word=3,Bit=14,Size=1"/>
            <ConfigItem
                Id="CHG"
                Desc="In addition to the Logical Input mask stimuli, the Charger detect signal can be configured as a stimulus for the mapped System or User event."
                Type="bool"
                PSKey="Text=Overloaded,Address=Overloaded,Word=3,Bit=15,Size=1"/>
            <ConfigItem
                Id="Button Timing"
                Desc="Specifies the duration for which the selected Logical Input must be asserted in order to generate the mapped System or User Event."
                Type="enum"
                PSKey="Text=Overloaded,Address=Overloaded,Word=1,Bit=0,Size=8">
                <enum key="..."
                      value="0"/>
                <enum key="SHORT"
                      value="1"/>
                <enum key="LONG"
                      value="2"/>
                <enum key="VLONG"
                      value="3"/>
                <enum key="DOUBLE"
                      value="4"/>
                <enum key="REPEAT"
                      value="5"/>
                <enum key="RISING"
                      value="6"/>
                <enum key="FALLING"
                      value="7"/>
                <enum key="SH SINGLE"
                      value="8"/>
                <enum key="LONG REL"
                      value="9"/>
                <enum key="VLONG REL"
                      value="10"/>
                <enum key="VVLONG"
                      value="11"/>
                <enum key="VVLONG REL"
                      value="12"/>
                <!--<enum key="TRIPLE"
                      value="13"/>-->
            </ConfigItem>
        </DefinePattern>
        <DefinePattern PatternName="Audio Prompt">
            <ConfigItem
                Id="Prompt Index"
                Desc="Specifies the index of the Auido Prompt file in the Sink file system. This field is autogenerated by the config Tool and should not be directly written by the user."
                Type="uint"
                PSKey="Text=Overloaded,Address=Overloaded,Word=2,Bit=0,Size=8"/>
            <ConfigItem
                Id="State Mask [hex]"
                Desc="Determines in which Sink system states the Audio Prompt mapped to this User Event can be played. If the User Event occurs and the Sink is in a state masked off, the Audio Prompt will not be played."
                Type="bitfield"
                PresentHex="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=3,Bit=0,Size=14">
                <List use="States"/>
            </ConfigItem>
            <ConfigItem
                Id="Don't Play when SCO/Wired Routed"
                Desc="This bit causes the Audio Prompt not to be played if SCO or Wired audio is currently routed."
                Type="bool"
                PSKey="Text=Overloaded,Address=Overloaded,Word=3,Bit=14,Size=1"/>
            <ConfigItem
                Id="Clear Queue and Play Immediately"
                Desc="Any queued Audio Prompts or Tones will be flushed when an event occurs with an Audio Prompt configured with this bit set."
                Type="bool"
                PSKey="Text=Overloaded,Address=Overloaded,Word=3,Bit=15,Size=1"/>
        </DefinePattern>
        <DefinePattern PatternName="Input Mapping">
            <ConfigItem
                Id="Physical Input Signal"
                Desc="Specifies the Physical signal that will be mapped to the Logical Input selected. When the physical signal is asserted this will cause the Logical Input in the Sink to also be asserted."
                Type="enum"
                PSKey="Text=Overloaded,Address=Overloaded,Word=1,Bit=0,Size=8">
                <enum key="PIO 0"
                      value="0"/>
                <enum key="PIO 1"
                      value="1"/>
                <enum key="PIO 2"
                      value="2"/>
                <enum key="PIO 3"
                      value="3"/>
                <enum key="PIO 4"
                      value="4"/>
                <enum key="PIO 5"
                      value="5"/>
                <enum key="PIO 6"
                      value="6"/>
                <enum key="PIO 7"
                      value="7"/>
                <enum key="PIO 8"
                      value="8"/>
                <enum key="PIO 9"
                      value="9"/>
                <enum key="PIO 10"
                      value="10"/>
                <enum key="PIO 11"
                      value="11"/>
                <enum key="PIO 12"
                      value="12"/>
                <enum key="PIO 13"
                      value="13"/>
                <enum key="PIO 14"
                      value="14"/>
                <enum key="PIO 15"
                      value="15"/>
                <enum key="PIO 16"
                      value="16"/>
                <enum key="PIO 17"
                      value="17"/>
                <enum key="PIO 18"
                      value="18"/>
                <enum key="PIO 19"
                      value="19"/>
                <enum key="PIO 20"
                      value="20"/>
                <enum key="PIO 21"
                      value="21"/>
                <enum key="PIO 22"
                      value="22"/>
                <enum key="PIO 23"
                      value="23"/>
                <enum key="PIO 24"
                      value="24"/>
                <enum key="PIO 25"
                      value="25"/>
                <enum key="PIO 26"
                      value="26"/>
                <enum key="PIO 27"
                      value="27"/>
                <enum key="PIO 28"
                      value="28"/>
                <enum key="PIO 29"
                      value="29"/>
                <enum key="PIO 30"
                      value="30"/>
                <enum key="PIO 31"
                      value="31"/>
                <enum key="CAP 0"
                      value="64"/>
                <enum key="CAP 1"
                      value="65"/>
                <enum key="CAP 2"
                      value="66"/>
                <enum key="CAP 3"
                      value="67"/>
                <enum key="CAP 4"
                      value="68"/>
                <enum key="CAP 5"
                      value="69"/>
                <enum key="CAP 6"
                      value="70"/>
                <enum key="CAP 7"
                      value="71"/>
                <enum key="CAP 8"
                      value="72"/>
                <enum key="CAP 9"
                      value="73"/>
            </ConfigItem>
        </DefinePattern>
        <DefinePattern PatternName="Vbat Battery Threshold Configuration">
            <ConfigItem
                Id="Vbat Battery Threshold Voltage [mV]"
                Desc="When Vbat (ie. the battery voltage level) crosses the threshold specified in this setting it will cause the mapped notification event to be raised."
                PSKey="Text=Overloaded,Address=Overloaded,Word=5,Bit=0,Size=8"
                Multiplier="20"
                Type="uint"/>
            <ConfigItem
                Id="Vbat Notify Interval [mins]"
                Desc="0-255mins"
                Type="uint"
                PSKey="Text=Overloaded,Address=Overloaded,Word=5,Bit=8,Size=8"/>
            <ConfigItem
                Id="Vbat Trigger Source"
                Desc="The notification events raised can be configured to be sent during any of the specified operating modes."
                PatternCoefficient="2"
                Type="bitfield"
                PresentHex="false"
                PSKey="Text=Overloaded,Address=Overloaded,Word=24,Bit=0,Size=3">
                <bitfield key="Automatic Sending"
                          value="0"/>
                <bitfield key="On User Request for Battery Level"
                          value="1"/>
                <bitfield key="On Initial Reading for Battery Level"
                          value="2"/>
            </ConfigItem>
            <ConfigItem
                Id="Vbat User Event"
                Desc="The User or System Event mapped to the Vbat threshold transition."
                PatternCoefficient="2"
                PSKey="Text=Overloaded,Address=Overloaded,Word=25,Bit=0,Size=16"
                Type="enum"
                ShowOrdered="true">
                <!--Concatenates User Events (+ a 0x40 prefix) and System Events into a single enum type Config Item-->
                <List use="User Event"
                      prefix="0x40"/>
                <List use="System Event"/>
            </ConfigItem>
        </DefinePattern>
        <DefinePattern PatternName="Charger Configuration Settings">
            <ConfigItem
                Id="Charge"
                Desc="Set to use this entry to control the charger"
                PSKey="Text=Overloaded,Address=Overloaded,Word=36,Bit=15,Size=1"
                Type="bool"/>
            <ConfigItem
                Id="Boost"
                Desc="Boost charging can be disabled or set to internal or externally controlled boost if the device and firmware revision supports it."
                Type="enum"
                PSKey="Text=Overloaded,Address=Overloaded,Word=36,Bit=13,Size=2">
                <enum key="Disabled"
                      value="0"/>
                <enum key="Int Enabled"
                      value="1"/>
                <enum key="Ext Enabled"
                      value="2"/>
            </ConfigItem>
            <ConfigItem
                Id="Vsel"
                Desc="The voltage source for the IC can be set to CHARGER or Vbat"
                Type="enum"
                PSKey="Text=Overloaded,Address=Overloaded,Word=36,Bit=12,Size=1">
                <enum key="CHG"
                      value="0"/>
                <enum key="BAT"
                      value="1"/>
            </ConfigItem>
            <ConfigItem
                Id="Power Off"
                Desc="When checked the Sink will reduce to the minimum power consumption possible. Useful for powering off the device at certain temperatures."
                PSKey="Text=Overloaded,Address=Overloaded,Word=36,Bit=11,Size=1"
                Type="bool"/>
            <ConfigItem
                Id="Disable Leds"
                Desc="When set the LEDs are disabled while charging."
                Type="bool"
                PSKey="Text=Overloaded,Address=Overloaded,Word=36,Bit=10,Size=1"/>
            <ConfigItem
                Id="Current [mA]"
                Desc="Charge current specified in mA."
                Type="uint"
                PSKey="Text=Overloaded,Address=Overloaded,Word=36,Bit=0,Size=8"/>
            <ConfigItem
                Id="Type"
                Desc="CSR8600 range of devices can use voltage type which allows the user to specify the exact voltage cut off for charging, the BlueCore5 range of ICs use trim type whereby a small trim value may be applied to the present voltage cut off value."
                Type="enum"
                PSKey="Text=Overloaded,Address=Overloaded,Word=37,Bit=12,Size=4">
                <enum key="Default"
                      value="0"/>
                <enum key="Voltage"
                      value="1"/>
                <enum key="Trim"
                      value="2"/>
            </ConfigItem>
            <ConfigItem
                Id="Trim"
                Desc="End of charging trim voltage adjustment value for use on BlueCore5 range of devices."
                Type="uint"
                PSKey="Text=Overloaded,Address=Overloaded,Word=37,Bit=8,Size=4"/>
            <ConfigItem
                Id="Voltage [mV]"
                Desc="End of charging cut off voltage value for CSR8600 range of devices. The scaling of the threshold is (value *20) in mV."
                Type="uint"
                Multiplier="20"
                PSKey="Text=Overloaded,Address=Overloaded,Word=37,Bit=0,Size=8"/>
        </DefinePattern>
        <DefinePattern PatternName="Volume Configuration Settings">
            <ConfigItem
                Id="Profile Id on Volume Up"
                Desc="The Volume Profile Id that will be selected when a Volume Up event occurs."
                PSKey="Text=Overloaded,Address=Overloaded,Word=17,Bit=12,Size=4"
                Type="enum">
                <enum key="0"
                      value="0"/>
                <enum key="1"
                      value="1"/>
                <enum key="2"
                      value="2"/>
                <enum key="3"
                      value="3"/>
                <enum key="4"
                      value="4"/>
                <enum key="5"
                      value="5"/>
                <enum key="6"
                      value="6"/>
                <enum key="7"
                      value="7"/>
                <enum key="8"
                      value="8"/>
                <enum key="9"
                      value="9"/>
                <enum key="10"
                      value="10"/>
                <enum key="11"
                      value="11"/>
                <enum key="12"
                      value="12"/>
                <enum key="13"
                      value="13"/>
                <enum key="14"
                      value="14"/>
                <enum key="15"
                      value="15"/>
            </ConfigItem>
            <ConfigItem
                Id="Profile Id on Volume Down"
                Desc="The Volume Profile Id that will be selected when a Volume Down event occurs."
                PSKey="Text=Overloaded,Address=Overloaded,Word=17,Bit=8,Size=4"
                Type="enum">
                <enum key="0"
                      value="0"/>
                <enum key="1"
                      value="1"/>
                <enum key="2"
                      value="2"/>
                <enum key="3"
                      value="3"/>
                <enum key="4"
                      value="4"/>
                <enum key="5"
                      value="5"/>
                <enum key="6"
                      value="6"/>
                <enum key="7"
                      value="7"/>
                <enum key="8"
                      value="8"/>
                <enum key="9"
                      value="9"/>
                <enum key="10"
                      value="10"/>
                <enum key="11"
                      value="11"/>
                <enum key="12"
                      value="12"/>
                <enum key="13"
                      value="13"/>
                <enum key="14"
                      value="14"/>
                <enum key="15"
                      value="15"/>
            </ConfigItem>
            <ConfigItem
                Id="Play Tone"
                Desc="Specifies the Audio Tone that the Sink will play on entering this Volume Profile."
                PSKey="Text=Overloaded,Address=Overloaded,Word=17,Bit=0,Size=8"
                Type="enum">
                <List use="Tone"/>
            </ConfigItem>
            <ConfigItem
                Id="Speaker Gain [dBr]"
                Desc="Specifies the gain that will be applied in dBr for this Volume Profile."
                Type="enum"
                PSKey="Text=Overloaded,Address=Overloaded,Word=18,Bit=0,Size=8">
                <enum key="-45"
                      value="0"/>
                <enum key="-41.5"
                      value="1"/>
                <enum key="-39"
                      value="2"/>
                <enum key="-35.5"
                      value="3"/>
                <enum key="-33"
                      value="4"/>
                <enum key="-29.5"
                      value="5"/>
                <enum key="-27"
                      value="6"/>
                <enum key="-23.5"
                      value="7"/>
                <enum key="-21"
                      value="8"/>
                <enum key="-18"
                      value="9"/>
                <enum key="-15"
                      value="10"/>
                <enum key="-12"
                      value="11"/>
                <enum key="-9"
                      value="12"/>
                <enum key="-6"
                      value="13"/>
                <enum key="-3"
                      value="14"/>
                <enum key="0"
                      value="15"/>
                <enum key="+3.5"
                      value="16"/>
                <enum key="+6"
                      value="17"/>
                <enum key="+9.5"
                      value="18"/>
                <enum key="+12"
                      value="19"/>
                <enum key="+15.5"
                      value="20"/>
                <enum key="+18"
                      value="21"/>
                <enum key="+21.5"
                      value="22"/>
            </ConfigItem>
        </DefinePattern>
        <DefinePattern PatternName="Tone">
            <ConfigItem
                Id="Tones"
                Desc="Audio Tone to play when the mapped System or User Event occurs."
                Type="enum"
                PSKey="Text=Overloaded,Address=Overloaded,Word=2,Bit=0,Size=8">
                <List use="Tone"/>
            </ConfigItem>
        </DefinePattern>
        <DefinePattern PatternName="Button Sequence Pattern Configuration">
            <ConfigItem
                Id="User Event"
                Desc="User Event that will be originated when the mapped Button Sequence is asserted in the correct order."
                PSKey="Text=Overloaded,Address=Overloaded,Word=1,Bit=0,Size=16"
                Type="enum"
                ShowOrdered="true">
                <!--Concatenates User Events (+ a 0x40 prefix) and System Events into a single enum type Config Item-->
                <List use="User Event"
                      prefix="0x40"/>
                <List use="System Event"/>
            </ConfigItem>
            <ConfigItem
                Id="Part 1"
                Desc="The first part of the Button Sequence."
                PSKey="Text=Overloaded,Address=Overloaded,Word=2,Bit=0,Size=16"
                Type="enum">
                <List use="PIOs for Sequence"/>
            </ConfigItem>
            <ConfigItem
                Id="Part 2"
                Desc="The second part of the Button Sequence."
                PSKey="Text=Overloaded,Address=Overloaded,Word=3,Bit=0,Size=16"
                Type="enum">
                <List use="PIOs for Sequence"/>
            </ConfigItem>
            <ConfigItem
                Id="Part 3"
                Desc="The third part of the Button Sequence. N/A indicates the Sequence to use is only 2 Button presses long."
                PSKey="Text=Overloaded,Address=Overloaded,Word=4,Bit=0,Size=16"
                Type="enum">
                <List use="PIOs for Sequence"/>
            </ConfigItem>
            <ConfigItem
                Id="Part 4"
                Desc="The fourth part of the Button Sequence. N/A indicates the Sequence to use is only 3 Button presses long."
                PSKey="Text=Overloaded,Address=Overloaded,Word=5,Bit=0,Size=16"
                Type="enum">
                <List use="PIOs for Sequence"/>
            </ConfigItem>
            <ConfigItem
                Id="Part 5"
                Desc="The fifth part of the Button Sequence. N/A indicates the Sequence to use is only 4 Button presses long."
                PSKey="Text=Overloaded,Address=Overloaded,Word=6,Bit=0,Size=16"
                Type="enum">
                <List use="PIOs for Sequence"/>
            </ConfigItem>
            <ConfigItem
                Id="Part 6"
                Desc="The sixth part of the Button Sequence. N/A indicates the Sequence to use is only 5 Button presses long."
                PSKey="Text=Overloaded,Address=Overloaded,Word=7,Bit=0,Size=16"
                Type="enum">
                <List use="PIOs for Sequence"/>
            </ConfigItem>
        </DefinePattern>
        <DefinePattern PatternName="USB">
            <ConfigItem
                Id="Charger Enable"
                Desc="Specifies whether the charger is enabled in this state."
                Type="bool"
                PSKey="Text=Overloaded,Address=Overloaded,Word=1,Bit=15,Size=1"/>
            <ConfigItem
                Id="Boost Enable"
                Desc="Specifies whether boost charging is to be used and what type of boost charging."
                Type="enum"
                PSKey="Text=Overloaded,Address=Overloaded,Word=1,Bit=13,Size=2">
                <enum key="Disabled"
                      value="0"/>
                <enum key="Internal"
                      value="1"/>
                <enum key="External"
                      value="2"/>
            </ConfigItem>
            <ConfigItem
                Id="Voltage Select"
                Desc="Selects the voltage source for the chip, can be set to CHARGER or VBAT."
                Type="enum"
                PSKey="Text=Overloaded,Address=Overloaded,Word=1,Bit=12,Size=1">
                <enum key="Charger"
                      value="0"/>
                <enum key="Battery"
                      value="1"/>
            </ConfigItem>
            <ConfigItem
                Id="Power Off"
                Desc="When set the Sink reduces power to an absolute minimum."
                Type="bool"
                PSKey="Text=Overloaded,Address=Overloaded,Word=1,Bit=11,Size=1"/>
            <ConfigItem
                Id="Disable LEDs"
                Desc="When set the LEDs are disabled while charging."
                Type="bool"
                PSKey="Text=Overloaded,Address=Overloaded,Word=1,Bit=10,Size=1"/>
            <ConfigItem
                Id="Current [mA]"
                Desc="Specifies the maximum charging current in mA."
                Type="uint"
                PSKey="Text=Overloaded,Address=Overloaded,Word=1,Bit=0,Size=8"/>
        </DefinePattern>
        <DefinePattern PatternName="I2S Data Word">
            <ConfigItem
                Id="I2S Command Data Word [hex]"
                Desc="Each entry below specifies an I2S command word that in the I2S raw buffer. This is effectively an array of packets. The initialisation block are the first packets in the array, followed by volume and then shutdown blocks."
                Type="uint"
                PresentHex="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=1,Bit=0,Size=16"/>
        </DefinePattern>
        <DefinePattern PatternName="AT Command Map">
            <ConfigItem
                Id="Event"
                Desc="User Event or System Event associated with the configuration."
                PSKey="Text=Overloaded,Address=Overloaded,Word=1,Bit=0,Size=16"
                Type="enum"
                ShowOrdered="true">
                <!--Concatenates User Events (+ a 0x40 prefix) and System Events into a single enum type Config Item-->
                <List use="User Event"
                      prefix="0x40"/>
                <List use="System Event"/>
            </ConfigItem>
            <ConfigItem
                Id="AT Command Index"
                Desc="AT Command to send when the mapped System or User Event occurs."
                Type="uint"
                PSKey="Text=Overloaded,Address=Overloaded,Word=2,Bit=0,Size=16">
            </ConfigItem>
        </DefinePattern>
        <DefinePattern PatternName="AT Command Buffer">
            <ConfigItem
                Id="AT Command Character [hex]"
                Desc="Each entry below specifies a character in an AT command."
                Type="uint"
                PresentHex="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=17,Bit=0,Size=16"/>
        </DefinePattern>
        <DefinePattern PatternName="User Defined Tones">
            <ConfigItem
                Id="User Defined Tones Raw Word [hex]"
                Desc="Each entry below specifies a word of data in the User Defined Tones."
                Type="uint"
                PresentHex="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=1,Bit=0,Size=16"/>
        </DefinePattern>
        <DefinePattern PatternName="Input Manager States and Events">
            <ConfigItem
                Id="Input Active State Mask [hex]"
                Desc="The application state(s) for which the event *user_event* will be valid"
                Type="bitfield"
                PresentHex="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=8,Bit=0,Size=14">
                <List use="States"/>
            </ConfigItem>
            <ConfigItem
                Id="Virtual Button Event"
                Desc="Which 'Virtual Button' event is required to cause the User event to trigger"
                Type="enum"
                PSKey="Text=Overloaded,Address=Overloaded,Word=9,Bit=8,Size=8">
                <enum key="VirtualButtonDown"
                      value="0"/>
                <enum key="VirtualButtonVShortRelease"
                      value="1"/>
                <enum key="VirtualButtonShortTimer"
                      value="2"/>
                <enum key="VirtualButtonShortRelease"
                      value="3"/>
                <enum key="VirtualButtonLongTimer"
                      value="4"/>
                <enum key="VirtualButtonLongRelease"
                      value="5"/>
                <enum key="VirtualButtonVLongTimer"
                      value="6"/>
                <enum key="VirtualButtonVLongRelease"
                      value="7"/>
                <enum key="VirtualButtonVVLongTimer"
                      value="8"/>
                <enum key="VirtualButtonVVLongRelease"
                      value="9"/>
                <enum key="VirtualButtonRepeatTimer"
                      value="10"/>
            </ConfigItem>
            <ConfigItem
                Id="Triggered User Event"
                Desc="The Application User Event that will be triggered when the Virtual Button event meets the required conditions (this is offset from EVENTS_USR_MESSAGE_BASE, (i.e. for EventUsrPowerOn, this value will be set to 1)"
                PSKey="Text=Overloaded,Address=Overloaded,Word=9,Bit=0,Size=8"
                Type="enum"
                ShowOrdered="true">
                <!--Uses User Events list in a single enum type Config Item-->
                <List use="User Event"/>
            </ConfigItem>
        </DefinePattern>
        <DefinePattern PatternName="IR Address and Code">
            <ConfigItem
                Id="IR Remote Address [hex]"
                Desc="The address of the remote control that sent the IR code (an Infrared remote may use different addresses for different buttons, so need to ensure the code was actually sent from the known RC)"
                Type="uint"
                PresentHex="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=7,Bit=0,Size=16"/>
            <ConfigItem
                Id="IR Code [hex]"
                Desc="The infrared code sent by the remote controller that converts to *input_id* for the input manager to process"
                Type="uint"
                PresentHex="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=6,Bit=8,Size=8"/>
        </DefinePattern>
        <DefinePattern PatternName="BLE Code">
            <ConfigItem
                Id="BLE HID Code [hex]"
                Desc="The HID Code sent by the remote control, Consumer HID has some values that are 12-bit length (between 0x0 and 0xFFF)"
                Type="uint"
                PresentHex="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=9,Bit=0,Size=12"/>
        </DefinePattern>
        <DefinePattern PatternName="Peer Device UUID">
            <ConfigItem
                Id="word 1 [hex]"
                Desc=""
                Type="uint"
                PresentHex="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=1,Bit=0,Size=16"/>
            <ConfigItem
                Id="word 2 [hex]"
                Desc=""
                Type="uint"
                PresentHex="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=2,Bit=0,Size=16"/>
            <ConfigItem
                Id="word 3 [hex]"
                Desc=""
                Type="uint"
                PresentHex="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=3,Bit=0,Size=16"/>
            <ConfigItem
                Id="word 4 [hex]"
                Desc=""
                Type="uint"
                PresentHex="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=4,Bit=0,Size=16"/>
            <ConfigItem
                Id="word 5 [hex]"
                Desc=""
                Type="uint"
                PresentHex="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=5,Bit=0,Size=16"/>
            <ConfigItem
                Id="word 6 [hex]"
                Desc=""
                Type="uint"
                PresentHex="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=6,Bit=0,Size=16"/>
            <ConfigItem
                Id="word 7 [hex]"
                Desc=""
                Type="uint"
                PresentHex="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=7,Bit=0,Size=16"/>
            <ConfigItem
                Id="word 8 [hex]"
                Desc=""
                Type="uint"
                PresentHex="true"
                PSKey="Text=Overloaded,Address=Overloaded,Word=8,Bit=0,Size=16"/>
        </DefinePattern>
    </DefineGroup>

    <!--The Configuration Set is logically grouped into Configuration Groups, comprising of one or more Config Items or arrays of Config Patterns (structures of config Items)-->
    <ConfigGroup Id="Audio"
                 Node="Basic">
        <ConfigGroup Id="I2S"
                     Node="Basic">
            <ConfigGroup Id="I2C Control for External I2S Amplifier"
                         Node="Basic">
                <ConfigGroup Id="Raw Command Data"
                             Node="Array">
                    <ConfigPatternArray Header="None"
                                        Name="I2S Data Word"
                                        Desc="This is the raw data of the various I2C Initialisation, Volume and Shutdown commands."
                                        StorageType="Type=VariableSingleWordSingleKey,Text=PSKEY_USR36,Address=0x2AE,WordOffset=1"
                                        StorageLength="Text=PSKEY_USR35,Address=0x2AD,Word=3,Bit=8,Size=8"
                                        Dimension="numeric:255"/>
                </ConfigGroup>
                <ConfigGroup Id="Initialisation"
                             Node="Basic">
                    <ConfigItem
                        Id="Number I2C Init Commands"
                        ShortId=""
                        Desc="Specifies how many I2C Initialisation commands are specified in the Raw Command Data, i.e. PS Key USR 36."
                        Type="uint"
                        PSKey="Text=PSKEY_USR35,Address=0x2AD,Word=3,Bit=0,Size=8"/>
                </ConfigGroup>
                <ConfigGroup Id="Volume"
                             Node="Basic">
                    <ConfigItem
                        Id="Number I2C Volume Commands"
                        ShortId=""
                        Desc="Specifies the number of individual I2C volume commands that will be sent to the I2S capable device every time a volume change is made."
                        Type="uint"
                        PSKey="Text=PSKEY_USR35,Address=0x2AD,Word=4,Bit=8,Size=8"/>
                    <ConfigItem
                        Id="Volume Commands Offset"
                        ShortId=""
                        Desc="Specifies the offset, in words, of the first I2C Volume command specified in the Raw Command Data, i.e. PS Key USR 36."
                        Type="uint"
                        PSKey="Text=PSKEY_USR35,Address=0x2AD,Word=4,Bit=0,Size=8"/>
                    <ConfigItem
                        Id="Volume Number of Bits"
                        ShortId=""
                        Desc="Specifies the number of bits of the volume setting in the I2C command."
                        Type="uint"
                        PSKey="Text=PSKEY_USR35,Address=0x2AD,Word=6,Bit=0,Size=16"/>
                    <ConfigItem
                        Id="Volume Range Max"
                        ShortId=""
                        Desc="Specifies the maximum volume value that will be sent to the I2S device to indicate maximum output level."
                        Type="uint"
                        PSKey="Text=PSKEY_USR35,Address=0x2AD,Word=7,Bit=0,Size=16"/>
                    <ConfigItem
                        Id="Volume Range Min"
                        ShortId=""
                        Desc="Specifies the minimum volume value that will be sent to the I2S device to indicate minimum output level."
                        Type="uint"
                        PSKey="Text=PSKEY_USR35,Address=0x2AD,Word=8,Bit=0,Size=16"/>
                </ConfigGroup>
                <ConfigGroup Id="Shutdown"
                             Node="Basic">
                    <ConfigItem
                        Id="Number I2C Shutdown Commands"
                        ShortId=""
                        Desc="Specifies the number of individual I2C commands that will be sent to the I2S capable device every time the device is shut down, i.e. on close of SCO or A2DP media stream."
                        Type="uint"
                        PSKey="Text=PSKEY_USR35,Address=0x2AD,Word=5,Bit=8,Size=8"/>
                    <ConfigItem
                        Id="Shutdown Commands Offset"
                        ShortId=""
                        Desc="Specifies the offset, in words, of the first I2C Shutdown command specified in the Raw Command Data, i.e. PS Key USR 36."
                        Type="uint"
                        PSKey="Text=PSKEY_USR35,Address=0x2AD,Word=5,Bit=0,Size=8"/>
                </ConfigGroup>
            </ConfigGroup>
            <ConfigItem
                Id="Plugin Type"
                ShortId=""
                Desc="Specifies which I2S plugin to use."
                Type="enum"
                PSKey="Text=PSKEY_USR35,Address=0x2AD,Word=1,Bit=8,Size=8">
                <enum key="User Defined via PS Keys USR35 USR36"
                      value="0"/>
                <enum key="SSM_2518 CSR I2S Dev Board"
                      value="1"/>
                <enum key="Customer Developed Plugin"
                      value="2"/>
            </ConfigItem>
            <ConfigItem
                Id="Master or Slave Operation"
                ShortId=""
                Desc="Specifies Master or Slave Operation."
                Type="enum"
                PSKey="Text=PSKEY_USR35,Address=0x2AD,Word=1,Bit=0,Size=8">
                <enum key="Slave"
                      value="0"/>
                <enum key="Master"
                      value="1"/>
            </ConfigItem>
            <ConfigItem
                Id="Left or Right Justified I2S"
                ShortId=""
                Desc="Choose between left justified and right justified I2S data."
                Type="enum"
                PSKey="Text=PSKEY_USR35,Address=0x2AD,Word=2,Bit=12,Size=4">
                <enum key="Left Justified"
                      value="0"/>
                <enum key="Right Justified"
                      value="1"/>
            </ConfigItem>
            <ConfigItem
                Id="Justified Data Delay by 1 bit"
                ShortId=""
                Desc="The I2S data can be delayed by 1 bit."
                Type="enum"
                PSKey="Text=PSKEY_USR35,Address=0x2AD,Word=2,Bit=8,Size=4">
                <enum key="No Delay"
                      value="0"/>
                <enum key="1 Bit Delay"
                      value="1"/>
            </ConfigItem>
            <ConfigItem
                Id="Bits Per Sample"
                ShortId=""
                Desc="Specifies the number of bits in each audio sample."
                Type="uint"
                PSKey="Text=PSKEY_USR35,Address=0x2AD,Word=2,Bit=0,Size=8"/>
            <ConfigItem
                Id="Music Resampling Frequency [Hz]"
                ShortId=""
                Desc="Specifies the music (A2DP codecs, USB, wired audio) output sample rate, e.g. 48000."
                Type="uint"
                PSKey="Text=PSKEY_USR35,Address=0x2AD,Word=9,Bit=0,Size=16"/>
            <ConfigItem
                Id="Voice Resampling Frequency [Hz]"
                ShortId=""
                Desc="Specifies the voice (CVC) output sample rate, e.g. 48000."
                Type="uint"
                PSKey="Text=PSKEY_USR35,Address=0x2AD,Word=10,Bit=0,Size=16"/>
            <ConfigItem
                Id="Bit Clock Scaling Factor"
                ShortId=""
                Desc="Specifies the I2S bit clock when running in I2S Master mode."
                Type="uint"
                PSKey="Text=PSKEY_USR35,Address=0x2AD,Word=11,Bit=0,Size=16"/>
        </ConfigGroup>
        <ConfigGroup Id="Microphone and Line Input"
                     Node="Basic">
            <ConfigGroup Id="Microphone A Parameters"
                         Node="Basic">
                <ConfigGroup Id="Mic A Drive PIO"
                             Node="Basic"
                             EnableControl="ValueToEnable=0,ConfigItemId=Drive PIO/BIAS Selection for Mic A">
                    <ConfigItem
                        Id="Drive PIO for Mic A"
                        ShortId="mic_a.drive_pio"
                        Desc=""
                        Type="enum"
                        PSKey="Text=PSKEY_USR16,Address=0x29A,Word=10,Bit=8,Size=5">
                        <List use="PIO 5 bit"/>
                    </ConfigItem>
                </ConfigGroup>
                <ConfigGroup Id="Mic A Bias"
                             Node="Basic"
                             EnableControl="ValueToEnable=1,ConfigItemId=Drive PIO/BIAS Selection for Mic A">
                    <ConfigItem
                        Id="BIAS for Mic A"
                        ShortId=""
                        Desc=""
                        Type="enum"
                        PSKey="Text=PSKEY_USR16,Address=0x29A,Word=10,Bit=8,Size=1">
                        <enum key="Mic Bias 0"
                              value="0"/>
                        <enum key="Mic Bias 1"
                              value="1"/>
                    </ConfigItem>
                </ConfigGroup>
                <ConfigItem
                    Id="Mic A Digital"
                    ShortId="mic_a.digital"
                    Desc="Selects the digital microphone inputs when set."
                    Type="bool"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=10,Bit=15,Size=1"/>
                <ConfigItem
                    Id="Mic A Preamplifier"
                    ShortId="mic_a.pre_amp"
                    Desc="Enables the microphone preamplifier when set. This bit only has an effect when the “No DSP” Audio plugin is used. CVC audio plugins automatically adjust the input gain of the device."
                    Type="bool"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=10,Bit=14,Size=1"/>
                <ConfigItem
                    Id="Gain for Mic A"
                    ShortId="Mic A Gain"
                    Desc="Sets the gain of the analogue input path."
                    Type="uint"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=10,Bit=0,Size=5"/>
                <ConfigItem
                    Id="Drive PIO/BIAS Enable for Mic A"
                    ShortId=""
                    Desc="This bit chooses between using the MIC bias output or a PIO to drive the MIC."
                    Type="bool"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=10,Bit=13,Size=1"/>
                <ConfigItem
                    Id="Drive PIO/BIAS Selection for Mic A"
                    ShortId="mic_a.bias"
                    Desc=""
                    Type="enum"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=10,Bit=7,Size=1">
                    <enum key="Use Drive PIO"
                          value="0"/>
                    <enum key="Use Bias"
                          value="1"/>
                </ConfigItem>
            </ConfigGroup>
            <ConfigGroup Id="Microphone B Parameters"
                         Node="Basic">
                <ConfigGroup Id="Mic B Drive PIO"
                             Node="Basic"
                             EnableControl="ValueToEnable=0,ConfigItemId=Drive PIO/BIAS Selection for Mic B">
                    <ConfigItem
                        Id="Drive PIO for Mic B"
                        ShortId="mic_b.drive_pio"
                        Desc=""
                        Type="enum"
                        PSKey="Text=PSKEY_USR16,Address=0x29A,Word=11,Bit=8,Size=5">
                        <List use="PIO 5 bit"/>
                    </ConfigItem>
                </ConfigGroup>
                <ConfigGroup Id="Mic B Bias"
                             Node="Basic"
                             EnableControl="ValueToEnable=1,ConfigItemId=Drive PIO/BIAS Selection for Mic B">
                    <ConfigItem
                        Id="BIAS for Mic B"
                        ShortId=""
                        Desc=""
                        Type="enum"
                        PSKey="Text=PSKEY_USR16,Address=0x29A,Word=11,Bit=8,Size=1">
                        <enum key="Mic Bias 0"
                              value="0"/>
                        <enum key="Mic Bias 1"
                              value="1"/>
                    </ConfigItem>
                </ConfigGroup>
                <ConfigItem
                    Id="Mic B Digital"
                    ShortId="mic_b.digital"
                    Desc="Selects the digital microphone inputs when set."
                    Type="bool"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=11,Bit=15,Size=1"/>
                <ConfigItem
                    Id="Mic B Preamplifier"
                    ShortId="mic_b.pre_amp"
                    Desc="Enables the microphone preamplifier when set. This bit only has an effect when the “No DSP” Audio plugin is used. CVC audio plugins automatically adjust the input gain of the device."
                    Type="bool"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=11,Bit=14,Size=1"/>
                <ConfigItem
                    Id="Gain for Mic B"
                    ShortId="Mic B Gain"
                    Desc="Sets the gain of the analogue input path."
                    Type="uint"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=11,Bit=0,Size=5"/>
                <ConfigItem
                    Id="Drive PIO/BIAS Enable for Mic B"
                    ShortId=""
                    Desc="This bit chooses between using the MIC bias output or a PIO to drive the MIC."
                    Type="bool"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=11,Bit=13,Size=1"/>
                <ConfigItem
                    Id="Drive PIO/BIAS Selection for Mic B"
                    ShortId="mic_b.bias"
                    Desc="This bit chooses between using the MIC bias output or a PIO to drive the MIC."
                    Type="enum"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=11,Bit=7,Size=1">
                    <enum key="Use Drive PIO"
                          value="0"/>
                    <enum key="Use Bias"
                          value="1"/>
                </ConfigItem>
            </ConfigGroup>
            <ConfigGroup Id="Line A Parameters"
                         Node="Basic">
                <ConfigGroup Id="Line A Drive PIO"
                             Node="Basic"
                             EnableControl="ValueToEnable=0,ConfigItemId=Drive PIO/BIAS Selection for Line A">
                    <ConfigItem
                        Id="Drive PIO for Line A"
                        ShortId="line_a.drive_pio"
                        Desc=""
                        Type="enum"
                        PSKey="Text=PSKEY_USR16,Address=0x29A,Word=12,Bit=8,Size=5">
                        <List use="PIO 5 bit"/>
                    </ConfigItem>
                </ConfigGroup>
                <ConfigGroup Id="Line A Bias"
                             Node="Basic"
                             EnableControl="ValueToEnable=1,ConfigItemId=Drive PIO/BIAS Selection for Line A">
                    <ConfigItem
                        Id="BIAS for Line A"
                        ShortId=""
                        Desc=""
                        Type="enum"
                        PSKey="Text=PSKEY_USR16,Address=0x29A,Word=12,Bit=8,Size=1">
                        <enum key="Mic Bias 0"
                              value="0"/>
                        <enum key="Mic Bias 1"
                              value="1"/>
                    </ConfigItem>
                </ConfigGroup>
                <ConfigItem
                    Id="Line A Digital"
                    ShortId="Line_a.digital"
                    Desc="Selects the digital Line inputs when set."
                    Type="bool"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=12,Bit=15,Size=1"/>
                <ConfigItem
                    Id="Line A Preamplifier"
                    ShortId="Line_a.pre_amp"
                    Desc="Enables the preamplifier when set. This bit only has an effect when the “No DSP” Audio plugin is used. CVC audio plugins automatically adjust the input gain of the device."
                    Type="bool"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=12,Bit=14,Size=1"/>
                <ConfigItem
                    Id="Gain for Line A"
                    ShortId="Line A Gain"
                    Desc="Sets the gain of the analogue input path."
                    Type="uint"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=12,Bit=0,Size=5"/>
                <ConfigItem
                    Id="Drive PIO/BIAS Enable for Line A"
                    ShortId=""
                    Desc="This bit chooses between using the Line bias output or a PIO to drive the Line A."
                    Type="bool"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=12,Bit=13,Size=1"/>
                <ConfigItem
                    Id="Drive PIO/BIAS Selection for Line A"
                    ShortId="line_a.bias"
                    Desc="This bit chooses between using the Line bias output or a PIO to drive the Line A."
                    Type="enum"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=12,Bit=7,Size=1">
                    <enum key="Use Drive PIO"
                          value="0"/>
                    <enum key="Use Bias"
                          value="1"/>
                </ConfigItem>
            </ConfigGroup>
            <ConfigGroup Id="Line B Parameters"
                         Node="Basic">
                <ConfigGroup Id="Line B Drive PIO"
                             Node="Basic"
                             EnableControl="ValueToEnable=0,ConfigItemId=Drive PIO/BIAS Selection for Line B">
                    <ConfigItem
                        Id="Drive PIO for Line B"
                        ShortId="line_b.drive_pio"
                        Desc=""
                        Type="enum"
                        PSKey="Text=PSKEY_USR16,Address=0x29A,Word=13,Bit=8,Size=5">
                        <List use="PIO 5 bit"/>
                    </ConfigItem>
                </ConfigGroup>
                <ConfigGroup Id="Line B Bias"
                             Node="Basic"
                             EnableControl="ValueToEnable=1,ConfigItemId=Drive PIO/BIAS Selection for Line B">
                    <ConfigItem
                        Id="BIAS for Line B"
                        ShortId=""
                        Desc=""
                        Type="enum"
                        PSKey="Text=PSKEY_USR16,Address=0x29A,Word=13,Bit=8,Size=1">
                        <enum key="Mic Bias 0"
                              value="0"/>
                        <enum key="Mic Bias 1"
                              value="1"/>
                    </ConfigItem>
                </ConfigGroup>
                <ConfigItem
                    Id="Line B Digital"
                    ShortId="line_b.digital"
                    Desc="Selects the digital Line inputs when set."
                    Type="bool"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=13,Bit=15,Size=1"/>
                <ConfigItem
                    Id="Line B Preamplifier"
                    ShortId="line_b.pre_amp"
                    Desc="Enables the preamplifier when set. This bit only has an effect when the “No DSP” Audio plugin is used. CVC audio plugins automatically adjust the input gain of the device."
                    Type="bool"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=13,Bit=14,Size=1"/>
                <ConfigItem
                    Id="Gain for Line B"
                    ShortId="Line B Gain"
                    Desc="Sets the gain of the analogue input path."
                    Type="uint"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=13,Bit=0,Size=5"/>
                <ConfigItem
                    Id="Drive PIO/BIAS Enable for Line B"
                    ShortId=""
                    Desc="This bit chooses between using the Line bias output or a PIO to drive the Line B."
                    Type="bool"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=13,Bit=13,Size=1"/>
                <ConfigItem
                    Id="Drive PIO/BIAS Selection for Line B"
                    ShortId=""
                    Desc="This bit chooses between using the Line bias output or a PIO to drive the Line B."
                    Type="enum"
                    PSKey="Text=PSKEY_USR16,Address=0x29A,Word=13,Bit=7,Size=1">
                    <enum key="Use Drive PIO"
                          value="0"/>
                    <enum key="Use Bias"
                          value="1"/>
                </ConfigItem>
            </ConfigGroup>
        </ConfigGroup>
        <ConfigGroup Id="Routing"
                     Node="Basic">
            <ConfigGroup Id="Audio Plugin Features"
                         Node="Basic">
                <ConfigItem
                    Id="Audio Output Type"
                    ShortId="audio_output_type"
                    Desc=""
                    Type="enum"
                    PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=1,Bit=14,Size=2">
                    <enum key="None"
                          value="0"/>
                    <enum key="DAC"
                          value="1"/>
                    <enum key="I2S"
                          value="2"/>
                    <enum key="SPDIF"
                          value="3"/>
                </ConfigItem>
		<ConfigItem
                    Id="Amplifier Power Down by PIO"
                    ShortId="AmplifierShutDownByPIO"
                    Desc="When set, I2S and DAC audio amplifier shut down in Limbo state is managed by Sink Active and Power On output PIOs, otherwise, PIO controlled power down mode is not enabled. "
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=8,Bit=2,Size=1"/>		
                <ConfigItem
                    Id="Audio Input Routing"
                    ShortId="audio_input_routing"
                    Desc=""
                    Type="enum"
                    PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=1,Bit=12,Size=2">
                    <enum key="Internal"
                          value="0"/>
                    <enum key="I2S"
                          value="1"/>
                    <enum key="SPDIF"
                          value="2"/>
                </ConfigItem>
                <ConfigItem
                    Id="Stereo"
                    ShortId="stereo"
                    Desc=""
                    Type="bool"
                    PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=1,Bit=7,Size=1"/>
                <ConfigItem
                    Id="Back Channel DSP Kap File Selection"
                    ShortId="back_channel_config"
                    Desc="Determines if the low latency DSP applications should be used when negotiating the aptX and Faststream codecs which provide additional CVC wideband back channel support."
                    Type="enum"
                    PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=1,Bit=0,Size=2">
                    <enum key="None"
                          value="0"/>
                    <enum key="Use Two Mic"
                          value="1"/>
                    <enum key="Use One Mic"
                          value="2"/>
                </ConfigItem>
            </ConfigGroup>
            <ConfigGroup Id="SPDIF Configuration"
                         Node="Basic">
                <ConfigItem
                    Id="Supported SPDIF Input Codecs"
                    ShortId="spdif_input_type"
                    Desc="This bitmask specifies which codecs are to be supported as SPDIF inputs. If no bits are checked SPDIF input will expect PCM. N.b. a license is required if AC3 audio is to be used."
                    Type="bitfield"
                    PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=1,Bit=8,Size=4">
                    <bitfield key="AC3"
                              value="0"/>
                    <bitfield key="AAC"
                              value="1"/>
                    <bitfield key="MP3"
                              value="2"/>
                </ConfigItem>
                <ConfigItem
                    Id="Target Latency [ms]"
                    ShortId="target_latency"
                    Desc="Specifies the target latency in ms. Expected to be in the range of 0 to 150ms"
                    Type="uint"
                    PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=6,Bit=0,Size=8"/>
            </ConfigGroup>
            <ConfigGroup Id="SPDIF AC3 Configuration"
                         Node="Basic">
                <ConfigGroup Id="Audio Assignment to Left and Right Outputs"
                             Node="Basic"
                             EnableControl="ValueToEnable=1,ConfigItemId=Enable Channel Routing">
                    <ConfigItem
                        Id="Channel to be Routed to Left Output"
                        ShortId="channel_to_be_routed_to_left"
                        Desc="channel_to_be_routed_to_left."
                        Type="enum"
                        PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=3,Bit=5,Size=3">
                        <List use="Audio Routing"/>
                    </ConfigItem>
                    <ConfigItem
                        Id="Channel to be Routed to Right Output"
                        ShortId="channel_to_be_routed_to_right"
                        Desc="channel_to_be_routed_to_right."
                        Type="enum"
                        PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=3,Bit=8,Size=3">
                        <List use="Audio Routing"/>
                    </ConfigItem>
                </ConfigGroup>
                <ConfigItem
                    Id="Compression Mode"
                    ShortId="compression_mode"
                    Desc=""
                    Type="enum"
                    PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=2,Bit=14,Size=2">
                    <enum key="custom 1"
                          value="0"/>
                    <enum key="custom 2"
                          value="1"/>
                    <enum key="line out"
                          value="2"/>
                    <enum key="RF"
                          value="3"/>
                </ConfigItem>
                <ConfigItem
                    Id="Cut [%]"
                    ShortId="cut_ratio"
                    Desc="This specifies the Cut to be applied, as a percentage."
                    Type="uint"
                    Range="Min=0,Max=100"
                    EnableTrackBar="true"
                    PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=2,Bit=0,Size=7"/>
                <ConfigItem
                    Id="Boost [%]"
                    ShortId="boost_ratio"
                    Desc="This specifies the Boost to be applied, as a percentage."
                    Type="uint"
                    Range="Min=0,Max=100"
                    EnableTrackBar="true"
                    PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=2,Bit=7,Size=7"/>
                <ConfigItem
                    Id="Output Mode Selection"
                    ShortId="output_mode"
                    Desc="Output mode selection, either 2.0 or multi-channel."
                    Type="enum"
                    PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=3,Bit=13,Size=1">
                    <enum key="2.0"
                          value="0"/>
                    <enum key="Multi-channel"
                          value="1"/>
                </ConfigItem>
                <ConfigItem
                    Id="Stereo Mixing Mode"
                    ShortId="stereo_mixing_mode"
                    Desc=""
                    Type="enum"
                    PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=3,Bit=11,Size=2">
                    <enum key="Auto Mixing Mode"
                          value="0"/>
                    <enum key="Lt/Rt Mixing Mode"
                          value="1"/>
                    <enum key="Lo/Ro Mixing Mode"
                          value="2"/>
                </ConfigItem>
                <ConfigItem
                    Id="Enable LFE Output"
                    ShortId="lfe_output_enable"
                    Desc="Enables the Low Frequency Effect algorithm."
                    Type="bool"
                    PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=3,Bit=0,Size=1"/>
                <ConfigItem
                    Id="Enable Karaoke Capability"
                    ShortId="karaoke_enable"
                    Desc=""
                    Type="bool"
                    PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=3,Bit=1,Size=1"/>
                <ConfigItem
                    Id="Dual Mono Mode"
                    ShortId="dual_mono_mode"
                    Desc=""
                    Type="enum"
                    PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=3,Bit=2,Size=2">
                    <enum key="Stereo"
                          value="0"/>
                    <enum key="Left Only"
                          value="1"/>
                    <enum key="Right Only"
                          value="2"/>
                    <enum key="Mix"
                          value="3"/>
                </ConfigItem>
                <ConfigItem
                    Id="Enable Channel Routing"
                    ShortId="enable_channel_routing"
                    Desc=""
                    Type="bool"
                    PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=3,Bit=4,Size=1"/>
            </ConfigGroup>
            <ConfigGroup Id="Silence Detection Features"
                         Node="Basic">
                <ConfigItem
                    Id="Threshold"
                    ShortId="threshold"
                    Desc="This threshold is used to configure the silence detection used in the DSP. It is a linear level expressed as a 16 bit integer, where 32767 is full scale. If you wish to convert this into a value in dB units, the threshold to be set can be calculated as:&#10;&#10;32767 * 10 ^ (dBthresh / 20)&#10;&#10;Where dBthresh is the threshold level (quoted as dBFS).&#10;&#10;10 is a reasonable default for the threshold (it equates to -70 dBFS)."
                    Type="uint"
                    Range="Min=0,Max=32767"
                    PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=4,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Trigger Time [s]"
                    ShortId="trigger_time"
                    Desc="The trigger time for the silence detection to fire is a 16 bit integer which gives the time in seconds.&#10;&#10;600 is a reasonable default for the trigger time (i.e. 10 minutes)."
                    Type="uint"
                    PSKey="Text=PSKEY_USR37,Address=0x2AF,Word=5,Bit=0,Size=16"/>
            </ConfigGroup>
        </ConfigGroup>
        <ConfigGroup Id="USB"
                     Node="Basic">
            <ConfigGroup Id="Class of Device"
                         Node="Basic">
                <ConfigItem
                    Id="Microphone Audio"
                    ShortId="microphone"
                    Desc="The USB Class of Device setting will be USB_DEVICE_CLASS_TYPE_AUDIO_MICROPHONE = 0x01"
                    Type="bool"
                    PSKey="Text=PSKEY_USR32,Address=0x2AA,Word=12,Bit=0,Size=1"/>
                <ConfigItem
                    Id="Speaker Audio"
                    ShortId="speaker"
                    Desc="The USB Class of Device setting will be USB_DEVICE_CLASS_TYPE_AUDIO_SPEAKER = 0x02"
                    Type="bool"
                    PSKey="Text=PSKEY_USR32,Address=0x2AA,Word=12,Bit=1,Size=1"/>
                <ConfigItem
                    Id="Battery Charging"
                    ShortId="batt_chrg"
                    Desc="The USB Class of Device setting will be USB_DEVICE_CLASS_TYPE_BATTERY_CHARGING = 0x04"
                    Type="bool"
                    PSKey="Text=PSKEY_USR32,Address=0x2AA,Word=12,Bit=2,Size=1"/>
                <ConfigItem
                    Id="Mass Storage"
                    ShortId="mass_storage"
                    Desc="The USB Class of Device setting will be USB_DEVICE_CLASS_TYPE_MASS_STORAGE = 0x08"
                    Type="bool"
                    PSKey="Text=PSKEY_USR32,Address=0x2AA,Word=12,Bit=3,Size=1"/>
                <ConfigItem
                    Id="Consumer Transport Control"
                    ShortId="trans_control"
                    Desc="The USB Class of Device setting will be USB_DEVICE_CLASS_TYPE_HID_CONSUMER_TRANSPORT_CONTROL = 0x10"
                    Type="bool"
                    PSKey="Text=PSKEY_USR32,Address=0x2AA,Word=12,Bit=4,Size=1"/>
                <ConfigItem
                    Id="Media Keyboard"
                    ShortId="media_keyboard"
                    Desc="The USB Class of Device setting will be USB_DEVICE_CLASS_TYPE_HID_KEYBOARD = 0x20"
                    Type="bool"
                    PSKey="Text=PSKEY_USR32,Address=0x2AA,Word=12,Bit=5,Size=1"/>
                <ConfigItem
                    Id="VM Upgrade"
                    ShortId="vm_upgrade"
                    Desc="The USB Class of Device setting will be USB_DEVICE_CLASS_TYPE_HID_UPGRADE_CONTROL = 0x40"
                    Type="bool"
                    PSKey="Text=PSKEY_USR32,Address=0x2AA,Word=12,Bit=6,Size=1"/>
			</ConfigGroup>
            <ConfigItem
                Id="USB Audio Always Routed"
                ShortId="audio_routed"
                Desc="When set the USB audio is routed even when it is not in use."
                Type="bool"
                PSKey="Text=PSKEY_USR32,Address=0x2AA,Word=11,Bit=15,Size=1"/>
            <ConfigItem
                Id="USB Plug-in Type"
                ShortId="plugin_type"
                Desc="Sets the number and type of channels being used for audio routing."
                Type="enum"
                PSKey="Text=PSKEY_USR32,Address=0x2AA,Word=11,Bit=12,Size=2">
                <enum key="Stereo"
                      value="0"/>
                <enum key="Mono NB"
                      value="1"/>
                <enum key="Mono WB"
                      value="2"/>
            </ConfigItem>
            <ConfigItem
                Id="USB Plug-in Index"
                ShortId="plugin_index"
                Desc="Specifies the DSP plug-in to be used."
                Type="enum"
                PSKey="Text=PSKEY_USR32,Address=0x2AA,Word=11,Bit=8,Size=4">
                <List use="DSP Plugin Type"/>
            </ConfigItem>
            <ConfigItem
                Id="Attach Timeout [s]"
                ShortId="attach_timeout"
                Desc="If after attaching the USB it does not enumerate within the attach timeout, in seconds, the Sink will set low power boot mode."
                Type="uint"
                PSKey="Text=PSKEY_USR32,Address=0x2AA,Word=11,Bit=4,Size=4"/>
            <ConfigItem
                Id="Deconfigure Timeout [s]"
                ShortId="deconfigure_timeout"
                Desc="If the USB becomes deconfigured and no further action is taken within the deconfigured timeout period, in seconds, the Sink sets to low power boot mode."
                Type="uint"
                PSKey="Text=PSKEY_USR32,Address=0x2AA,Word=11,Bit=0,Size=4"/>
        </ConfigGroup>
        <ConfigGroup Id="Volume Control"
                     Node="Basic">
            <ConfigGroup Id="Music"
                         Node ="Basic">
                <ConfigItem
                    Id="Volume Control Type"
                    ShortId="volume_type"
                    Desc="Specifies whether to use digital, analogue, hybrid or external mode of operation for music volume control."
                    Type="enum"
                    PSKey="Text=PSKEY_USR12,Address=0x296,Word=1,Bit=0,Size=2">
                    <enum key="Digital"
                          value="0"/>
                    <enum key="Analog"
                          value="1"/>
                    <enum key="Digital and Analog"
                          value="2"/>
                    <enum key="External"
                          value="3"/>
                </ConfigItem>
                <ConfigItem
                    Id="Number of Volume Steps From Min to Max"
                    ShortId="no_of_steps"
                    Desc="Number of steps of volume change permitted in the range of 0 to (Max_Steps - 1)."
                    Type="uint"
                    Range="Min=1,Max=500"
                    PSKey="Text=PSKEY_USR12,Address=0x296,Word=2,Bit=0,Size=16"/>
                <ConfigItem
                    Id="DAC Gain Index (Digital Only)"
                    ShortId="system_volume"
                    Desc="Fixed DAC gain in decimal levels from 0-15 to be applied when operating in digital volume mode, ignored in other operating modes."
                    Type="uint"
                    PSKey="Text=PSKEY_USR12,Address=0x296,Word=3,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Fixed Trim Volume on Left Channel [dB/60]"
                    ShortId="trim_volume_left"
                    Desc="Trim gain left, in 1/60th dB units, configured at factory."
                    Type="int"
                    Range="Min=-720,Max=720"
                    PSKey="Text=PSKEY_USR12,Address=0x296,Word=4,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Fixed Trim Volume on Right Channel [dB/60]"
                    ShortId="trim_volume_right"
                    Desc="Trim gain right, in 1/60th dB units, configured at factory."
                    Type="int"
                    Range="Min=-720,Max=720"
                    PSKey="Text=PSKEY_USR12,Address=0x296,Word=5,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Volume Steps Level Knee Value 1"
                    ShortId="volume_knee_value_1"
                    Desc="The first index into the list of discrete volume steps at which the gradient of the curve of dB conversion changes."
                    Type="int"
                    PSKey="Text=PSKEY_USR12,Address=0x296,Word=6,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Knee Value 1  [dB]"
                    ShortId="dB_knee_value_1"
                    Desc="The value [dB] for the first point at which the gradient of the curve of dB conversion changes.&#10;&#10;Warning: this value should always be configured within the range Minimum Gain [dB] &lt; Knee Value 1 [dB] &lt; Maximum Gain [dB]."
                    Type="int"
                    Range="Min=-32768,Max=0"
                    PSKey="Text=PSKEY_USR12,Address=0x296,Word=8,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Volume Steps Level Knee Value 2"
                    ShortId="volume_knee_value_2"
                    Desc="The second index into the list of discrete volume steps at which the gradient of the curve of dB conversion changes."
                    Type="int"
                    PSKey="Text=PSKEY_USR12,Address=0x296,Word=7,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Knee Value 2 [dB]"
                    ShortId="dB_knee_value_2"
                    Desc="The value [dB] for the second point at which the gradient of the curve of dB conversion changes.&#10;&#10;Warning: this value should always be configured within the range Minimum Gain [dB] &lt; Knee Value 2 [dB] &lt; Maximum Gain [dB]."
                    Type="int"
                    Range="Min=-32768,Max=0"
                    PSKey="Text=PSKEY_USR12,Address=0x296,Word=9,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Maximum Gain [dB]"
                    ShortId="dB_max"
                    Desc="The value [dB] for the maximum volume level.&#10;&#10;Warning: The maximum gain is constrained to 0dB in this tool. Setting gain values greater than 0dB can cause distortion of the output audio, depending on the Volume Control configuration applied in the Sink design."
                    Type="int"
                    Range="Min=-32768,Max=0"
                    PSKey="Text=PSKEY_USR12,Address=0x296,Word=10,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Minimum Gain [dB]"
                    ShortId="dB_min"
                    Desc="The value [dB] for the minimum volume level.&#10;&#10;Warning: The minimum gain should not be configured as greater than the Maximum Gain [dB] value."
                    Type="int"
                    Range="Min=-32768,Max=0"
                    PSKey="Text=PSKEY_USR12,Address=0x296,Word=11,Bit=0,Size=16"/>
            </ConfigGroup>
            <ConfigGroup Id="Voice"
                         Node="Array">
                <ConfigPatternArray Header="Volume Profile Index"
                                    Name="Volume Configuration Settings"
                                    StorageType="Type=MultipleWordSingleKey,Text=PSKEY_USR12,Address=0x296,PatternSizeInWords=2"
                                    Dimension="UsePatternHeader"/>
            </ConfigGroup>
            <ConfigItem
                Id="Default Volume"
                ShortId="DefaultVolume"
                Desc="This is the volume level used after initial power up. The default volume can be set in the range 0 to 15. The sixteen levels can be configured in PSKEY_SPEAKER_GAIN_MAPPING."
                Type="enum"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=4,Bit=4,Size=4">
                <List use="HFP"/>
            </ConfigItem>
            <ConfigItem
                Id="Mute Reminder uses Default Volume"
                ShortId="MuteToneFixedVolume"
                Desc="When set the mute reminder tone is played at a fixed volume, set by the default volume level parameter 'Default Volume'."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=3,Bit=0,Size=1"/>
            <ConfigItem
                Id="Adjust Volume whilst Muted"
                ShortId="AdjustVolumeWhilstMuted"
                Desc="Allows the volume to be adjusted while the Sink has been muted (via the EventMuteToggle or EventMuteOn)."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=1,Bit=4,Size=1"/>
            <ConfigItem
                Id="Volume Change Causes Unmute"
                ShortId="VolumeChangeCausesUnMute"
                Desc="If the Sink is muted (via the EventMuteToggle or EventMuteOn) this bit determines the action to take when an EventVolumeUp/EventVolumeDown or an AG volume indication message occurs."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=1,Bit=3,Size=1"/>
        </ConfigGroup>
        <ConfigItem
            Id="Use Low Power Audio Codecs"
            ShortId="UseLowPowerAudioCodecs"
            Desc="Setting this bit will result in the Sink using the low power audio codec options to help reduce Sink power consumption."
            Type="bool"
            PSKey="Text=PSKEY_USR6,Address=0x290,Word=3,Bit=7,Size=1"/>
        <ConfigItem
            Id="Audio Plug-in"
            ShortId="audio_plugin"
            Desc="Specifies which audio plug-in is used for SCO audio connections. N.b. The bit values for the Sink SDK platform will be dependent on the DSP projects that are included in the Sink project."
            Type="enum"
            PSKey="Text=PSKEY_USR6,Address=0x290,Word=4,Bit=8,Size=4">
            <List use="DSP Plugin Type"/>
        </ConfigItem>
    </ConfigGroup>
    <ConfigGroup Id="Bluetooth"
                 Node="Basic">
        <ConfigGroup Id="Link Control"
                     Node="Basic">
            <ConfigItem
                Id="Disable Role Switching"
                ShortId="DisableRoleSwitching"
                Desc="When set the Sink will not send role switch requests to the AG. This feature may be useful if the AG does not support role switching."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=4,Bit=12,Size=1"/>
            <ConfigItem
                Id="Encryption Refresh Timeout [mins]"
                ShortId="EncryptionRefreshTimeout_m"
                Desc="This timer value, in minutes, causes the link encryption key to change when the timer expires, e.g. if set at 15 minutes the key used to encrypt the Bluetooth link is changed every 15 minutes, this improves the security of the Sink. Note: The encryption is only refreshed when no SCO link is open, i.e. there are no active calls. If the timer expirers when there is an active call, no action is taken and the timer is rescheduled for another timeout period."
                Type="uint"
                PSKey="Text=PSKEY_USR8,Address=0x292,Word=10,Bit=0,Size=16"/>
        </ConfigGroup>
        <ConfigGroup Id="Connection Management"
                     Node="Basic">
            <ConfigGroup Id="at Power On"
                         Node="Basic">
                <ConfigItem
                    Id="Automatically Reconnect at Power On"
                    ShortId="AutoReconnectPowerOn"
                    Desc="If this item is set it enables automatic Reconnection after a power on event."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=2,Bit=13,Size=1"/>
                <ConfigItem
                    Id="After Power On Connect To"
                    ShortId="ActionOnPowerOn"
                    Desc="If the AutoReconnectPowerOn is enabled ActionOnPowerOn defines the AG that the Sink tries to connect to at next Power On."
                    Type="enum"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=2,Bit=0,Size=2">
                    <enum key="Attempt to Reconnect to the last connected AG"
                          value="0"/>
                    <enum key="Attempt to connect to all 8 devices in the paired device list"
                          value="1"/>
                    <enum key="Initiate RSSI Inquiry (proximity pairing) mode"
                          value="2"/>
                </ConfigItem>
                <ConfigItem
                    Id="Different SLC Connected Event at Power On"
                    ShortId="UseDiffConnectedEventAtPowerOn"
                    Desc="When set, the event EventSLCConnectedAfterPowerOn is generated when an SLC occurs straight after power on. The event EventSLCConnected is generated on SLC events when the Sink has already been on for some time."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=3,Bit=9,Size=1"/>
                <ConfigItem
                    Id="Enter Discoverable Mode at Power On"
                    ShortId="pair_mode_en"
                    Desc="This automatically enables the connectable/discoverable mode after a power up."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=1,Bit=0,Size=1"/>
            </ConfigGroup>
            <ConfigGroup Id="Pairing"
                         Node="Basic">
                <ConfigItem
                    Id="BT2.1 Man in the Middle"
                    ShortId="ManInTheMiddle"
                    Desc="When set Bluetooth 2.1 Man in the Middle enabled. Enabling this feature requires further customer development of the Sink application to support Man in the Middle mode."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=3,Bit=10,Size=1"/>
                <ConfigItem
                    Id="Enter Pairing Mode on Failure to Connect"
                    ShortId="EnterPairingModeOnFailureToConnect"
                    Desc="If this item is set the sink goes into pairing mode if it fails to connect with any paired devices, otherwise it goes into connectable mode."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=1,Bit=7,Size=1"/>
                <ConfigItem
                    Id="Limit RSSI Subwoofer Pairing"
                    ShortId="LimitRssiSubwooferPairing"
                    Desc="When set this enables subwoofer RSSI pairing that ensures signal strength is higher than the configured threshold."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=1,Bit=1,Size=1"/>
                <ConfigItem
                    Id="Action on Pairing Timeout"
                    ShortId="PowerDownOnDiscoTimeout"
                    Desc="This allows the action taken on a pairing mode timeout to be defined."
                    Type="enum"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=2,Bit=6,Size=2">
                    <enum key="Return to connectable mode"
                          value="0"/>
                    <enum key="Power off"
                          value="1"/>
                    <enum key="Power off if PDL is empty"
                          value="2"/>
                </ConfigItem>
                <ConfigItem
                    Id="PDL Size"
                    ShortId="pdl_size"
                    Desc="The maximum number of entries that may be stored in the paired devices list."
                    Type="uint"
                    PSKey="Text=PSKEY_USR7,Address=0x291,Word=1,Bit=0,Size=16"/>
                <ConfigItem
                    Id="RSSI Pairing if PDL Less Than"
                    ShortId="PairIfPDLLessThan"
                    Desc="When set to a non-zero value and the number of devices in the paired devices list is less than this value, the Sink goes into RSSI Inquiry (Proximity Pairing) mode."
                    Type="uint"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=5,Bit=4,Size=2"/>
                <ConfigItem
                    Id="Secure Pairing Mode Enable"
                    ShortId="SecurePairing"
                    Desc="This bit enables secure pairing mode. If set, then the Sink only accepts pin code requests when in pairing mode (connectable/discoverable state). This prevents a remote user from pairing with the Sink without the Sink being specifically placed into pairing mode. This is over-ridden if the Sink initiates the connection. i.e. if a Sink attempts to connect to a remote AG without the correct link key (or has the bdaddr but not the link key) then the Sink will accept a pin code request."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=3,Bit=5,Size=1"/>
                <ConfigItem
                    Id="Power Off after PDL is Reset"
                    ShortId="PowerOffAfterPDLReset"
                    Desc="If this item is set the Sink will power off when the paired devices list is reset."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=1,Bit=11,Size=1"/>
                <ConfigItem
                    Id="Pairing Mode Timeout if PDL is Empty [s]"
                    ShortId="PairModeTimeoutIfPDL_s"
                    Desc="Zero to disable, if set to a non zero value this is the pairing mode timeout value, in seconds, if the PDL is completely empty. If the PDL is not empty the PairModeTimeout value is used instead."
                    Type="uint"
                    PSKey="Text=PSKEY_USR8,Address=0x292,Word=8,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Paring Timeout [s]"
                    ShortId="PairModeTimeout_s"
                    Desc="The time in seconds that the Sink remains in the connectable / discoverable state (pairing mode). Setting this to 0 results in the Sink entering and immediately exiting discoverable mode, with the result that the device cannot be discovered. If the Sink is to always be discoverable while not connected, then the feature bit Automatic Pairing Mode Enable (see PSKEY_USR6) should be used in conjunction with this timeout."
                    Type="uint"
                    PSKey="Text=PSKEY_USR8,Address=0x292,Word=5,Bit=0,Size=16"/>
            </ConfigGroup>
            <ConfigGroup Id="Connection"
                         Node="Basic">
                <ConfigItem
                    Id="Auto Answer on Connect"
                    ShortId="AutoAnswerOnConnect"
                    Desc="This allows the Sink to send an answer (ATA) AT command if an incoming call is detected on connection."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=1,Bit=8,Size=1"/>
                <ConfigItem
                    Id="Encrypt on SLC establishment"
                    ShortId="EncryptOnSLCEstablishment"
                    Desc="This forces Encryption on SLC establishment. Some Nokia S40 phones now do not force encryption on the SLC. Setting this bit ensures that encryption is used."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=3,Bit=8,Size=1"/>
                <ConfigItem
                    Id="Go Connectable on Button Press"
                    ShortId="GoConnectableButtonPress"
                    Desc="Makes the Sink connectable on a button press. This is used with multipoint operation in the situation where one Sink is already connected and the user wishes to connect a second Sink and needs to make the Sink connectable to do so."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=2,Bit=15,Size=1"/>
                <ConfigItem
                    Id="Go Connectable during Link Loss"
                    ShortId="GoConnectableDuringLinkLoss"
                    Desc="When enabled the Sink is discoverable while attempting to reconnect to a dropped device."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=4,Bit=1,Size=1"/>
            </ConfigGroup>
            <ConfigGroup Id="Discovery"
                         Node="Basic">
                <ConfigItem
                    Id="Remain Discoverable at All Times"
                    ShortId="RemainDiscoverableAtAllTimes"
                    Desc="If this item is set the Sink remains discoverable at all times. This is useful for Multipoint operation."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=1,Bit=10,Size=1"/>
                <ConfigItem
                    Id="Discoverable if PDL Less Than"
                    ShortId="DiscoIfPDLLessThan"
                    Desc="This forces the Sink to Enter Discoverable mode (pairing) if the paired device list is less than the entry. An entry of 2 would mean that if the Sink has previously paired with either 0 or 1 devices, then the Sink enters discoverable mode. 0 means feature disabled."
                    Type="uint"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=3,Bit=12,Size=3"/>
                <ConfigItem
                    Id="Do Not Go Discoverable during Link Loss"
                    ShortId="DoNotDiscoDuringLinkLoss"
                    Desc="When set the Sink does not enter discoverable mode if a link loss event has occurred."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=3,Bit=11,Size=1"/>
            </ConfigGroup>
            <ConfigGroup Id="Reconnection"
                         Node="Basic">
                <ConfigItem
                    Id="Reconnect on Panic"
                    ShortId="ReconnectOnPanic"
                    Desc="If this item is set the Sink silently reboots and reconnects to the AG in the event of a panic."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=1,Bit=15,Size=1"/>
                <ConfigItem
                    Id="Reconnection Action after Panic"
                    ShortId="ActionOnPanicReset"
                    Desc="Sets the reconnection action type if the chip reboots as a result of an application or firmware panic."
                    Type="enum"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=5,Bit=1,Size=2">
                    <enum key="Attempt to Reconnect to the last connected AG"
                          value="0"/>
                    <enum key="Attempt to connect to all 8 devices in the paired device list"
                          value="1"/>
                    <enum key="Initiate RSSI Inquiry (proximity pairing) mode"
                          value="2"/>
                </ConfigItem>
                <ConfigItem
                    Id="Reconnect Last Number of Attempts to Try"
                    ShortId="ReconnectLastAttempts"
                    Desc="When using the reconnection type of LAST, this parameter controls the number of times the Sink attempts to connect to the last connected devices, a minimum value of 2 is suggested for this parameter. The range of ReconnectLastAttempts is 0 to 7."
                    Type="uint"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=6,Bit=0,Size=3"/>
                <ConfigItem
                    Id="After Disconnection With Active Audio"
                    ShortId="ActionOnCallTransfer"
                    Desc="Defines the AG that the device will try to connect to when a call that has been transferred to an AG is transferred back to the Sink (using the Sink). The Call Transfer Reconnect Action is evoked when the Sink is used to transfer a call to the AG then back to the Sink. This only applies to AGs that disconnect the Sink when it transfers a call."
                    Type="enum"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=2,Bit=4,Size=2">
                    <enum key="Attempt to Reconnect to the last connected AG"
                          value="0"/>
                    <enum key="Attempt to connect to all 8 devices in the paired device list"
                          value="1"/>
                    <enum key="Initiate RSSI Inquiry (proximity pairing) mode"
                          value="2"/>
                </ConfigItem>
                <ConfigItem
                    Id="Max Number of Reconnection Attempts"
                    ShortId="ReconnectionAttempts"
                    Desc="This specifies the number of reconnection attempts following an establish SLC event, or automatic reconnection event, if set to 0 and the reconnection action is set to 'Attempt to connect to all 8 devices in the paired device list' the PDL will be traversed once only, if this value is set to 100 for example the PDL will be traversed for 100 connection attempts."
                    Type="uint"
                    PSKey="Text=PSKEY_USR8,Address=0x292,Word=9,Bit=0,Size=16"/>
            </ConfigGroup>
            <ConfigGroup Id="RSSI Parameters"
                         Node="Basic">
                <ConfigItem
                    Id="Inquiry Tx Power"
                    ShortId="tx_power"
                    Desc="The inquiry transmit power used. See HCI_Write_Inquiry_Transmit_Power_Level command in the Bluetooth Specification v2.1 + EDR."
                    Type="int"
                    Range="Min=-70,Max=20"
                    PSKey="Text=PSKEY_USR15,Address=0x299,Word=1,Bit=0,Size=16"/>
                <ConfigItem
                    Id="RSSI Threshold"
                    ShortId="threshold"
                    Desc="The peak RSSI value that any discovered device’s RSSI value must exceed to be considered a suitable in-range device."
                    Type="int"
                    PSKey="Text=PSKEY_USR15,Address=0x299,Word=2,Bit=0,Size=16"/>
                <ConfigItem
                    Id="RSSI Difference Threshold"
                    ShortId="diff_threshold"
                    Desc="The difference in the RSSI values returned by two discovered devices must exceed this value in order for the Sink to initiate pairing with the stronger device."
                    Type="int"
                    PSKey="Text=PSKEY_USR15,Address=0x299,Word=3,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Class Of Device Filter"
                    ShortId="cod_filter"
                    Desc="Defines the Class of device that the inquiry looks for. Class of Device Filter values are detailed in the Assigned Number document available on the Bluetooth SIG website."
                    Type="ulong"
                    PSKey="Text=PSKEY_USR15,Address=0x299,MsWord=4,MsBit=0,MsSize=16,LsWord=5,LsBit=0,LsSize=16"/>
                <ConfigItem
                    Id="Connection Threshold"
                    ShortId="conn_threshold"
                    Desc="Defines the peak RSSI value that any device's RSSI value must exceed to be connected to automatically, using the RSSI auto connection feature."
                    Type="int"
                    PSKey="Text=PSKEY_USR15,Address=0x299,Word=6,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Connection Difference"
                    ShortId="conn_diff_threshold"
                    Desc="Defines the difference in RSSI values returned by two devices before the stronger device is considered suitable for the auto connection feature."
                    Type="int"
                    PSKey="Text=PSKEY_USR15,Address=0x299,Word=7,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Maximum Responses"
                    ShortId="max_responses"
                    Desc="Specifies a limit for the number of devices found during an inquiry search, if 0 value there is no limit on the number of devices found."
                    Type="uint"
                    PSKey="Text=PSKEY_USR15,Address=0x299,Word=8,Bit=8,Size=8"/>
                <ConfigItem
                    Id="Inquiry Timeout [1.28*s]"
                    ShortId="timeout"
                    Desc="Specifies the maximum inquiry time for device searching, in units of 1.28 seconds"
                    Type="uint"
                    PSKey="Text=PSKEY_USR15,Address=0x299,Word=8,Bit=0,Size=8"/>
                <ConfigItem
                    Id="Inquiry Timeout Period [s]"
                    ShortId="InquiryTimeout_s"
                    Desc="This is the timeout value, in seconds, for RSSI initiated pairing."
                    Type="uint"
                    PSKey="Text=PSKEY_USR8,Address=0x292,Word=11,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Resume Timeout [s]"
                    ShortId="resume_timeout"
                    Desc="Time to wait between inquiries, in seconds."
                    Type="uint"
                    PSKey="Text=PSKEY_USR15,Address=0x299,Word=9,Bit=8,Size=8"/>
                <ConfigItem
                    Id="Number of Results to Store"
                    ShortId="num_results"
                    Desc="Specifies the number of results from a search that are stored."
                    Type="uint"
                    PSKey="Text=PSKEY_USR15,Address=0x299,Word=9,Bit=4,Size=4"/>
                <ConfigItem
                    Id="Connect if in PDL"
                    ShortId="connect_if_in_pdl"
                    Desc="When set this feature will prevent the connection to any device that is not currently in the Paired Device List."
                    Type="bool"
                    PSKey="Text=PSKEY_USR15,Address=0x299,Word=9,Bit=3,Size=1"/>
                <ConfigItem
                    Id="Don’t Pair if in PDL"
                    ShortId="dont_pair_if_in_pdl"
                    Desc="When set, this feature prevents the Sink from trying to pair to a device that has been previously paired to the Sink and is currently in the Paired Device List."
                    Type="bool"
                    PSKey="Text=PSKEY_USR15,Address=0x299,Word=9,Bit=2,Size=1"/>
                <ConfigItem
                    Id="Try All Discovered"
                    ShortId="try_all_discovered"
                    Desc="When set, this feature forces the Sink to attempt to pair/connect to the entire list of devices it found during a search."
                    Type="bool"
                    PSKey="Text=PSKEY_USR15,Address=0x299,Word=9,Bit=1,Size=1"/>
                <ConfigItem
                    Id="Start RSSI Pairing on PDL Reset"
                    ShortId="pair_on_pdl_reset"
                    Desc="When set, the Sink will start RSSI pairing automatically if the paired device list is erased."
                    Type="bool"
                    PSKey="Text=PSKEY_USR15,Address=0x299,Word=9,Bit=0,Size=1"/>
            </ConfigGroup>
            <ConfigItem
                Id="Party Mode"
                ShortId="PartyMode"
                Desc="Will music tracks be played immediately or are they queued so that next track will be played when the current one has finished."
                Type="enum"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=1,Bit=5,Size=2">
                <enum  key="Party mode off"
                       value="0"/>
                <enum  key="Party mode barge in mode"
                       value="1"/>
                <enum  key="Party mode AVRCP Mode"
                       value="2"/>
            </ConfigItem>
            <ConfigItem
                Id="Enable Multipoint in HFP Library"
                ShortId="multipoint"
                Desc="When set Multipoint will be configured as enabled in the HFP library. If a VM Sink application requires to use Multipoint it can then be enabled by writing to the multipoint_enable bit in the CONFIG_SESSION_DATA i.e. USR key 0. This can be achieved in one of three ways. Firstly, it can be set from this Sink config Tool using the 'Enable Multipoint in VM App' control, below. Secondly, it can be set manually from the VM App source code. Or thirdly, it can be set at runtime in the VM using an event."
                Type="bool"
                PSKey="Text=PSKEY_USR13,Address=0x297,Word=5,Bit=0,Size=1"/>
            <ConfigItem
                Id="Enable Multipoint in VM App"
                ShortId=""
                Desc="When this bit is set the Sink VM application will accept two simultaneous HFP connections. This bit should be set in tandem with 'Enable Multipoint in HFP Library', above. Note: It writes to the CONFIG_SESSION_DATA (i.e. USR key 0): this is a dynamic PS Key that can also be written by the VM App - if you change this setting whilst the VM is running, on shutdown the VM App may potentially overwrite your configured value. This can be avoided by updating the device with this setting whilst the VM App is not running."
                Type="bool"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=1,Bit=9,Size=1"/>
        </ConfigGroup>
        <ConfigGroup Id="Profiles"
                     Node="Basic">
            <ConfigGroup Id="AVRCP"
                         Node="Basic">
                <ConfigItem
                    Id="AVRCP Audio Switching"
                    ShortId="EnableAvrcpAudioSwitching"
                    Desc="If enabled AVRCP play status is used to speed up audio source switching."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=5,Bit=9,Size=1"/>
                <ConfigItem
                    Id="AVRCP Enabled"
                    ShortId="avrcp_enabled"
                    Desc="When set enables AVRCP control. This feature is not supported on some ROM variants."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=5,Bit=6,Size=1"/>
            </ConfigGroup>
            <ConfigGroup Id="A2DP"
                         Node="Basic">
                <ConfigItem
                    Id="Default A2DP Volume Level"
                    ShortId="DefaultA2dpVolLevel"
                    Type="enum"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=6,Bit=12,Size=4">
                    <List use="HFP"/>
                </ConfigItem>
                <ConfigItem
                    Id="Enable A2DP Streaming"
                    ShortId="EnableA2dpStreaming"
                    Desc="When set the Sink can stream audio using an A2DP link."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=6,Bit=10,Size=1"/>
                <ConfigItem
                    Id="A2DP Optional Codecs Enabled"
                    ShortId="A2dpOptionalCodecsEnabled"
                    Desc="This bitmask specifies which codecs are available for use. N.b. A corresponding DSP codec application must be available if these bits are enabled or the Sink will panic."
                    Type="bitfield"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=6,Bit=5,Size=5">
                    <bitfield key="MP3"
                              value="0"/>
                    <bitfield key="AAC"
                              value="1"/>
                    <bitfield key="Faststream"
                              value="2"/>
                    <bitfield key="aptX"
                              value="3"/>
                    <bitfield key="aptX Low Latency"
                              value="4"/>
                </ConfigItem>
                <ConfigItem
                    Id="A2DP Open Media on Connect"
                    ShortId="EnableA2dpMediaOpenOnConnection"
                    Desc="When set The Sink performs a media open when the A2DP signalling connection has been made and the A2DP stream had previously been suspended. This can happen if the Sink has suspended a stream and the phone has chosen to drop the signalling channel completely."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=6,Bit=4,Size=1"/>
                <ConfigItem
                    Id="Assume AG Suspends on Call"
                    ShortId="AssumeAutoSuspendOnCall"
                    Desc="When set the Sink assumes that the AG is responsible for suspending the media connection when receiving an incoming call."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=6,Bit=3,Size=1"/>
                <ConfigItem
                    Id="A2DP Link Loss Reconnection Period [s]"
                    ShortId="A2dpLinkLossReconnectionTime_s"
                    Desc="This feature is only present in the A2DP platform. It is used to specify the period, in seconds, over which to attempt reconnection following a link loss."
                    Type="uint"
                    PSKey="Text=PSKEY_USR8,Address=0x292,Word=15,Bit=0,Size=16"/>
            </ConfigGroup>
            <ConfigGroup Id="PBAP"
                         Node="Basic">
                <ConfigItem
                    Id="Enable PBAP"
                    ShortId="pbap_enabled"
                    Desc="When set enables Phone Book Application Profile (PBAP) functionality."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=6,Bit=11,Size=1"/>
            </ConfigGroup>
            <ConfigGroup Id="HFP"
                         Node="Basic">
                <ConfigGroup Id="Call Control"
                             Node="Basic">
                    <ConfigItem
                        Id="Enable Speech Recognition"
                        ShortId="speech_rec_enabled"
                        Desc="If this item is set it enables speech recognition in the sink."
                        Type="bool"
                        PSKey="Text=PSKEY_USR6,Address=0x290,Word=2,Bit=12,Size=1"/>
                    <ConfigItem
                        Id="Separate Last Number Redial buttons"
                        ShortId="SeparateLNRButtons"
                        Desc="When using multipoint operation it is possible to use two different events for triggering a last number redial on Audio Gateways AG1 or AG2."
                        Type="bool"
                        PSKey="Text=PSKEY_USR6,Address=0x290,Word=2,Bit=11,Size=1"/>
                    <ConfigItem
                        Id="Separate Voice Dial buttons"
                        ShortId="SeparateVDButtons"
                        Desc="When using multipoint operation it is possible to use two different events for triggering a voice dial operation on Audio Gateways AG1 or AG2."
                        Type="bool"
                        PSKey="Text=PSKEY_USR6,Address=0x290,Word=2,Bit=10,Size=1"/>
                    <ConfigItem
                        Id="LNR Cancels VoiceDial if Active"
                        ShortId="LNRCancelsVoiceDialIfActive"
                        Desc="When set cancels a voice dial if a last number redial is initiated."
                        Type="bool"
                        PSKey="Text=PSKEY_USR6,Address=0x290,Word=4,Bit=2,Size=1"/>
                    <ConfigItem
                        Id="One Touch Dial Phone Number"
                        Desc="If this configuration item is programmed with a phone number, this will be sent to the Audio Gateway when a one-touch dial call event occurs on the device."
                        Type="StrUnpackedASCII"
                        StrLenBytes="Variable"
                        PSKey="Text=PSKEY_USR2,Address=0x28C,Word=1,Bit=0,Size=16"/>
                    <ConfigItem
                        Id="Missed Call Indicator Interval [s]"
                        ShortId="MissedCallIndicateTime_s"
                        Desc="The Sink applications include a Missed Call feature. This sends an EventMissedCall event when the Sink has seen an incoming call that did not get answered before being terminated at the remote end, this event is repeatedly sent if the MissedCallIndicateTime timer value is set to a non-zero value and repeats at the interval set by this parameter. Timer is in seconds."
                        Type="uint"
                        PSKey="Text=PSKEY_USR8,Address=0x292,Word=13,Bit=0,Size=16"/>
                    <ConfigItem
                        Id="Missed Call Indicator Attempts"
                        ShortId="MissedCallIndicateAttempts"
                        Desc="This parameter specifies the number of times the missed call indication will be played at the Indicator interval time."
                        Type="uint"
                        PSKey="Text=PSKEY_USR8,Address=0x292,Word=14,Bit=0,Size=16"/>
                    <ConfigItem
                        Id="Speech Recognition Repeat Interval [ms]"
                        ShortId="SpeechRecRepeatTime_ms"
                        Desc="it is possible to tune the time, in ms, at which the speech recognition audio prompt is repeated. This may be necessary depending upon the length of audio prompt instruction chosen."
                        Type="uint"
                        PSKey="Text=PSKEY_USR8,Address=0x292,Word=17,Bit=0,Size=16"/>
                    <ConfigItem
                        Id="Network Service Indicator Interval [s]"
                        ShortId="NetworkServiceIndicatorRepeatTime_s"
                        Desc="The time in seconds after which the network service indication is replayed if there is no network present in the connected AG."
                        Type="uint"
                        Range="Min=0,Max=3600"
                        PSKey="Text=PSKEY_USR8,Address=0x292,Word=3,Bit=0,Size=16"/>
                </ConfigGroup>
                <ConfigGroup Id="Supported Features"
                             Node="Basic">
                    <ConfigItem
                        Id="HFP_NREC_FUNCTION"
                        ShortId="nrec_function"
                        Desc="nrec_function under supported_features."
                        Type="bool"
                        PSKey="Text=PSKEY_USR13,Address=0x297,Word=2,Bit=0,Size=1"/>
                    <ConfigItem
                        Id="HFP_THREE_WAY_CALLING"
                        ShortId="twc"
                        Desc="Three way calling under supported_features."
                        Type="bool"
                        PSKey="Text=PSKEY_USR13,Address=0x297,Word=2,Bit=1,Size=1"/>
                    <ConfigItem
                        Id="HFP_VOICE_RECOGNITION"
                        ShortId="voice_rcognition"
                        Desc="cli presentation under supported_features."
                        Type="bool"
                        PSKey="Text=PSKEY_USR13,Address=0x297,Word=2,Bit=2,Size=1"/>
                    <ConfigItem
                        Id="HFP_CLI_PRESENTATION"
                        ShortId="clip"
                        Desc="cli presentation under supported_features."
                        Type="bool"
                        PSKey="Text=PSKEY_USR13,Address=0x297,Word=2,Bit=3,Size=1"/>
                    <ConfigItem
                        Id="HFP_REMOTE_VOL_CONTROL"
                        ShortId="volume_control"
                        Desc="volume_control under supported_features."
                        Type="bool"
                        PSKey="Text=PSKEY_USR13,Address=0x297,Word=2,Bit=4,Size=1"/>
                    <ConfigItem
                        Id="HFP_ENHANCED_CALL_STATUS"
                        ShortId="enhanced_call_status"
                        Desc="enhanced_call_status under supported_features."
                        Type="bool"
                        PSKey="Text=PSKEY_USR13,Address=0x297,Word=2,Bit=5,Size=1"/>
                    <ConfigItem
                        Id="HFP_ENHANCED_CALL_CONTROL"
                        ShortId="enhanced_call_control"
                        Desc="enhanced_call_control under supported_features."
                        Type="bool"
                        PSKey="Text=PSKEY_USR13,Address=0x297,Word=2,Bit=6,Size=1"/>
                    <ConfigItem
                        Id="HFP_CODEC_NEGOTIATION"
                        ShortId="codec_negotiation"
                        Desc="codec_negotiation under supported_features."
                        Type="bool"
                        PSKey="Text=PSKEY_USR13,Address=0x297,Word=2,Bit=7,Size=1"/>
                </ConfigGroup>
                <ConfigGroup Id="CSR Supported Features"
                             Node="Basic">
                    <ConfigItem
                        Id="Caller Name"
                        ShortId="caller_name"
                        Desc="caller_name under CSR supported_features."
                        Type="bool"
                        PSKey="Text=PSKEY_USR13,Address=0x297,Word=7,Bit=15,Size=1"/>
                    <ConfigItem
                        Id="Raw Text"
                        ShortId="raw_text"
                        Desc="raw_text under CSR supported_features."
                        Type="bool"
                        PSKey="Text=PSKEY_USR13,Address=0x297,Word=7,Bit=14,Size=1"/>
                    <ConfigItem
                        Id="SMS"
                        ShortId="sms"
                        Desc="sms under CSR supported_features."
                        Type="bool"
                        PSKey="Text=PSKEY_USR13,Address=0x297,Word=7,Bit=13,Size=1"/>
                    <ConfigItem
                        Id="Battery Level Reporting"
                        ShortId="batt_level"
                        Desc="batt_level under CSR supported_features."
                        Type="bool"
                        PSKey="Text=PSKEY_USR13,Address=0x297,Word=7,Bit=12,Size=1"/>
                    <ConfigItem
                        Id="Power_Source"
                        ShortId="pwr_source"
                        Desc="pwr_source under CSR supported_features."
                        Type="bool"
                        PSKey="Text=PSKEY_USR13,Address=0x297,Word=7,Bit=11,Size=1"/>
                    <ConfigItem
                        Id="Supported Codecs"
                        ShortId="codecs"
                        Desc="codecs under CSR supported_features."
                        Type="bool"
                        PSKey="Text=PSKEY_USR13,Address=0x297,Word=7,Bit=8,Size=1"/>
                    <ConfigItem
                        Id="Codec_Bandwidths"
                        ShortId="codec_bandwidths"
                        Desc="codec_bandwidths under CSR supported_features."
                        Type="enum"
                        PSKey="Text=PSKEY_USR13,Address=0x297,Word=7,Bit=6,Size=2">
                        <enum key="None"
                              value="0"/>
                        <enum key="8KHz"
                              value="1"/>
                        <enum key="16KHz"
                              value="2"/>
                    </ConfigItem>
                </ConfigGroup>
                <ConfigGroup Id="Audio Parameters"
                             Node="Basic"
                             EnableControl="ValueToEnable=1,ConfigItemId=Enable Audio Parameters">
                    <ConfigGroup Id="SCO Packet Types"
                                 Node="Basic"
                                 EnableControl="ValueToEnable=1,ConfigItemId=Enable Audio Parameters">
                        <ConfigItem
                            Id="HV1 Enable"
                            ShortId="hv1"
                            Desc="sco hv1 packet type."
                            Type="bool"
                            PSKey="Text=PSKEY_USR14,Address=0x298,Word=1,Bit=0,Size=1"/>
                        <ConfigItem
                            Id="HV2 Enable"
                            ShortId="hv2"
                            Desc="sco hv2 packet type."
                            Type="bool"
                            PSKey="Text=PSKEY_USR14,Address=0x298,Word=1,Bit=1,Size=1"/>
                        <ConfigItem
                            Id="HV3 Enable"
                            ShortId="hv3"
                            Desc="sco hv3 packet type."
                            Type="bool"
                            PSKey="Text=PSKEY_USR14,Address=0x298,Word=1,Bit=2,Size=1"/>
                    </ConfigGroup>
                    <ConfigGroup Id="eSCO Packet Types"
                                 Node="Basic"
                                 EnableControl="ValueToEnable=1,ConfigItemId=Enable Audio Parameters">
                        <ConfigItem
                            Id="EV3 Enable"
                            ShortId="ev3"
                            Desc="esco ev3 packet type."
                            Type="bool"
                            PSKey="Text=PSKEY_USR14,Address=0x298,Word=1,Bit=3,Size=1"/>
                        <ConfigItem
                            Id="EV4 Enable"
                            ShortId="ev4"
                            Desc="esco ev4 packet type."
                            Type="bool"
                            PSKey="Text=PSKEY_USR14,Address=0x298,Word=1,Bit=4,Size=1"/>
                        <ConfigItem
                            Id="EV5 Enable"
                            ShortId="ev5"
                            Desc="esco ev5 packet type."
                            Type="bool"
                            PSKey="Text=PSKEY_USR14,Address=0x298,Word=1,Bit=5,Size=1"/>
                    </ConfigGroup>
                    <ConfigGroup Id="EDR Packet Types"
                                 Node="Basic"
                                 EnableControl="ValueToEnable=1,ConfigItemId=Enable Audio Parameters">
                        <ConfigItem
                            Id="2EV3 Disable"
                            ShortId="2ev3"
                            Desc="edr 2ev3 packet type."
                            Type="bool"
                            PSKey="Text=PSKEY_USR14,Address=0x298,Word=1,Bit=6,Size=1"/>
                        <ConfigItem
                            Id="3EV3 Disable"
                            ShortId="3ev3"
                            Desc="edr 3ev3 packet type."
                            Type="bool"
                            PSKey="Text=PSKEY_USR14,Address=0x298,Word=1,Bit=7,Size=1"/>
                        <ConfigItem
                            Id="2EV5 Disable"
                            ShortId="2ev5"
                            Desc="edr 2ev5 packet type."
                            Type="bool"
                            PSKey="Text=PSKEY_USR14,Address=0x298,Word=1,Bit=8,Size=1"/>
                        <ConfigItem
                            Id="3EV5 Disable"
                            ShortId="3ev5"
                            Desc="edr 3ev5 packet type."
                            Type="bool"
                            PSKey="Text=PSKEY_USR14,Address=0x298,Word=1,Bit=9,Size=1"/>
                    </ConfigGroup>
                    <ConfigItem
                        Id="Bandwidth"
                        ShortId="bandwidth"
                        Desc="Bandwidth to use for enhanced HFP audio."
                        Type="ulong"
                        PSKey="Text=PSKEY_USR14,Address=0x298,MsWord=2,MsBit=0,MsSize=16,LsWord=3,LsBit=0,LsSize=16"/>
                    <ConfigItem
                        Id="Maximum Latency"
                        ShortId="max_latency"
                        Desc="Specifies the maximum latency."
                        Type="uint"
                        PSKey="Text=PSKEY_USR14,Address=0x298,Word=4,Bit=0,Size=16"/>
                    <ConfigItem
                        Id="Voice Settings"
                        ShortId="voice_settings"
                        Desc="HFP 1.5 voice settings."
                        Type="uint"
                        PSKey="Text=PSKEY_USR14,Address=0x298,Word=5,Bit=0,Size=16"/>
                    <ConfigItem
                        Id="Retransmission Effort"
                        ShortId="retransmission_effort"
                        Type="enum"
                        PSKey="Text=PSKEY_USR14,Address=0x298,Word=6,Bit=0,Size=16">
                        <enum key="sync_retx_disabled"
                              value="0"/>
                        <enum key="sync_retx_power_usage"
                              value="1"/>
                        <enum key="sync_retx_link_quality"
                              value="2"/>
                        <enum key="sync_retx_dont_care"
                              value="3"/>
                    </ConfigItem>
                </ConfigGroup>
                <ConfigItem
                    Id="Supported Profiles"
                    ShortId="supported_profiles"
                    Desc="The Sink can be configured to support HFP and HSP profiles."
                    Type="bitfield"
                    PSKey="Text=PSKEY_USR13,Address=0x297,Word=1,Bit=0,Size=16">
                    <bitfield key="HSP"
                              value="0"/>
                    <bitfield key="HFP 1.5"
                              value="1"/>
                    <bitfield key="HFP 1.6"
                              value="2"/>
                </ConfigItem>
                <ConfigItem
                    Id="Supported HFP Codecs"
                    ShortId="supported_wbs_codecs"
                    Desc="The bitmask containing the supported HFP codecs. Regardless of this setting, the application will automatically select mandatory codecs of the selected HFP profile version."
                    Type="bitfield"
                    PSKey="Text=PSKEY_USR13,Address=0x297,Word=3,Bit=0,Size=16">
                    <bitfield key="CVSD"
                              value="0"/>
                    <bitfield key="Modified SBC"
                              value="1"/>
                </ConfigItem>
                <ConfigItem
                    Id="Service Indicator"
                    ShortId="service_indicator"
                    Desc="The indicator showing service status."
                    Type="enum"
                    PSKey="Text=PSKEY_USR13,Address=0x297,Word=4,Bit=6,Size=2">
                    <enum key="Off"
                          value="0"/>
                    <enum key="On"
                          value="1"/>
                    <enum key="Ignore"
                          value="2"/>
                </ConfigItem>
                <ConfigItem
                    Id="Signal Strength Indicator"
                    ShortId="signal_strength_indicator"
                    Desc="The indicator showing signal strength."
                    Type="enum"
                    PSKey="Text=PSKEY_USR13,Address=0x297,Word=4,Bit=4,Size=2">
                    <enum key="Off"
                          value="0"/>
                    <enum key="On"
                          value="1"/>
                    <enum key="Ignore"
                          value="2"/>
                </ConfigItem>
                <ConfigItem
                    Id="Roaming Status"
                    ShortId="roaming_status"
                    Desc="The indicator showing roaming status."
                    Type="enum"
                    PSKey="Text=PSKEY_USR13,Address=0x297,Word=4,Bit=2,Size=2">
                    <enum key="Off"
                          value="0"/>
                    <enum key="On"
                          value="1"/>
                    <enum key="Ignore"
                          value="2"/>
                </ConfigItem>
                <ConfigItem
                    Id="Battery Charge"
                    ShortId="battery_charge"
                    Desc="The indicator showing battery charge."
                    Type="enum"
                    PSKey="Text=PSKEY_USR13,Address=0x297,Word=4,Bit=0,Size=2">
                    <enum key="Off"
                          value="0"/>
                    <enum key="On"
                          value="1"/>
                    <enum key="Ignore"
                          value="2"/>
                </ConfigItem>
                <ConfigItem
                    Id="Disable NREC"
                    ShortId="disable_nrec"
                    Desc="When set noise reduction and echo cancelling is not advertised"
                    Type="bool"
                    PSKey="Text=PSKEY_USR13,Address=0x297,Word=5,Bit=2,Size=1"/>
                <ConfigItem
                    Id="Enable Extended Errors"
                    ShortId="extended_errors"
                    Desc="When set the Sink will send extended error reports."
                    Type="bool"
                    PSKey="Text=PSKEY_USR13,Address=0x297,Word=5,Bit=1,Size=1"/>
                <ConfigItem
                    Id="Link Loss Time [mins]"
                    ShortId="link_loss_time"
                    Desc="The time, in minutes, following a link loss occurrence that the Sink will attempt to reconnect to the dropped AG."
                    Type="uint"
                    PSKey="Text=PSKEY_USR13,Address=0x297,Word=6,Bit=8,Size=8"/>
                <ConfigItem
                    Id="Link Loss Interval [s]"
                    ShortId="link_loss_interval"
                    Desc="The time interval, in seconds, at which the headset will make reconnection attempts following a link loss."
                    Type="uint"
                    PSKey="Text=PSKEY_USR13,Address=0x297,Word=6,Bit=0,Size=8"/>
                <ConfigItem
                    Id="Play Volume Tone on Remote Indication"
                    ShortId="PlayLocalVolumeTone"
                    Desc="When set the Sink plays a tone when the volume is changed using the remote device i.e. the AG."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=3,Bit=6,Size=1"/>
                <ConfigItem
                    Id="Force Second SCO to use EV3 S1 Settings"
                    ShortId="ForceEV3S1ForSco2"
                    Desc="Determines the behaviour of the second SCO connection in multipoint mode. When set the second SCO connection is forced to use EV3 S1 packets for better interoperability with certain AGs."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=5,Bit=8,Size=1"/>
                <ConfigItem
                    Id="Mute Speaker as well as Microphone"
                    ShortId="MuteSpeakerAndMic"
                    Desc="If this item is set Mute mutes both the Speaker and the Microphone of the Sink. This only affects HFP, not other profiles, e.g. A2DP etc."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=1,Bit=13,Size=1"/>
                <ConfigItem
                    Id="Enable Mic Mute Synchronisation"
                    ShortId="EnableSyncMuteMicrophones"
                    Desc="When set the mute command is sent to both AGs when using multipoint."
                    Type="bool"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=5,Bit=3,Size=1"/>
                <ConfigItem
                    Id="Enable Audio Parameters"
                    ShortId=""
                    Desc="Enables HFP Audio Parameters configuration settings."
                    Type="bool"
                    PSKey="Text=PSKEY_USR14,Address=0x298,Word=1,Bit=15,Size=1"/>
            </ConfigGroup>
            <ConfigGroup Id="GATT"
                         Node="Basic">
                <ConfigGroup Id="Client"
                             Node="Basic">
                    <ConfigItem
                        Id="Services supported by GATT Client"
                        ShortId=""
                        Desc="This bitmask specifies the list of supported services when running in GATT client mode."
                        Type="bitfield"
                        PSKey="Text=PSKEY_USR29,Address=0x2A7,Word=2,Bit=0,Size=16">
                        <bitfield key="HOGP"
                                  value="0"/>
                        <bitfield key="Battery"
                                  value="1"/>
                    </ConfigItem>
                </ConfigGroup>
                <ConfigItem
                    Id="Role"
                    ShortId=""
                    Desc="Defines GATT mode of operation (i.e. Disabled, Client or Server)."
                    Type="enum"
                    PSKey="Text=PSKEY_USR29,Address=0x2A7,Word=1,Bit=0,Size=16">
                    <enum key="Disabled"
                          value="0"/>
                    <enum key="GATT Client"
                          value="1"/>
                    <enum key="GATT Server"
                          value="2"/>
                </ConfigItem>
            </ConfigGroup>
        </ConfigGroup>
        <ConfigItem Id="User Friendly Name"
                    ShortId=""
                    Desc="Specifies the BT User Friendly Name for the device."
                    Type="StrPackedASCII"
                    StrLenBytes="Variable"
                    PSKey="Text=PSKEY_DEVICE_NAME,Address=0x108,Word=1,Bit=0,Size=16"/>
    </ConfigGroup>
    <ConfigGroup Id="Battery"
                 Node="Basic">
        <ConfigGroup Id="Vref Reference Voltage Configuration"
                     Node="Basic">
            <ConfigItem
                Id="Vref ADC Source"
                ShortId="vref.adc.source"
                Desc="The Vref input can be configured to use any of the available input sources given below."
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=1,Bit=8,Size=8"
                Type="enum">
                <enum key="AIO 0"
                      value="0"/>
                <enum key="AIO 1"
                      value="1"/>
                <enum key="AIO 2"
                      value="2"/>
                <enum key="AIO 3"
                      value="3"/>
                <enum key="VREF"
                      value="4"/>
                <enum key="VBAT"
                      value="5"/>
                <enum key="VCHG"
                      value="6"/>
                <enum key="VDD_SENSE"
                      value="7"/>
                <enum key="VREG_ENABLE"
                      value="8"/>
            </ConfigItem>
            <ConfigItem
                Id="Vref Read Period When Charging [s]"
                ShortId="vref.adc.period_chg"
                Desc="This configures the time interval between Vref updates in seconds while charging, 0 to disable."
                Type="uint"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=1,Bit=0,Size=8"/>
            <ConfigItem
                Id="Vref Read Period When Not Charging [s]"
                ShortId="vref.adc.period_no_chg"
                Desc="This configures the timer interval between Vref updates in seconds while not charging, 0 to disable."
                Type="uint"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=2,Bit=0,Size=16"/>
        </ConfigGroup>
        <ConfigGroup Id="Vbat Battery Voltage Monitoring"
                     Node="Basic">
            <ConfigGroup Id="Vbat Threshold Settings"
                         Node="Array">
                <ConfigPatternArray Header="Vbat Battery Threshold Index"
                                    Name="Vbat Battery Threshold Configuration"
                                    StorageType="Type=MultipleWordSingleKey,Text=PSKEY_USR10,Address=0x294,PatternSizeInWords=1"
                                    Dimension="UsePatternHeader"/>
            </ConfigGroup>
            <ConfigItem
                Id="Vbat ADC Source"
                ShortId="vbat.adc.source"
                Desc="The Vbat input can be configured to use any of the available input sources given below."
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=3,Bit=8,Size=8"
                Type="enum">
                <enum key="AIO 0"
                      value="0"/>
                <enum key="AIO 1"
                      value="1"/>
                <enum key="AIO 2"
                      value="2"/>
                <enum key="AIO 3"
                      value="3"/>
                <enum key="VREF"
                      value="4"/>
                <enum key="VBAT"
                      value="5"/>
                <enum key="VCHG"
                      value="6"/>
                <enum key="VDD_SENSE"
                      value="7"/>
                <enum key="VREG_ENABLE"
                      value="8"/>
            </ConfigItem>
            <ConfigItem
                Id="Vbat Read Period When Charging [s]"
                ShortId="vbat.adc.period_chg"
                Desc="This configures the time interval between Vbat updates in seconds while charging, 0 to disable."
                Type="uint"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=3,Bit=0,Size=8"/>
            <ConfigItem
                Id="Vbat Read Period When Not Charging [s]"
                ShortId="vbat.adc.period_no_chg"
                Desc="This configures the timer interval between Vbat updates in seconds while not charging, 0 to disable."
                Type="uint"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=4,Bit=0,Size=16"/>
        </ConfigGroup>
        <ConfigGroup Id="Vthm Thermistor Configuration"
                     Node="Basic">
            <ConfigItem
                Id="Vthm ADC Source"
                ShortId="vthm.adc.source"
                Desc="The Vthm input can be configured to use any of the available input sources given below."
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=11,Bit=8,Size=8"
                Type="enum">
                <enum key="AIO 0"
                      value="0"/>
                <enum key="AIO 1"
                      value="1"/>
                <enum key="AIO 2"
                      value="2"/>
                <enum key="AIO 3"
                      value="3"/>
                <enum key="VREF"
                      value="4"/>
                <enum key="VBAT"
                      value="5"/>
                <enum key="VCHG"
                      value="6"/>
                <enum key="VDD_SENSE"
                      value="7"/>
                <enum key="VREG_ENABLE"
                      value="8"/>
            </ConfigItem>
            <ConfigItem
                Id="Vthm Read Period When Charging [s]"
                ShortId="vthm.adc.period_chg"
                Desc="This configures the time interval between Vthm updates in seconds while charging, 0 to disable."
                Type="uint"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=11,Bit=0,Size=8"/>
            <ConfigItem
                Id="Vthm Read Period When Not Charging [s]"
                ShortId="vthm.adc.period_no_chg"
                Desc="This configures the timer interval between Vthm updates in seconds while not charging, 0 to disable."
                Type="uint"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=12,Bit=0,Size=16"/>
            <ConfigItem
                Id="Thermistor Drive Delay [ms]"
                ShortId="vthm.delay"
                Desc="Delay in milliseconds between activating the thermistor PIO and taking the ADC reading. This allows the voltage level to settle before the data is sampled."
                Type="enum"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=13,Bit=12,Size=4">
                <enum key="0ms"
                      value="0"/>
                <enum key="1ms"
                      value="1"/>
                <enum key="2ms"
                      value="2"/>
                <enum key="3ms"
                      value="3"/>
                <enum key="4ms"
                      value="4"/>
                <enum key="5ms"
                      value="5"/>
                <enum key="6ms"
                      value="6"/>
                <enum key="7ms"
                      value="7"/>
                <enum key="8ms"
                      value="8"/>
                <enum key="9ms"
                      value="9"/>
                <enum key="10ms"
                      value="10"/>
                <enum key="11ms"
                      value="11"/>
                <enum key="12ms"
                      value="12"/>
                <enum key="13ms"
                      value="13"/>
                <enum key="14ms"
                      value="14"/>
                <enum key="15ms"
                      value="15"/>
            </ConfigItem>
            <ConfigItem
                Id="Use Raw Limits"
                ShortId="vthm.raw_limits"
                Desc="When set, the limit thresholds need to be entered as raw ADC counts. When clear they need to be in mV."
                Type="bool"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=13,Bit=6,Size=1"/>
            <ConfigItem
                Id="Drive Thermistor PIO Enable"
                ShortId="vthm.drive_pio"
                Desc="When set, a PIO is used to provide drive to the thermistor circuit."
                Type="bool"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=13,Bit=5,Size=1"/>
            <ConfigItem
                Id="Drive Thermistor PIO"
                ShortId="vthm.pio"
                Desc="when the Drive Thermistor PIO is set, this parameter sets the PIO required to be driven when a thermistor reading is taken."
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=13,Bit=0,Size=5"
                Type="enum">
                <enum key="PIO 0"
                      value="0"/>
                <enum key="PIO 1"
                      value="1"/>
                <enum key="PIO 2"
                      value="2"/>
                <enum key="PIO 3"
                      value="3"/>
                <enum key="PIO 4"
                      value="4"/>
                <enum key="PIO 5"
                      value="5"/>
                <enum key="PIO 6"
                      value="6"/>
                <enum key="PIO 7"
                      value="7"/>
                <enum key="PIO 8"
                      value="8"/>
                <enum key="PIO 9"
                      value="9"/>
                <enum key="PIO 10"
                      value="10"/>
                <enum key="PIO 11"
                      value="11"/>
                <enum key="PIO 12"
                      value="12"/>
                <enum key="PIO 13"
                      value="13"/>
                <enum key="PIO 14"
                      value="14"/>
                <enum key="PIO 15"
                      value="15"/>
                <enum key="PIO 16"
                      value="16"/>
                <enum key="PIO 17"
                      value="17"/>
                <enum key="PIO 18"
                      value="18"/>
                <enum key="PIO 19"
                      value="19"/>
                <enum key="PIO 20"
                      value="20"/>
                <enum key="PIO 21"
                      value="21"/>
                <enum key="PIO 22"
                      value="22"/>
                <enum key="PIO 23"
                      value="23"/>
                <enum key="PIO 24"
                      value="24"/>
                <enum key="PIO 25"
                      value="25"/>
                <enum key="PIO 26"
                      value="26"/>
                <enum key="PIO 27"
                      value="27"/>
                <enum key="PIO 28"
                      value="28"/>
                <enum key="PIO 29"
                      value="29"/>
                <enum key="PIO 30"
                      value="30"/>
                <enum key="PIO 31"
                      value="31"/>
            </ConfigItem>
            <ConfigItem
                Id="Limit Threshold 1"
                ShortId="limit[0]"
                Desc="Up to seven limit thresholds may be configured to provide up to eight regions of temperature based charging control. The list is ordered in ascending voltage order. The values are in units of ADC counts or millivolts depending on the setting of vthm.raw_limits. If fewer than seven limits are specified, the terminating value is 65535 (-1)."
                Type="uint"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=14,Bit=0,Size=16"/>
            <ConfigItem
                Id="Limit Threshold 2"
                ShortId="limit[1]"
                Desc="Up to seven limit thresholds may be configured to provide up to eight regions of temperature based charging control. The list is ordered in ascending voltage order. The values are in units of ADC counts or millivolts depending on the setting of vthm.raw_limits. If fewer than seven limits are specified, the terminating value is 65535 (-1)."
                Type="uint"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=15,Bit=0,Size=16"/>
            <ConfigItem
                Id="Limit Threshold 3"
                ShortId="limit[2]"
                Desc="Up to seven limit thresholds may be configured to provide up to eight regions of temperature based charging control. The list is ordered in ascending voltage order. The values are in units of ADC counts or millivolts depending on the setting of vthm.raw_limits. If fewer than seven limits are specified, the terminating value is 65535 (-1)."
                Type="uint"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=16,Bit=0,Size=16"/>
            <ConfigItem
                Id="Limit Threshold 4"
                ShortId="limit[3]"
                Desc="Up to seven limit thresholds may be configured to provide up to eight regions of temperature based charging control. The list is ordered in ascending voltage order. The values are in units of ADC counts or millivolts depending on the setting of vthm.raw_limits. If fewer than seven limits are specified, the terminating value is 65535 (-1)."
                Type="uint"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=17,Bit=0,Size=16"/>
            <ConfigItem
                Id="Limit Threshold 5"
                ShortId="limit[4]"
                Desc="Up to seven limit thresholds may be configured to provide up to eight regions of temperature based charging control. The list is ordered in ascending voltage order. The values are in units of ADC counts or millivolts depending on the setting of vthm.raw_limits. If fewer than seven limits are specified, the terminating value is 65535 (-1)."
                Type="uint"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=18,Bit=0,Size=16"/>
            <ConfigItem
                Id="Limit Threshold 6"
                ShortId="limit[5]"
                Desc="Up to seven limit thresholds may be configured to provide up to eight regions of temperature based charging control. The list is ordered in ascending voltage order. The values are in units of ADC counts or millivolts depending on the setting of vthm.raw_limits. If fewer than seven limits are specified, the terminating value is 65535 (-1)."
                Type="uint"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=19,Bit=0,Size=16"/>
            <ConfigItem
                Id="Limit Threshold 7"
                ShortId="limit[6]"
                Desc="Up to seven limit thresholds may be configured to provide up to eight regions of temperature based charging control. The list is ordered in ascending voltage order. The values are in units of ADC counts or millivolts depending on the setting of vthm.raw_limits. If fewer than seven limits are specified, the terminating value is 65535 (-1)."
                Type="uint"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=20,Bit=0,Size=16"/>
        </ConfigGroup>
        <ConfigGroup Id="Vchg Charger Configuration"
                     Node="Basic">
            <ConfigItem
                Id="Vchg ADC Source"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=21,Bit=8,Size=8"
                Type="enum">
                <enum key="AIO 0"
                      value="0"/>
                <enum key="AIO 1"
                      value="1"/>
                <enum key="AIO 2"
                      value="2"/>
                <enum key="AIO 3"
                      value="3"/>
                <enum key="VREF"
                      value="4"/>
                <enum key="VBAT"
                      value="5"/>
                <enum key="VCHG"
                      value="6"/>
                <enum key="VDD_SENSE"
                      value="7"/>
                <enum key="VREG_ENABLE"
                      value="8"/>
            </ConfigItem>
            <ConfigItem
                Id="Vchg Read Period When Charging [s]"
                ShortId="vchg.adc.period_chg"
                Desc="This configures the time interval between Vchg updates in seconds while charging, 0 to disable."
                Type="uint"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=21,Bit=0,Size=8"/>
            <ConfigItem
                Id="Vchg Read Period When Not Charging [s]"
                ShortId="vchg.adc.period_no_chg"
                Desc="This configures the timer interval between Vchg updates in seconds while not charging, 0 to disable."
                Type="uint"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=22,Bit=0,Size=16"/>
            <ConfigItem
                Id="Vchg Threshold Voltage [mV]"
                ShortId="vchg.limit"
                Desc="Sets the USB VBUS voltage threshold. The charge current can be limited at VBUS voltages below this level."
                Type="uint"
                PSKey="Text=PSKEY_USR10,Address=0x294,Word=23,Bit=0,Size=16"/>
        </ConfigGroup>
        <ConfigGroup Id="Charger Configuration"
                     Node="Array">
            <ConfigPatternArray Header="Charger Configuration Index"
                                Name="Charger Configuration Settings"
                                StorageType="Type=MultipleWordSingleKey,Text=PSKEY_USR10,Address=0x294,PatternSizeInWords=2"
                                Dimension="UsePatternHeader"/>
        </ConfigGroup>
        <ConfigGroup Id="USB Charger"
                     Node="Array">
            <ConfigPatternArray Header="USB Charger Configuration Index"
                                Name="USB"
                                StorageType="Type=FixedOrderSingleWordSingleKey,Text=PSKEY_USR32,Address=0x2AA"
                                Dimension="UsePatternHeader"/>
        </ConfigGroup>
        <ConfigGroup Id="PMU Charger Monitor"
                     Node="Basic">
            <ConfigItem
                Id="Minimum charge current [mA]"
                ShortId=""
                Desc="The charge current will not be decreased below this minimum level by the PMU Charger Monitor."
                Type="uint"
                PSKey="Text=PSKEY_USR41,Address=0x2B3,Word=1,Bit=8,Size=8"/>
            <ConfigItem
                Id="Maximum charge current [mA]"
                ShortId=""
                Desc="The charge current will not be increased above this maximum level by the PMU Charger Monitor."
                Type="uint"
                PSKey="Text=PSKEY_USR41,Address=0x2B3,Word=1,Bit=0,Size=8"/>
            <ConfigItem
                Id="Charger current step size [mA]"
                ShortId=""
                Desc="This is the amount by which the charge current will be altered when it is between the minimum and maximum charge levels based on the monitored temperature."
                Type="uint"
                PSKey="Text=PSKEY_USR41,Address=0x2B3,Word=2,Bit=8,Size=8"/>
            <ConfigItem
                Id="Temp Lower Bound [degC]"
                ShortId=""
                Desc="Temperature where current will not be increased. This forms the lower temperature bound for the PMU monitor. Below this temperature the current will not be increased."
                Type="uint"
                PSKey="Text=PSKEY_USR41,Address=0x2B3,Word=3,Bit=8,Size=8"/>
            <ConfigItem
                Id="Temp Upper Bound [degC]"
                ShortId=""
                Desc="Temperature where current will be decreased. This forms the upper limit of the tolerated temperature bound after which the charge current will be decreased."
                Type="uint"
                PSKey="Text=PSKEY_USR41,Address=0x2B3,Word=3,Bit=0,Size=8"/>
            <ConfigItem
                Id="Temp monitor period if charger active [ms]"
                ShortId=""
                Desc="Temperature monitoring period when the charger is active [ms]."
                Type="uint"
                PSKey="Text=PSKEY_USR41,Address=0x2B3,Word=4,Bit=0,Size=16"/>
            <ConfigItem
                Id="Temp monitor period if charger idle [ms]"
                ShortId=""
                Desc="Temperature monitoring period when the charger is idle [ms]."
                Type="uint"
                PSKey="Text=PSKEY_USR41,Address=0x2B3,Word=5,Bit=0,Size=16"/>
            <ConfigItem
                Id="Temp monitor period if charger has no power [ms]"
                ShortId=""
                Desc="Temperature monitoring period when the charger has no power [ms]."
                Type="uint"
                PSKey="Text=PSKEY_USR41,Address=0x2B3,Word=6,Bit=0,Size=16"/>
        </ConfigGroup>
    </ConfigGroup>
    <ConfigGroup Id="Device and Software Version"
                 Node="Basic">
        <ConfigItem
            Id="Vendor ID Source"
            ShortId="vendor_id_source"
            Desc="This information will be used in setting the Bluetooth Device ID profile fields. Indicates the institution that assigned the Vendor ID."
            Type="enum"
            PSKey="Text=PSKEY_USR9,Address=0x293,Word=1,Bit=0,Size=16">
            <enum key="Bluetooth SIG"
                  value="1"/>
            <enum key="USB Implementers Forum"
                  value="2"/>
        </ConfigItem>
        <ConfigItem
            Id="Vendor ID [hex]"
            ShortId="vendor_id"
            Desc="This information will be used in setting the Bluetooth Device ID profile fields. Should be set as assigned by the Vendor ID source."
            Type="uint"
            PresentHex="true"
            PSKey="Text=PSKEY_USR9,Address=0x293,Word=2,Bit=0,Size=16"/>
        <ConfigItem
            Id="Product ID [hex]"
            ShortId="product_id"
            Desc="This information will be used in setting the Bluetooth Device ID profile fields. Should be set as appropriate for the product."
            Type="uint"
            PresentHex="true"
            PSKey="Text=PSKEY_USR9,Address=0x293,Word=3,Bit=0,Size=16"/>
        <ConfigItem
            Id="BCD Version [hex]"
            ShortId="bcd_version"
            Desc="This information will be used in setting the Bluetooth Device ID profile fields. Should be set as appropriate for the product version, where: 0xABCD = versionAB.C.D"
            Type="uint"
            PresentHex="true"
            PSKey="Text=PSKEY_USR9,Address=0x293,Word=4,Bit=0,Size=16"/>
        <ConfigItem
            Id="Software Version (most significant 32 bits) [hex]"
            ShortId="sw_version_msb"
            Desc="This information will be used in setting the Bluetooth Device ID profile fields. This is the most significant 32bits of the Software Version. It should be set to the appropriate software version for the product."
            Type="ulong"
            PresentHex="true"
            PSKey="Text=PSKEY_USR9,Address=0x293,MsWord=5,MsBit=0,MsSize=16,LsWord=6,LsBit=0,LsSize=16"/>
        <ConfigItem
            Id="Software Version (least significant 32 bits) [hex]"
            ShortId="sw_version_lsb"
            Desc="This information will be used in setting the Bluetooth Device ID profile fields. This is the least significant 32bits of the Software Version. It should be set to the appropriate software version for the product."
            Type="ulong"
            PresentHex="true"
            PSKey="Text=PSKEY_USR9,Address=0x293,MsWord=7,MsBit=0,MsSize=16,LsWord=8,LsBit=0,LsSize=16"/>
    </ConfigGroup>
    <ConfigGroup Id="Input/Output"
                 Node="Basic">
        <ConfigGroup Id="Input PIOs"
                     Node="Basic">
            <ConfigItem
                Id="SPDIF Detect PIO"
                ShortId="spdif_detect"
                Desc="This configures a PIO to detect when SPDIF audio is being used e.g. when a connector is plugged in.  This may also be configured to always assume this input is connected or disabled entirely."
                Type="enum"
                PSKey="Text=PSKEY_USR16,Address=0x29A,Word=1,Bit=8,Size=8">
                <List use="PIO for inputs"/>
            </ConfigItem>
            <ConfigItem
                Id="Analog Input PIO"
                ShortId="analog_input"
                Desc="This configures a PIO to detect when analog audio input is being used e.g. when a connector is plugged in.    This may also be configured to always assume this input is connected or disabled entirely."
                Type="enum"
                PSKey="Text=PSKEY_USR16,Address=0x29A,Word=1,Bit=0,Size=8">
                <List use="PIO for inputs"/>
            </ConfigItem>
            <ConfigItem
                Id="Charger Input PIO"
                ShortId="charger_input"
                Desc="This setting has no effect."
                Type="enum"
                PSKey="Text=PSKEY_USR16,Address=0x29A,Word=2,Bit=8,Size=8">
                <List use="PIO"/>
            </ConfigItem>
            <ConfigItem
                Id="DUT Mode PIO"
                ShortId="dut_pio"
                Desc="This configures a PIO to enable the device to switch into DUT mode on power on."
                Type="enum"
                PSKey="Text=PSKEY_USR16,Address=0x29A,Word=2,Bit=0,Size=8">
                <List use="PIO"/>
            </ConfigItem>
            <ConfigItem
                Id="SPDIF Input PIO"
                ShortId="spdif_input"
                Desc="This configures a PIO to be used for SPDIF input, this is required for CSR8675 and must be an odd number. This should be disabled for CSR8670 (SPDIF will still function)"
                Type="enum"
                PSKey="Text=PSKEY_USR16,Address=0x29A,Word=3,Bit=8,Size=8">
                <List use="PIO for inputs"/>
            </ConfigItem>
        </ConfigGroup>
        <ConfigGroup Id="Output PIOs"
                     Node="Basic">
            <ConfigItem
                Id="Call Active"
                ShortId="CallActivePIO"
                Desc="Configures the PIO to drive when a call is active."
                Type="enum"
                PSKey="Text=PSKEY_USR16,Address=0x29A,Word=4,Bit=8,Size=8">
                <List use="PIO"/>
            </ConfigItem>
            <ConfigItem
                Id="Incoming"
                ShortId="IncomingRingPIO"
                Desc="Configures the PIO to drive when an incoming call is ringing."
                Type="enum"
                PSKey="Text=PSKEY_USR16,Address=0x29A,Word=4,Bit=0,Size=8">
                <List use="PIO"/>
            </ConfigItem>
            <ConfigItem
                Id="Outgoing"
                ShortId="OutgoingRingPIO"
                Desc="Configures the PIO to drive when an outgoing call is ringing."
                Type="enum"
                PSKey="Text=PSKEY_USR16,Address=0x29A,Word=5,Bit=8,Size=8">
                <List use="PIO"/>
            </ConfigItem>
            <ConfigItem
                Id="Sink Active"
                ShortId="DeviceAudioActivePIO"
                Desc="Configures the PIO to drive when an HFP audio connection is made. i.e. The PIO will not be driven high when there is an active call, but the microphone and speakers are being used on the phone."
                Type="enum"
                PSKey="Text=PSKEY_USR16,Address=0x29A,Word=5,Bit=0,Size=8">
                <List use="PIO"/>
            </ConfigItem>
            <ConfigItem
                Id="Power On"
                ShortId="PowerOnPIO"
                Desc="Configures the PIO to drive when the device powers up."
                Type="enum"
                PSKey="Text=PSKEY_USR16,Address=0x29A,Word=6,Bit=8,Size=8">
                <List use="PIO"/>
            </ConfigItem>
            <ConfigItem
                Id="SPDIF Output"
                ShortId="spdif_output"
                Desc="This sets a PIO to be configured for SPDIF ouput, this should be configured for CSR8675 and must be an even number. This should be set to 'N/A' for SPDIF output on CSR8670 (SPDIF output will still function)"
                Type="enum"
                PSKey="Text=PSKEY_USR16,Address=0x29A,Word=6,Bit=0,Size=8">
                <List use="PIO"/>
            </ConfigItem>
            <ConfigItem
                Id="LED Enable"
                ShortId="LedEnablePIO"
                Desc="Configures the PIO to drive when the LEDs are used."
                Type="enum"
                PSKey="Text=PSKEY_USR16,Address=0x29A,Word=7,Bit=8,Size=8">
                <List use="PIO"/>
	    </ConfigItem>
	    <ConfigItem
                Id="Audio Mute"
                ShortId="AudioMutePIO"
                Desc="Configures the PIO to drive audio amplifier mute line in order to minimize undesired noise during power on and power off events."
                Type="enum"
                PSKey="Text=PSKEY_USR16,Address=0x29A,Word=7,Bit=0,Size=8">
                <List use="PIO"/>
            </ConfigItem>
        </ConfigGroup>
        <ConfigGroup Id="PIO Invert Mask Bitfields"
                     Node="Basic">
            <ConfigItem
                Id="Invert PIO 16-31"
                ShortId="pio_invert_high"
                Desc="It is possible to invert the logic of one or many PIO inputs using a 16 bit bitmask corresponding to PIOs 16 to 31, this allows use with different hardware/button configurations."
                Type="bitfield"
                PSKey="Text=PSKEY_USR16,Address=0x29A,Word=8,Bit=0,Size=16">
                <bitfield key="PIO 16"
                          value="0"/>
                <bitfield key="PIO 17"
                          value="1"/>
                <bitfield key="PIO 18"
                          value="2"/>
                <bitfield key="PIO 19"
                          value="3"/>
                <bitfield key="PIO 20"
                          value="4"/>
                <bitfield key="PIO 21"
                          value="5"/>
                <bitfield key="PIO 22"
                          value="6"/>
                <bitfield key="PIO 23"
                          value="7"/>
                <bitfield key="PIO 24"
                          value="8"/>
                <bitfield key="PIO 25"
                          value="9"/>
                <bitfield key="PIO 26"
                          value="10"/>
                <bitfield key="PIO 27"
                          value="11"/>
                <bitfield key="PIO 28"
                          value="12"/>
                <bitfield key="PIO 29"
                          value="13"/>
                <bitfield key="PIO 30"
                          value="14"/>
                <bitfield key="PIO 31"
                          value="15"/>
            </ConfigItem>
            <ConfigItem
                Id="Invert PIO 0-15"
                ShortId="pio_invert_low"
                Desc="It is possible to invert the logic of one or many PIO inputs using a 16 bit bitmask corresponding to PIOs 0 to 15, this allows use with different hardware/button configurations."
                Type="bitfield"
                PSKey="Text=PSKEY_USR16,Address=0x29A,Word=9,Bit=0,Size=16">
                <bitfield key="PIO 0"
                          value="0"/>
                <bitfield key="PIO 1"
                          value="1"/>
                <bitfield key="PIO 2"
                          value="2"/>
                <bitfield key="PIO 3"
                          value="3"/>
                <bitfield key="PIO 4"
                          value="4"/>
                <bitfield key="PIO 5"
                          value="5"/>
                <bitfield key="PIO 6"
                          value="6"/>
                <bitfield key="PIO 7"
                          value="7"/>
                <bitfield key="PIO 8"
                          value="8"/>
                <bitfield key="PIO 9"
                          value="9"/>
                <bitfield key="PIO 10"
                          value="10"/>
                <bitfield key="PIO 11"
                          value="11"/>
                <bitfield key="PIO 12"
                          value="12"/>
                <bitfield key="PIO 13"
                          value="13"/>
                <bitfield key="PIO 14"
                          value="14"/>
                <bitfield key="PIO 15"
                          value="15"/>
            </ConfigItem>
        </ConfigGroup>
        <ConfigGroup Id="PIO Mapping Assignments"
                     Node="Basic">
            <ConfigItem
                Id="Mapping PIO 16-31"
                ShortId="pio_mapping_high"
                Desc="Mapping assignments for PIO 16 to 31. To use certain PIOs that are shared with other hardware it is necessary to set the map pin bit for that PIO, if not set the PIO is not available for general input/output use. Note for mapping PIO physical signals to logical input signals (for e.g. to cause User Events), see User Interface > Buttons > Translation."
                Type="bitfield"
                PSKey="Text=PSKEY_USR16,Address=0x29A,Word=14,Bit=0,Size=16">
                <bitfield key="PIO 16"
                          value="0"/>
                <bitfield key="PIO 17"
                          value="1"/>
                <bitfield key="PIO 18"
                          value="2"/>
                <bitfield key="PIO 19"
                          value="3"/>
                <bitfield key="PIO 20"
                          value="4"/>
                <bitfield key="PIO 21"
                          value="5"/>
                <bitfield key="PIO 22"
                          value="6"/>
                <bitfield key="PIO 23"
                          value="7"/>
                <bitfield key="PIO 24"
                          value="8"/>
                <bitfield key="PIO 25"
                          value="9"/>
                <bitfield key="PIO 26"
                          value="10"/>
                <bitfield key="PIO 27"
                          value="11"/>
                <bitfield key="PIO 28"
                          value="12"/>
                <bitfield key="PIO 29"
                          value="13"/>
                <bitfield key="PIO 30"
                          value="14"/>
                <bitfield key="PIO 31"
                          value="15"/>
            </ConfigItem>
            <ConfigItem
                Id="Mapping PIO 0-15"
                ShortId="pio_mapping_low"
                Desc="Mapping assignments for PIO 0 to 15. To use certain PIOs that are shared with other hardware it is necessary to set the map pin bit for that PIO, if not set the PIO is not available for general input/output use. PIO 0 to PIO 12 are automatically mapped for general input/output access, it is not necessary to set the map pins for PIO 0 to PIO 12. Note for mapping PIO physical signals to logical input signals (for e.g. to cause User Events), see User Interface > Buttons > Translation."
                Type="bitfield"
                PSKey="Text=PSKEY_USR16,Address=0x29A,Word=15,Bit=0,Size=16">
                <bitfield key="PIO 0"
                          value="0"/>
                <bitfield key="PIO 1"
                          value="1"/>
                <bitfield key="PIO 2"
                          value="2"/>
                <bitfield key="PIO 3"
                          value="3"/>
                <bitfield key="PIO 4"
                          value="4"/>
                <bitfield key="PIO 5"
                          value="5"/>
                <bitfield key="PIO 6"
                          value="6"/>
                <bitfield key="PIO 7"
                          value="7"/>
                <bitfield key="PIO 8"
                          value="8"/>
                <bitfield key="PIO 9"
                          value="9"/>
                <bitfield key="PIO 10"
                          value="10"/>
                <bitfield key="PIO 11"
                          value="11"/>
                <bitfield key="PIO 12"
                          value="12"/>
                <bitfield key="PIO 13"
                          value="13"/>
                <bitfield key="PIO 14"
                          value="14"/>
                <bitfield key="PIO 15"
                          value="15"/>
            </ConfigItem>
        </ConfigGroup>
    </ConfigGroup>
    <ConfigGroup Id="Peer Device Support"
                 Node="Basic">
        <ConfigGroup Id="Custom Peer Device Service UUID"
                     Node="Array">
            <ConfigPatternArray Header="General UUID Header"
                                Name="Peer Device UUID"
                                StorageType="Type=MultipleWordSingleKey,Text=PSKEY_USR42,Address=0x2B4,PatternSizeInWords=8"
                                Dimension="UsePatternHeader"/>
        </ConfigGroup>
        <ConfigGroup Id="ShareMe"
                     Node="Basic">
            <ConfigItem
                Id="Pairing Mode"
                ShortId="shareme_pairing_mode"
                Desc="Determines how pairing information is retained for ShareMe devices."
                Type="enum"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=7,Bit=7,Size=2">
                <enum key="Temporary"
                      value="0"/>
                <enum key="Standard"
                      value="1"/>
            </ConfigItem>
            <ConfigItem
                Id="Audio Source"
                ShortId="shareme_source"
                Desc="Device supports relay of audio to another ShareMe device."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=7,Bit=15,Size=1"/>
            <ConfigItem
                Id="Audio Sink"
                ShortId="shareme_sink"
                Desc="Device supports receiving of audio relayed from another ShareMe device."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=7,Bit=14,Size=1"/>
            <ConfigItem
                Id="Remote Peer Controls AV Source"
                ShortId="shareme_source_control"
                Desc="A connected remote ShareMe device can issue AVRCP commands to an AG connected to the local ShareMe device."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=8,Bit=15,Size=1"/>
        </ConfigGroup>
        <ConfigGroup Id="True Wireless Stereo"
                     Node="Basic">
            <ConfigGroup Id="Audio Routing"
                         Node="Basic">
                <ConfigItem
                    Id="Master Routing"
                    ShortId="tws_master_routing"
                    Desc="Audio routing mode for a Master TWS device relaying audio in a TWS session."
                    Type="enum"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=7,Bit=4,Size=2">
                    <enum key="Stereo"
                          value="0"/>
                    <enum key="Left"
                          value="1"/>
                    <enum key="Right"
                          value="2"/>
                    <enum key="Downmix"
                          value="3"/>
                </ConfigItem>
                <ConfigItem
                    Id="Slave Routing"
                    ShortId="tws_slave_routing"
                    Desc="Audio routing mode for a Slave TWS device receiving audio in a TWS session."
                    Type="enum"
                    PSKey="Text=PSKEY_USR6,Address=0x290,Word=7,Bit=2,Size=2">
                    <enum key="Stereo"
                          value="0"/>
                    <enum key="Left"
                          value="1"/>
                    <enum key="Right"
                          value="2"/>
                    <enum key="Downmix"
                          value="3"/>
                </ConfigItem>
            </ConfigGroup>
            <ConfigGroup Id="Device Trim"
                         Node="Basic">
                <ConfigItem
                    Id="Master Device Trim Gain [dB/60]"
                    ShortId="dB_master_device_trim"
                    Desc="Initial TWS Master device trim gain level, in 1/60th dB"
                    Type="int"
                    Range="Min=-720,Max=720"
                    PSKey="Text=PSKEY_USR12,Address=0x296,Word=12,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Slave Device Trim Gain [dB/60]"
                    ShortId="dB_slave_device_trim"
                    Desc="Initial TWS Slave device trim gain level, in 1/60th dB"
                    Type="int"
                    Range="Min=-720,Max=720"
                    PSKey="Text=PSKEY_USR12,Address=0x296,Word=13,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Device Trim Gain Step Change [dB/60]"
                    ShortId="device_trim_step_change"
                    Desc="The increment/decrement applied to a device trim to change the current gain level, in 1/60th dB"
                    Type="uint"
                    Range="Min=0,Max=720"
                    PSKey="Text=PSKEY_USR12,Address=0x296,Word=14,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Minimum Device Trim Gain [dB/60]"
                    ShortId="dB_device_trim_min"
                    Desc="dB value at minimum volume level, in 1/60th dB"
                    Type="int"
                    Range="Min=-720,Max=720"
                    PSKey="Text=PSKEY_USR12,Address=0x296,Word=15,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Maximum Device Trim Gain [dB/60]"
                    ShortId="dB_device_trim_max"
                    Desc="dB value at maximum trim level, in 1/60th dB"
                    Type="int"
                    Range="Min=-720,Max=720"
                    PSKey="Text=PSKEY_USR12,Address=0x296,Word=16,Bit=0,Size=16"/>
            </ConfigGroup>
            <ConfigItem
                Id="Pairing Mode"
                ShortId="tws_pairing_mode"
                Desc="Determines how pairing information is retained for TWS devices."
                Type="enum"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=7,Bit=0,Size=2">
                <enum key="Temporary"
                      value="0"/>
                <enum key="Standard"
                      value="1"/>
                <enum key="Permanent"
                      value="2"/>
            </ConfigItem>
            <ConfigItem
                Id="Audio Source"
                ShortId="tws_source"
                Desc="Device supports relay of audio to another TWS device."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=7,Bit=13,Size=1"/>
            <ConfigItem
                Id="Audio Sink"
                ShortId="tws_sink"
                Desc="Device supports receiving of audio relayed from another TWS device."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=7,Bit=12,Size=1"/>
            <ConfigItem
                Id="Single Device Operation"
                ShortId="tws_device_operation"
                Desc="Determines how devices connected in a TWS session behave when issuing AVRCP commands."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=7,Bit=6,Size=1"/>
        </ConfigGroup>
        <ConfigItem
            Id="Source Selection"
            ShortId="tws_source_mode"
            Desc="Initial source selected for new TWS connections."
            Type="enum"
            PSKey="Text=PSKEY_USR6,Address=0x290,Word=8,Bit=13,Size=2">
            <enum key="Auto"
                  value="0"/>
            <enum key="Analogue"
                  value="1"/>
            <enum key="USB"
                  value="2"/>
            <enum key="A2DP"
                  value="3"/>
        </ConfigItem>
        <ConfigItem
            Id="Master device pages Slave device during link loss"
            ShortId="peer_page_slave"
            Desc="If a link loss occurs between two Peer devices the Master device will page the Slave device.  (Likely to cause audio breakup at the Master device)."
            Type="bool"
            PSKey="Text=PSKEY_USR6,Address=0x290,Word=8,Bit=12,Size=1"/>
        <ConfigItem
            Id="Use Limited Inquiry Access Code"
            ShortId="peer_use_liac"
            Desc="Determines if the LIAC or GIAC is used when pairing Peer devices."
            Type="bool"
            PSKey="Text=PSKEY_USR6,Address=0x290,Word=7,Bit=11,Size=1"/>
        <ConfigItem
            Id="Use Device ID"
            ShortId="peer_device_id"
            Desc="Peer devices will use the Device Id record to filter suitable devices."
            Type="bool"
            PSKey="Text=PSKEY_USR6,Address=0x290,Word=7,Bit=10,Size=1"/>
        <ConfigItem
            Id="Use CSR Peer Device Service UUID"
            ShortId="use_csr_peer_device_uuid"
            Desc="Use a fixed CSR defined 128-bit SDP service UUID to identify Peer device support.&#10;&#10;Warning: In order to use a Custom UUID, 'Use CSR Peer Device Service UUID' should be disabled and the 'Custom Peer Device Service UUID' in 'Configuration Set > Peer Device Support > Custom Peer Device Service UUID' should be updated to contain a non-zero value." 
            Type="bool"
            PSKey="Text=PSKEY_USR6,Address=0x290,Word=7,Bit=9,Size=1"/>
    </ConfigGroup>
    <ConfigGroup Id="Remote Control"
                 Node="Basic">
        <ConfigGroup Id="Input Manager Look-up Table"
                     Node="Array">
            <ConfigPatternArray Header="Input Selection"
                                Name="Input Manager States and Events"
                                StorageType="Type=VariableMultipleWordSingleKey,Text=PSKEY_USR38,Address=0x2B0,PatternSizeInWords=3,WordOffset=7"
                                StorageLength="Text=PSKEY_USR7,Address=0x291,Word=12,Bit=8,Size=8"
                                Dimension="numeric:255"/>
        </ConfigGroup>
        <ConfigGroup Id="IR Input Monitor"
                     Node="Basic">
            <ConfigGroup Id="IR Input Monitor Look-up Table"
                         Node="Array">
                <ConfigPatternArray Header="IR Input ID Selection"
                                    Name="IR Address and Code"
                                    StorageType="Type=VariableMultipleWordSingleKey,Text=PSKEY_USR40,Address=0x2B2,PatternSizeInWords=2,WordOffset=6"
                                    StorageLength="Text=PSKEY_USR7,Address=0x291,Word=12,Bit=0,Size=4"
                                    Dimension="numeric:15"/>
            </ConfigGroup>
            <ConfigItem
                Id="Protocol"
                ShortId="infrared_protocol"
                Desc="Defines which IR protocol the application supports (can only support one protocol; either NEC or RC5)"
                Type="enum"
                PSKey="Text=PSKEY_USR40,Address=0x2B2,Word=1,Bit=0,Size=16">
                <enum key="Reserved"
                      value="0"/>
                <enum key="RC5"
                      value="1"/>
                <enum key="NEC"
                      value="2"/>
            </ConfigItem>
            <ConfigItem
                Id="Maximum Number of Learning Codes"
                ShortId="max_learning_codes"
                Desc="The maximum number of IR codes the application can learn"
                Type="uint"
                PSKey="Text=PSKEY_USR40,Address=0x2B2,Word=2,Bit=0,Size=16"/>
            <ConfigItem
                Id="Timeout for Learning Mode [ms]"
                ShortId="learning_mode_timeout"
                Desc="Failsafe for turning off the IR learning mode [ms]"
                Type="uint"
                PSKey="Text=PSKEY_USR40,Address=0x2B2,Word=3,Bit=0,Size=16"/>
            <ConfigItem
                Id="Timeout for Learning Mode Active Reminder Tone [ms]"
                ShortId="learning_mode_reminder"
                Desc="A reminder tone can be generated to indicate learning mode is active, this will be repeated every timeout [ms] "
                Type="uint"
                PSKey="Text=PSKEY_USR40,Address=0x2B2,Word=4,Bit=0,Size=16"/>
            <ConfigItem
                Id="IR_PIO"
                ShortId="ir_pio"
                Desc="PIO interfacing the InfraRed hardware."
                Type="enum"
                PSKey="Text=PSKEY_USR40,Address=0x2B2,Word=5,Bit=0,Size=16">
                <List use="PIO"/>
            </ConfigItem>
        </ConfigGroup>
        <ConfigGroup Id="BLE Input Monitor"
                     Node="Basic">
            <ConfigGroup Id="BLE Input Monitor Look-up Table"
                         Node="Array">
                <ConfigPatternArray Header="BLE Input ID Selection"
                                    Name="BLE Code"
                                    StorageType="Type=VariableSingleWordSingleKey,Text=PSKEY_USR39,Address=0x2B1,WordOffset=9"
                                    StorageLength="Text=PSKEY_USR7,Address=0x291,Word=12,Bit=4,Size=4"
                                    Dimension="numeric:15"/>
            </ConfigGroup>
            <ConfigItem
                Id="Maximum Number of Supported Remote Controllers"
                ShortId="max_remotes"
                Desc="Stores the maximum number of remote controllers supported"
                Type="uint"
                PSKey="Text=PSKEY_USR39,Address=0x2B1,Word=1,Bit=0,Size=16"/>
            <ConfigItem
                Id="Timeout for BLE Pairing Mode [s]"
                ShortId="pairing_timeout"
                Desc="The pairing timeout (in seconds) so the BLE pairing mode is disabled after n seconds"
                Type="uint"
                PSKey="Text=PSKEY_USR39,Address=0x2B1,Word=2,Bit=0,Size=16"/>
            <ConfigItem
                Id="BLE Scan Interval [0.625ms]"
                ShortId="ble_scan_interval"
                Desc="This value allows configuration of the period with which BLE Scans are run. It is in steps of 0.625ms, with an allowed range of 0x0004 (2.5 ms) to 0x4000 (10.24 s)."
                Type="uint"
                Range="Min=4,Max=16384"
                PSKey="Text=PSKEY_USR39,Address=0x2B1,Word=3,Bit=0,Size=16"/>
            <ConfigItem
                Id="BLE Scan Window [0.625ms]"
                ShortId="ble_scan_window"
                Desc="This value allows configuration of the BLE Scan window. It is in steps of 0.625ms, with an allowed range of 0x0004 (2.5ms) to 0x4000 (10.24 s).&#10;&#10;NOTE: It must be less than or equal to the 'Scan Interval for BLE' parameter value."
                Type="uint"
                PSKey="Text=PSKEY_USR39,Address=0x2B1,Word=4,Bit=0,Size=16"/>
            <ConfigItem
                Id="Bluetooth Address NAP [hex]"
                ShortId="stored_addr_nap"
                Desc="Address NAP for Bluetooth address of a BLE remote controller (given priority on connections) "
                Type="uint"
                PresentHex="true"
                PSKey="Text=PSKEY_USR39,Address=0x2B1,Word=8,Bit=0,Size=16"/>
            <ConfigItem
                Id="Bluetooth Address UAP [hex]"
                ShortId="stored_addr_uap"
                Desc="Address UAP for Bluetooth address of a BLE remote controller (given priority on connections) "
                Type="uint"
                PresentHex="true"
                PSKey="Text=PSKEY_USR39,Address=0x2B1,Word=7,Bit=0,Size=8 "/>
            <ConfigItem
                Id="Bluetooth Address LAP [hex]"
                ShortId="stored_addr_lap"
                Desc="Address LAP for Bluetooth address of a BLE remote controller (given priority on connections) "
                Type="ulong"
                PresentHex="true"
                PSKey="Text=PSKEY_USR39,Address=0x2B1,MsWord=5,MsBit=0,MsSize=8,LsWord=6,LsBit=0,LsSize=16 "/>
        </ConfigGroup>
        <ConfigItem
            Id="Multiple Detect Timer [ms]"
            ShortId="multipleDetectTimer"
            Desc="Timer that is armed immediately  after the first input is pressed, once this timer fires, no further multiple buttons will be included in the pattern [ms]"
            Type="uint"
            PSKey="Text=PSKEY_USR38,Address=0x2B0,Word=1,Bit=0,Size=16"/>
        <ConfigItem
            Id="Short Press Timer [ms]"
            ShortId="shortTimer"
            Desc="After a short duration, this timer will fire, input manager can assign events when short timer fires [ms]"
            Type="uint"
            PSKey="Text=PSKEY_USR38,Address=0x2B0,Word=2,Bit=0,Size=16"/>
        <ConfigItem
            Id="Long Press Timer [ms]"
            ShortId="longTimer"
            Desc="After a long duration, this timer will fire, input manager can assign events when the timer fires [ms]"
            Type="uint"
            PSKey="Text=PSKEY_USR38,Address=0x2B0,Word=3,Bit=0,Size=16"/>
        <ConfigItem
            Id="Very Long Press Timer [ms]"
            ShortId="vLongTimer"
            Desc="After a very long duration, this timer will fire, input manager can assign events when the timer fires [ms]"
            Type="uint"
            PSKey="Text=PSKEY_USR38,Address=0x2B0,Word=4,Bit=0,Size=16"/>
        <ConfigItem
            Id="Very Very Long Press Timer [ms]"
            ShortId="vvLongTimer"
            Desc="After a very very long duration, this timer will fire, input manager can assign events when the timer fires [ms]"
            Type="uint"
            PSKey="Text=PSKEY_USR38,Address=0x2B0,Word=5,Bit=0,Size=16"/>
        <ConfigItem
            Id="Repeat Timer [ms]"
            ShortId="repeatTimer"
            Desc="Every repeatTimer duration, this timer will fire, input manager can assign events on short timer firing, such as repeated volume events [ms]"
            Type="uint"
            PSKey="Text=PSKEY_USR38,Address=0x2B0,Word=6,Bit=0,Size=16"/>
    </ConfigGroup>
    <ConfigGroup Id="System"
                 Node="Basic">
        <ConfigGroup Id="Timers"
                     Node="Basic">
            <ConfigItem
                Id="Automatic Switch Off Time [s]"
                ShortId="AutoSwitchOffTime_s"
                Desc="The time in seconds after which the Sink switches off if not connected. If set to 0 then the Sink remains on indefinitely."
                Type="uint"
                Range="Min=0,Max=600"
                PSKey="Text=PSKEY_USR8,Address=0x292,Word=1,Bit=0,Size=16"/>
            <ConfigItem
                Id="Auto Power On Timeout [s]"
                ShortId="AutoPowerOnTimeout_s"
                Desc="The value in seconds that the Sink waits in the limbo state for a power on event before powering off. The limbo state is entered when the device is powered or receives a power off event."
                Type="uint"
                Range="Min=0,Max=60"
                PSKey="Text=PSKEY_USR8,Address=0x292,Word=2,Bit=0,Size=16"/>
            <ConfigItem
                Id="Disable Power Off After Power On Time [s]"
                ShortId="DisablePowerOffAfterPowerOnTime_s"
                Desc="The time in seconds after Power On for which the Power Off event has no effect. This is used for example, if the UI specifies that a long press on Power On enters pairing mode but a long press at any other time (including in the connectable state) should Power Off the Sink."
                Type="uint"
                Range="Min=0,Max=60"
                PSKey="Text=PSKEY_USR8,Address=0x292,Word=4,Bit=0,Size=16"/>
            <ConfigItem
                Id="Mute Reminder Interval [s]"
                ShortId=""
                Desc=""
                Type="uint"
                Range="Min=0,Max=60"
                PSKey="Text=PSKEY_USR8,Address=0x292,Word=6,Bit=0,Size=16"/>
            <ConfigItem
                Id="Connectable Timeout [s]"
                ShortId="ConnectableTimeout_s"
                Desc="Specifies the amount of time in seconds the Sink remains connectable following a successful connection when using multipoint operational modes before not being connectable any more."
                Type="uint"
                PSKey="Text=PSKEY_USR8,Address=0x292,Word=7,Bit=0,Size=16"/>
            <!--This item is not existing in ADK3 pskeys draft document
            <ConfigItem
                Id="Role Switch After Connection Delay"
                ShortId="CheckRoleDelayTime_s"
                Desc="Unused in the ADK."
                Type="uint"
                PSKey="Text=PSKEY_USR8,Address=0x292,Word=12,Bit=0,Size=16"/>
                -->
            <ConfigItem
                Id="Second AG Connection Delay Time [ms]"
                ShortId="SecondAGConnectDelayTime_s"
                Desc="This value determines the delay time, in ms, between the connection of AG1 and the start of connection to AG2 when using multipoint mode of operation. This value may be changed from its default value if interoperability issues are seen with certain AGs."
                Type="uint"
                PSKey="Text=PSKEY_USR8,Address=0x292,Word=12,Bit=0,Size=16"/>
            <ConfigItem
                Id="Store Current Sink Volume Timeout [s]"
                ShortId="StoreCurrentSinkVolumeTimeout"
                Desc="The time in seconds elapsed after the last Volume Up/Down button was pressed, to store the volume information into PS Store."
                Type="uint"
                PSKey="Text=PSKEY_USR8,Address=0x292,Word=18,Bit=0,Size=16"/>
            <ConfigItem
                Id="Wired Audio Connected Power Off Timeout [s]"
                ShortId="WiredAudioConnectedPowerOffTimeout_s"
                Desc=" The time in seconds elapsed before the device is powered off after the wired audio is connected "
                Type="uint"
                PSKey="Text=PSKEY_USR8,Address=0x292,Word=19,Bit=0,Size=16"/>
            <ConfigItem
                Id="GAIA User Defined EQ Settings Persistent Store Timeout [s]"
                ShortId="StoreCurrentPEQSettingsTimeout_s"
                Desc=" The time in seconds elapsed after the last GAIA command has been received to store EQ settings into PS Store."
                Type="uint"
                PSKey="Text=PSKEY_USR8,Address=0x292,Word=20,Bit=0,Size=16"/>
	    <ConfigItem
                Id="Sound Bar Audio Amplifier Power Down Timeout [s]"
                ShortId="AudioAmpPowerDownTimeoutInLimbo_s"
                Desc=" The period in seconds for which the system waits before powering down audio amplifier for sound bar when in Limbo state."
                Type="uint"
                PSKey="Text=PSKEY_USR8,Address=0x292,Word=22,Bit=0,Size=16"/>		
        </ConfigGroup>
        <ConfigGroup Id="PS Store"
                     Node="Basic">
            <ConfigItem
                Id="PS Defrag Trigger - Key Size"
                ShortId="defrag_config_key_size"
                Desc="This configuration item is used in conjunction with 'PS Defrag Trigger - Minimum Available Keys' to force a PS Defrag to occur. The PS Defrag operation is checked at Power Off or optionally on a timer and will start automatically when the number of available PS Keys with a capacity greater than the specified 'PS Defrag Key Size' is less than 'PS Defrag Trigger - Minimum Available Keys'."
                Type="uint"
                PSKey="Text=PSKEY_USR7,Address=0x291,Word=11,Bit=8,Size=8"/>
            <ConfigItem
                Id="PS Defrag Trigger - Minimum Available Keys"
                ShortId="defrag_config_key_minimum"
                Desc="Forces a PS defrag when the number of available PS Keys with a capacity greater than the specified 'PS Defrag Trigger - Key Size' is less than the 'PS Defrag Trigger - Minimum Available Keys' value."
                Type="uint"
                PSKey="Text=PSKEY_USR7,Address=0x291,Word=11,Bit=0,Size=8"/>
            <ConfigItem
                Id="PS Defrag Timer [s]"
                ShortId="DefragCheckTimer_s"
                Desc="When no audio is routed the application will periodically check if a PS Defrag is required.  Time in seconds, if set to zero the feature is disabled."
                Type="uint"
                PSKey="Text=PSKEY_USR8,Address=0x292,Word=21,Bit=0,Size=16"/>                
        </ConfigGroup>
        <ConfigItem
            Id="Disable Power Off after Power On"
            ShortId="DisablePowerOffAfterPowerOn"
            Desc="If this item is set the Sink ignores the power off button press immediately after power on."
            Type="bool"
            PSKey="Text=PSKEY_USR6,Address=0x290,Word=1,Bit=9,Size=1"/>
        <ConfigItem
            Id="Power Off only if Vreg Enable Low"
            ShortId="PowerOffOnlyIfVRegEnLow"
            Desc="When set this feature prevents the Sink from powering off if the VREG enable pin is not low."
            Type="bool"
            PSKey="Text=PSKEY_USR6,Address=0x290,Word=1,Bit=2,Size=1"/>
        <ConfigItem
            Id="Reset Chip after Power Off is Complete"
            ShortId="ResetAfterPowerOffComplete"
            Desc="When set the Sink will perform a chip reset after powering off. This may be used if the BlueCore IC is powered permanently with no other form of hardware reset available."
            Type="bool"
            PSKey="Text=PSKEY_USR6,Address=0x290,Word=4,Bit=14,Size=1"/>
        <ConfigItem
            Id="Auto Power On after Initialisation Enable"
            ShortId="AutoPowerOnAfterInitialisation"
            Desc="This feature allows a faster Sink startup period by removing the need for a power on event to be configured on a button press."
            Type="bool"
            PSKey="Text=PSKEY_USR6,Address=0x290,Word=4,Bit=13,Size=1"/>
        <ConfigItem
            Id="Power Off after Wired Audio Connected"
            ShortId="PowerOffOnWiredAudioConnected"
            Desc="When set the Sink is powered off after the wired audio is connected"
            Type="bool"
            PSKey="Text=PSKEY_USR6,Address=0x290,Word=3,Bit=4,Size=1"/>
    </ConfigGroup>
    <ConfigGroup Id="User Interface"
                 Node="Basic">
        <ConfigGroup Id="User Events"
                     Node="Array">
            <ConfigPatternArray Header="User Event"
                                Name="Event"
                                StorageType="Type=MultipleWordMultipleKey,Text=PSKEY_USR24:25:26,Address=0x2A2:0x2A3:0x2A4,PatternSizeInWords=3,PatternsPerKey=22"
                                Dimension="numeric:66"/>
        </ConfigGroup>
        <ConfigGroup Id="Tones"
                     Node="Basic">
            <ConfigGroup Id="Event Tones"
                         Node="Array">
                <ConfigPatternArray Header="All Events"
                                    Name="Tone"
                                    StorageType="Type=VariableMultipleWordSingleKey,Text=PSKEY_USR27,Address=0x2A5,PatternSizeInWords=2,WordOffset=1"
                                    StorageLength="Text=PSKEY_USR7,Address=0x291,Word=7,Bit=0,Size=16"
                                    Dimension="numeric:66"/>
            </ConfigGroup>
            <ConfigItem
                Id="Play All Feedback Tones at Fixed Volume"
                ShortId="PlayTonesAtFixedVolume"
                Desc="If this item is set Tones are played at a nominal fixed volume regardless of the current Profile Volume level."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=1,Bit=12,Size=1"/>
            <ConfigItem
                Id="Fixed Volume Level at which to play Feedback Tones"
                ShortId="FixedToneVolumeLevel"
                Desc="This sets the volume level at which tones are played if the fixed level has been enabled. Fixed tone volume is enabled by setting PlayTonesAtFixedVolume to 1. FixedToneVolumeLevel can be set in the range 0 to 31."
                Type="uint"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=5,Bit=10,Size=5"/>
            <ConfigItem
                Id="Queue Volume Tones"
                ShortId="QueueVolumeTones"
                Desc="This allows volume tones to be queued in the Sink."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=3,Bit=3,Size=1"/>
            <ConfigItem
                Id="Queue Event Tones"
                ShortId="QueueEventTones"
                Desc="This allows event tones to be queued in the Sink."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=3,Bit=2,Size=1"/>
        </ConfigGroup>
        <ConfigGroup Id="Audio Prompts"
                     Node="Basic">
            <ConfigGroup Id="Generate"
                         Node="AudioPrompts">
                <ConfigPatternArray Header="All Events"
                                    Name="Audio Prompt"
                                    StorageType="Type=VariableMultipleWordSingleKey,Text=PSKEY_USR30,Address=0x2A8,PatternSizeInWords=3,WordOffset=1"
                                    StorageLength="Text=PSKEY_USR7,Address=0x291,Word=2,Bit=0,Size=16"
                                    Dimension="numeric:50"/>
                <ConfigItem
                    Id="Number of Languages Supported by Audio Prompts"
                    ShortId="num_audio_prompt_languages"
                    Desc="IMPORTANT: the number of languages supported by the Audio Prompt engine if included in the build. To use Audio Prompts in the Sink device, the 'Number of Languages Supported by Audio Prompts' must be set to at least 1."
                    Type="uint"
                    PSKey="Text=PSKEY_USR7,Address=0x291,Word=3,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Audio Prompts Count"
                    ShortId="num_audio_prompts"
                    Desc="The number of audio prompts configured if the build supports audio prompts."
                    Type="uint"
                    PSKey="Text=PSKEY_USR7,Address=0x291,Word=8,Bit=0,Size=16"/>
            </ConfigGroup>
            <ConfigItem
                Id="Disable Audio Prompt Terminate"
                ShortId="DisableAudioPromptTerminate"
                Desc="If set this feature will allow any audio prompt configured to indicate an incoming call to play to completion, even if the call is answered immediately or the call terminates."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=2,Bit=14,Size=1"/>
            <ConfigItem
                Id="Enable Phone Number Readout by Audio Prompts"
                ShortId="AudioPromptNumbers"
                Desc="When set Audio prompts are used to 'speak' an incoming caller number."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=5,Bit=0,Size=1"/>
            <ConfigItem
                Id="Read out PIN Code using Audio Prompts"
                ShortId="AudioPromptPairing"
                Desc="When set PIN/Passkey/Confirmation messages are read out using preconfigured Audio Prompts."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=5,Bit=7,Size=1"/>
            <ConfigItem
                Id="Time Before Confirming Audio Prompt Language [s]"
                ShortId="LanguageConfirmTime_s"
                Desc="When changing audio prompt languages, it is possible to have the language change automatically confirmed and stored. If set to a non-zero value the change will be committed to ps after the configured time in seconds."
                Type="uint"
                PSKey="Text=PSKEY_USR8,Address=0x292,Word=16,Bit=0,Size=16"/>
        </ConfigGroup>
        <ConfigGroup Id="Buttons"
                     Node="Basic">
            <ConfigGroup Id="Translation"
                         Node="Array">
                <ConfigPatternArray Header="Logical Input List"
                                    Name="Input Mapping"
                                    StorageType="Type=SingleWordSingleKey,Text=PSKEY_USR18,Address=0x29C"
                                    Dimension="UsePatternHeader"/>
            </ConfigGroup>
            <ConfigGroup Id="Sequence Configuration"
                         Node="Array">
                <ConfigPatternArray Header="Button Sequence Pattern Index"
                                    Name="Button Sequence Pattern Configuration"
                                    StorageType="Type=MultipleWordSingleKey,Text=PSKEY_USR19,Address=0x29D,PatternSizeInWords=7"
                                    Dimension="UsePatternHeader"/>
            </ConfigGroup>
            <ConfigItem
                Id="Double Press [ms]"
                ShortId="double_press_time"
                Desc="The time interval, in ms, in which a second press may be detected leading to a double press event instead of reporting the button press as a single press."
                Type="uint"
                Range="Min=100,Max=1000"
                PSKey="Text=PSKEY_USR17,Address=0x29B,Word=1,Bit=0,Size=16"/>
            <ConfigItem
                Id="Long Press [ms]"
                ShortId="long_press_time"
                Desc="The time a button has to be pressed for, in ms, in order to generate a long timer message."
                Type="uint"
                Range="Min=500,Max=8000"
                PSKey="Text=PSKEY_USR17,Address=0x29B,Word=2,Bit=0,Size=16"/>
            <ConfigItem
                Id="Very Long Press [ms]"
                ShortId="very_long_press_time"
                Desc="The time a button has to be pressed for, in ms, in order to generate a very long timer message."
                Type="uint"
                Range="Min=1000,Max=12000"
                PSKey="Text=PSKEY_USR17,Address=0x29B,Word=3,Bit=0,Size=16"/>
            <ConfigItem
                Id="Repeat Rate [ms]"
                ShortId="repeat_time"
                Desc="The time, in ms, between repeat messages being generated if a button is held down."
                Type="uint"
                Range="Min=100,Max=5000"
                PSKey="Text=PSKEY_USR17,Address=0x29B,Word=4,Bit=0,Size=16"/>
            <ConfigItem
                Id="Very Very Long Press [ms]"
                ShortId="very_very_long_press_time"
                Desc="The time a button has to be pressed for, in ms, in order to generate a very very long timer message."
                Type="uint"
                Range="Min=1000,Max=12000"
                PSKey="Text=PSKEY_USR17,Address=0x29B,Word=5,Bit=0,Size=16"/>
            <ConfigItem
                Id="Num of Debounce Checks"
                ShortId="debounce_number"
                Desc="The number of debounce checks performed."
                Type="uint"
                PSKey="Text=PSKEY_USR17,Address=0x29B,Word=6,Bit=8,Size=8"/>
            <ConfigItem
                Id="Time Between Debounce Checks [ms]"
                ShortId="debounce_period_ms"
                Desc="The interval between each debounce check in ms."
                Type="uint"
                PSKey="Text=PSKEY_USR17,Address=0x29B,Word=6,Bit=0,Size=8"/>
        </ConfigGroup>
        <ConfigGroup Id="LED"
                     Node="Basic">
            <ConfigGroup Id="States"
                         Node="Array">
                <ConfigPatternArray Header="State List"
                                    Name="LED"
                                    StorageType="Type=VariableMultipleWordSingleKey,Text=PSKEY_USR21,Address=0x29F,PatternSizeInWords=5,WordOffset=1"
                                    StorageLength="Text=PSKEY_USR7,Address=0x291,Word=5,Bit=0,Size=16"
                                    Dimension="numeric:15"/>
            </ConfigGroup>
            <ConfigGroup Id="Events"
                         Node="Array">
                <ConfigPatternArray Header="All Events"
                                    Name="LED"
                                    StorageType="Type=VariableMultipleWordSingleKey,Text=PSKEY_USR23,Address=0x2A1,PatternSizeInWords=5,WordOffset=1"
                                    StorageLength="Text=PSKEY_USR7,Address=0x291,Word=6,Bit=0,Size=16"
                                    Dimension="numeric:20"/>
            </ConfigGroup>
            <ConfigGroup Id="Filters"
                         Node="Array">
                <ConfigPatternArray Header="All Events"
                                    Name="Filter"
                                    StorageType="Type=VariableMultipleWordSingleKey,Text=PSKEY_USR20,Address=0x29E,PatternSizeInWords=3,WordOffset=1"
                                    StorageLength="Text=PSKEY_USR7,Address=0x291,Word=4,Bit=0,Size=16"
                                    Dimension="numeric:20"/>
            </ConfigGroup>
            <ConfigGroup Id="Tri Colour LED Settings"
                         Node="Basic">
                <ConfigItem
                    Id="Tri Colour Led A"
                    ShortId="TriCol_a"
                    Desc="Define PIO_x/LED_x (to specify the PIO or LED pin connected to TriCol_a LED pins)"
                    Type="enum"
                    PSKey="Text=PSKEY_USR22,Address=0x2a0,Word=1,Bit=12,Size=4">
                    <List use="LED TriColour 4bit"/>
                </ConfigItem>
                <ConfigItem
                    Id="Tri Colour Led B"
                    ShortId="TriCol_b"
                    Desc="Define PIO_x/LED_x (to specify the PIO or LED pin connected to TriCol_b LED pins)"
                    Type="enum"
                    PSKey="Text=PSKEY_USR22,Address=0x2a0,Word=1,Bit=8,Size=4">
                    <List use="LED TriColour 4bit"/>
                </ConfigItem>
                <ConfigItem
                    Id="Tri Colour Led C"
                    ShortId="TriCol_c"
                    Desc="Define PIO_x/LED_x (to specify the PIO or LED pin connected to TriCol_c LED pins)"
                    Type="enum"
                    PSKey="Text=PSKEY_USR22,Address=0x2a0,Word=1,Bit=4,Size=4">
                    <List use="LED TriColour 4bit"/>
                </ConfigItem>
            </ConfigGroup>
            <ConfigItem
                Id="Override Filter LED is Permanently On"
                ShortId="OverideFilterPermanentlyOn"
                Desc="If this item is set when displaying an override filter LED indication there will be no breaks in a solid colour display. Normal mode/event indications are suppressed for the LED chosen for the override LED filter."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=1,Bit=14,Size=1"/>
            <ConfigItem
                Id="LED Duty Cycle Time Multiplier"
                ShortId="LedTimeMultiplier"
                Desc="Applies a scaling factor to the times used for all LED on and off times. It can be used to lengthen LED on and off times beyond that of the 2.5 second limit."
                Type="enum"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=2,Bit=2,Size=2">
                <enum key="x1"
                      value="0"/>
                <enum key="x2"
                      value="1"/>
                <enum key="x4"
                      value="2"/>
                <enum key="x8"
                      value="3"/>
            </ConfigItem>
            <ConfigItem
                Id="Queue LED Event Indications"
                ShortId="QueueLEDEvents"
                Desc="This allows LED indicator patterns to be queued in the Sink."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=3,Bit=1,Size=1"/>
            <ConfigItem
                Id="LED Disable State Reset after Boot"
                ShortId="ResetLEDEnableStateAfterReset"
                Desc="When set, after a reboot the LED enable/disable state is reset and the LEDs are enabled independently of the led_disable parameter. When cleared the LED enable/disable state is stored over a reboot."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=4,Bit=15,Size=1"/>
            <ConfigItem
                Id="Charging Complete Override LED Enable"
                ShortId="ChargerTerminationLEDOveride"
                Desc="When set The charger LED indications stay at trickle charge once reached, i.e. the indications only change when the charger is disconnected and reconnected. When cleared The charger indications toggles between fast and trickle charge indications as appropriate to the current state of the battery charge level."
                Type="bool"
                PSKey="Text=PSKEY_USR6,Address=0x290,Word=5,Bit=15,Size=1"/>
        </ConfigGroup>
        <ConfigItem
            Id="Ignore Button Event if Enabling LEDs"
            ShortId="IgnoreButtonPressAfterLedEnable"
            Desc="When set this prevents a button from raising an event, but only when LEDs are being re-activated. It merely re-enables the display of LEDs (when they had previously timed out) but the associated event with the button press will not occur."
            Type="bool"
            PSKey="Text=PSKEY_USR6,Address=0x290,Word=4,Bit=3,Size=1"/>
    </ConfigGroup>
    <ConfigGroup Id="GAIA"
                 Node="Basic">
        <ConfigItem
            Id="Enable GAIA Session"
            ShortId="gaia_enable_session"
            Desc="GAIA session enabled on connection."
            Type="bool"
            PSKey="Text=PSKEY_USR6,Address=0x290,Word=8,Bit=1,Size=1"/>
        <ConfigItem
            Id="Maintain Connection After Power Off"
            ShortId="gaia_remain_connected"
            Desc="GAIA connection remains after power off."
            Type="bool"
            PSKey="Text=PSKEY_USR6,Address=0x290,Word=8,Bit=0,Size=1"/>
        <ConfigItem
            Id="GAIA DFU Partition"
            ShortId=""
            Desc="This specifies the SQIF partition to use for GAIA Over-the-Air Device Firmware Upgrade."
            Type="uint"
            Range="Min=0,Max=14"
            PSKey="Text=PSKEY_USR5,Address=0x28F,Word=2,Bit=0,Size=16"/>
    </ConfigGroup>

    <!--Read/Writeable by the Sink VM Application, but not set by the Config Tool at present-->
    <ConfigGroup Id="Advanced Settings"
                 Node="Expert">
        <ConfigGroup Id="Session Data"
                     Node="Basic">
            <ConfigItem
                Id="Volume Orientation"
                ShortId=""
                Desc="1 = Inverts the operation of the volume controls, 0 = Volume control normal orientation."
                Type="bool"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=1,Bit=15,Size=1"/>
            <ConfigItem
                Id="LED Disable"
                ShortId=""
                Desc="1 = Disables the LEDs, 0 = Enables LEDs."
                Type="bool"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=1,Bit=14,Size=1"/>
            <ConfigItem
                Id="Selected Audio Prompt Language"
                ShortId=""
                Desc="The index of the Audio Prompt Language in use."
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=1,Bit=10,Size=4"/>
            <ConfigItem
                Id="LBIPM Enable"
                ShortId=""
                Desc="1 = Enable Low Battery intelligent Power Management, 0 = Disable Low Battery intelligent Power Management."
                Type="bool"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=1,Bit=7,Size=1"/>
            <ConfigItem
                Id="Text To Speech Enable"
                ShortId=""
                Desc="1 = Enable Text To Speech, 0 = Disable Text To Speech."
                Type="bool"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=1,Bit=4,Size=1"/>
            <ConfigItem
                Id="Speech Recognition Enable"
                ShortId=""
                Desc="1 = Enable Speech Recognition, 0 = Disable Speech Recognition."
                Type="bool"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=1,Bit=3,Size=1"/>
            <ConfigItem
                Id="Audio Enhancements Enable"
                ShortId=""
                Desc=""
                Type="bool"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=2,Bit=15,Size=1"/>
            <ConfigItem
                Id="Subwoofer Bypass"
                ShortId=""
                Desc=""
                Type="bool"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=2,Bit=11,Size=1"/>
            <ConfigItem
                Id="Speaker EQ Bypass"
                ShortId=""
                Desc=""
                Type="bool"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=2,Bit=10,Size=1"/>
            <ConfigItem
                Id="EQ Flat Enable"
                ShortId=""
                Desc=""
                Type="bool"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=2,Bit=9,Size=1"/>
            <ConfigItem
                Id="User EQ Bypass"
                ShortId=""
                Desc=""
                Type="bool"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=2,Bit=8,Size=1"/>
            <ConfigItem
                Id="Bass Boost Bypass"
                ShortId=""
                Desc=""
                Type="bool"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=2,Bit=7,Size=1"/>
            <ConfigItem
                Id="Spatial Bypass"
                ShortId=""
                Desc=""
                Type="bool"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=2,Bit=6,Size=1"/>
            <ConfigItem
                Id="Compander Bypass"
                ShortId=""
                Desc=""
                Type="bool"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=2,Bit=5,Size=1"/>
            <ConfigItem
                Id="Dither Bypass"
                ShortId=""
                Desc=""
                Type="bool"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=2,Bit=4,Size=1"/>
            <ConfigItem
                Id="Selected EQ Bank"
                ShortId=""
                Desc="Note: 0x7 selects the option to use the last customer defined Equaliser settings."
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=2,Bit=0,Size=3"/>
            <ConfigItem
                Id="Stored FM Frequency"
                ShortId=""
                Desc="Frequency stored on last FM Rx use."
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=3,Bit=0,Size=16"/>
            <ConfigItem
                Id="Analogue Volume"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=4,Bit=8,Size=8"/>
            <ConfigItem
                Id="S/PDIF Volume"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=4,Bit=0,Size=8"/>
            <ConfigItem
                Id="USB Volume"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=5,Bit=8,Size=8"/>
            <ConfigItem
                Id="FM Volume"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=5,Bit=0,Size=8"/>
            <ConfigItem
                Id="EQ Bank 1 Master Gain"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=6,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 1 Filter Type"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=7,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 1 Frequency"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=8,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 1 Gain"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=9,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 1 Q Value"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=10,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 2 Filter Type"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=11,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 2 Frequency"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=12,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 2 Gain"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=13,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 2 Q Value"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=14,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 3 Filter Type"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=15,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 3 Frequency"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=16,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 3 Gain"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=17,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 3 Q Value"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=18,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 4 Filter Type"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=19,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 4 Frequency"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=20,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 4 Gain"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=21,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 4 Q Value"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=22,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 5 Filter Type"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=23,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 5 Frequency"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=24,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 5 Gain"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=25,Bit=0,Size=16"/>
            <ConfigItem
                Id="Band 5 Q Value"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR0,Address=0x28A,Word=26,Bit=0,Size=16"/>
        </ConfigGroup>
        <ConfigGroup Id="BT Radio Key"
                     Node="Basic">
            <ConfigItem
                Id="Page Scan Interval"
                ShortId=""
                Desc=""
                Range="Min=18,Max=4096"
                Type="uint"
                PSKey="Text=PSKEY_USR11,Address=0x295,Word=1,Bit=0,Size=16"/>
            <ConfigItem
                Id="Page Scan Window"
                ShortId=""
                Desc=""
                Range="Min=18,Max=4096"
                Type="uint"
                PSKey="Text=PSKEY_USR11,Address=0x295,Word=2,Bit=0,Size=16"/>
            <ConfigItem
                Id="Inquiry Scan Interval"
                ShortId=""
                Desc=""
                Range="Min=18,Max=4096"
                Type="uint"
                PSKey="Text=PSKEY_USR11,Address=0x295,Word=3,Bit=0,Size=16"/>
            <ConfigItem
                Id="Inquiry Scan Window"
                ShortId=""
                Desc=""
                Range="Min=18,Max=4096"
                Type="uint"
                PSKey="Text=PSKEY_USR11,Address=0x295,Word=4,Bit=0,Size=16"/>
        </ConfigGroup>
        <ConfigGroup Id="Simple Speech Recognition Key"
                     Node="Basic">
            <ConfigGroup Id="SLC"
                         Node="Basic">
                <ConfigItem
                    Id="Max Remote Latency"
                    ShortId=""
                    Desc=""
                    Type="uint"
                    PSKey="Text=PSKEY_USR31,Address=0x2A9,Word=1,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Min Remote Timeout"
                    ShortId=""
                    Desc=""
                    Type="uint"
                    PSKey="Text=PSKEY_USR31,Address=0x2A9,Word=2,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Min Local Timeout"
                    ShortId=""
                    Desc=""
                    Type="uint"
                    PSKey="Text=PSKEY_USR31,Address=0x2A9,Word=3,Bit=0,Size=16"/>
            </ConfigGroup>
            <ConfigGroup Id="SCO"
                         Node="Basic">
                <ConfigItem
                    Id="Max Remote Latency"
                    ShortId=""
                    Desc=""
                    Type="uint"
                    PSKey="Text=PSKEY_USR31,Address=0x2A9,Word=4,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Min Remote Timeout"
                    ShortId=""
                    Desc=""
                    Type="uint"
                    PSKey="Text=PSKEY_USR31,Address=0x2A9,Word=5,Bit=0,Size=16"/>
                <ConfigItem
                    Id="Min Local Timeout"
                    ShortId=""
                    Desc=""
                    Type="uint"
                    PSKey="Text=PSKEY_USR31,Address=0x2A9,Word=6,Bit=0,Size=16"/>
            </ConfigGroup>
        </ConfigGroup>
        <ConfigGroup Id="FM Radio Key"
                     Node="Basic">
            <ConfigItem
                Id="Seek Band Bottom"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR33,Address=0x2AB,Word=1,Bit=0,Size=16"/>
            <ConfigItem
                Id="Seek Band Top"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR33,Address=0x2AB,Word=2,Bit=0,Size=16"/>
            <ConfigItem
                Id="Seek Frequency Spacing"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR33,Address=0x2AB,Word=3,Bit=0,Size=16"/>
            <ConfigItem
                Id="Seek Tune RSSI"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR33,Address=0x2AB,Word=4,Bit=0,Size=16"/>
            <ConfigItem
                Id="Seek Tune SNR"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR33,Address=0x2AB,Word=5,Bit=0,Size=16"/>
            <ConfigItem
                Id="RSQ Low Threshold for RSSI Interrupt"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR33,Address=0x2AB,Word=6,Bit=0,Size=16"/>
            <ConfigItem
                Id="RSQ High Threshold for RSSI Interrupt"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR33,Address=0x2AB,Word=7,Bit=0,Size=16"/>
            <ConfigItem
                Id="RSQ Low Threshold for SNR Interrupt"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR33,Address=0x2AB,Word=8,Bit=0,Size=16"/>
            <ConfigItem
                Id="RSQ High Threshold for SNR Interrupt"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR33,Address=0x2AB,Word=9,Bit=0,Size=16"/>
            <ConfigItem
                Id="Antenna Source"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR33,Address=0x2AB,Word=10,Bit=0,Size=16"/>
            <ConfigItem
                Id="Hardware PIO for Reset Line"
                ShortId=""
                Desc=""
                Type="uint"
                PSKey="Text=PSKEY_USR33,Address=0x2AB,Word=11,Bit=0,Size=16"/>
        </ConfigGroup>
        <ConfigGroup Id="User Tones Key"
                     Node="Array">
            <ConfigPatternArray Header="None"
                                Name="User Defined Tones"
                                Desc="This is the raw data for the User Defined Tones."
                                StorageType="Type=VariableSingleWordSingleKey,Text=PSKEY_USR28,Address=0x2A6,WordOffset=1"
                                StorageLength="Text=PSKEY_USR7,Address=0x291,Word=9,Bit=0,Size=16"
                                Dimension="numeric:255"/>
        </ConfigGroup>
        <ConfigGroup Id="AT Commands Key"
                     Node="Basic">
            <ConfigGroup Id="Event to AT Command Mapping"
                         Node="Array">
                <ConfigPatternArray Header="AT Command Map Index"
                                    Name="AT Command Map"
                                    StorageType="Type=MultipleWordSingleKey,Text=PSKEY_USR34,Address=0x2AC,PatternSizeInWords=2"
                                    Dimension="UsePatternHeader"/>
            </ConfigGroup>
            <ConfigGroup Id="Command Data"
                         Node="Array">
                <ConfigPatternArray Header="None"
                                    Name="AT Command Buffer"
                                    Desc="This is the raw data for the AT commands"
                                    StorageType="Type=VariableSingleWordSingleKey,Text=PSKEY_USR34,Address=0x2AC,WordOffset=17"
                                    StorageLength="Text=PSKEY_USR7,Address=0x291,Word=10,Bit=0,Size=16"
                                    Dimension="numeric:255"/>
            </ConfigGroup>
        </ConfigGroup>
    </ConfigGroup>
</ConfigSet>
