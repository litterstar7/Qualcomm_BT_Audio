@startuml


note "For clarity not all state transitions shown" as N1

[*] -down-> UNINITIALISED : Start
note left of UNINITIALISED : State names shortened, removing prefix of PEER_PAIR_LE_STATE_

UNINITIALISED : Initial state on power up
UNINITIALISED --> INITIALISED : peer_pair_le_init()

INITIALISED : State when first initialised, and after pairing has completed
INITIALISED --> PENDING_LOCAL_ADDR : peer_pair_le_start_service()

PENDING_LOCAL_ADDR : On entry to state, the local Bluetooth Device Address is requested from the Coneection Library.
PENDING_LOCAL_ADDR : This is needed before any subsequent activity.
PENDING_LOCAL_ADDR --> IDLE : CL_DM_LOCAL_BD_ADDR_CFM
PENDING_LOCAL_ADDR --> IDLE : CL_DM_LOCAL_BD_ADDR_CFM, PeerPairLe_FindPeer() called first
PENDING_LOCAL_ADDR --> PENDING_LOCAL_ADDR : PeerPairLe_FindPeer()

IDLE: Awaiting a request to pair with a peer
IDLE --> DISCOVERY : PeerPairLe_FindPeer()

DISCOVERY : Advertising and scanning. No devices yet detected.
DISCOVERY --> SELECTING : CL_DM_BLE_ADVERTISING_REPORT_IND. 
DISCOVERY --> PAIRING_AS_SERVER : GATT Connect observer notification
DISCOVERY --> REDISCOVERY : Timeout after a device found with low RSSI

REDISCOVERY : Found a device, but with a low RSSI. About to restart DISCOVERY.
REDISCOVERY --> DISCOVERY : Scanning has stopped.

SELECTING : Advertising and scanning. 
SELECTING : At least one advert from a matching device has been seen.
SELECTING --> CONNECTING : PEER_PAIR_LE_TIMEOUT_FROM_FIRST_SCAN, single device found
SELECTING --> DISCOVERY : PEER_PAIR_LE_TIMEOUT_FROM_FIRST_SCAN, no suitable device found
SELECTING --> PAIRING_AS_SERVER : GATT Connect observer notification

CONNECTING: Creating a connection to discovered device
CONNECTING --> PAIRING_AS_CLIENT : CON_MANAGER_TP_CONNECT_IND

PAIRING_AS_SERVER : Bluetooth pairing and encryption
PAIRING_AS_SERVER --> NEGOTIATE_C_ROLE : Pairing successful

PAIRING_AS_CLIENT : Bluetooth pairing and encryption
PAIRING_AS_CLIENT --> NEGOTIATE_P_ROLE : Pairing successful

NEGOTIATE_P_ROLE: Set up as GATT client for root key
NEGOTIATE_P_ROLE: Challenge the other device
NEGOTIATE_P_ROLE: Send root keys
NEGOTIATE_P_ROLE --> COMPLETED : GATT_ROOT_KEY_CLIENT_WRITE_KEY_IND

NEGOTIATE_C_ROLE: Wait for other device to send keys using the root key service
NEGOTIATE_C_ROLE --> COMPLETED_WAIT_FOR_DISCONNECT : GATT_ROOT_KEY_SERVER_KEY_UPDATE_IND

COMPLETED_WAIT_FOR_DISCONNECT: Wait for other device to disconnect
COMPLETED_WAIT_FOR_DISCONNECT --> DISCONNECTING : Timeout waiting for other device to disconnect, disconnect link
COMPLETED_WAIT_FOR_DISCONNECT --> INITIALISED : CON_MANAGER_TP_DISCONNECT_IND, link disconnected

COMPLETED: Peer paired
COMPLETED: Disconnect link
COMPLETED --> DISCONNECTING : Automatic

DISCONNECTING: Waiting for disconnection to complete
DISCONNECTING --> INITIALISED : CON_MANAGER_TP_DISCONNECT_IND, link disconnected

@enduml
